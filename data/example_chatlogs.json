[{"timestamp": "2016-08-30T00:07:13.884057+00:00", "message": "Druid05: you mean like in your virtualbox VM where you're running docker?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:08:14.359341+00:00", "message": "shruggar: making /var/run/docker.sock available inside a container isn't running docker inside of docker, it's literally talking to the same already-running docker daemon.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:08:49.475861+00:00", "message": "now, with ec2's container service, it's possible that they try to detect that and run it through some weird magic to avoid you getting too much control of their systems", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:09:11.220375+00:00", "message": "but that's just speculation on my part-- I haven't actually used their container service.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:09:37.939127+00:00", "message": "programmerq: i want a isolated container, the container can connect only to docker host 'lan only' ip, is possible?", "datatype": "message", "nick": "Druid05"}, {"timestamp": "2016-08-30T00:09:58.098042+00:00", "message": "Druid05: there's --net=host", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:10:02.269659+00:00", "message": "not exactly what you are asking for", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:10:06.839179+00:00", "message": "actually, not at all", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:10:11.993932+00:00", "message": "hmmm, let me think for a moment", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:10:17.250037+00:00", "message": "I'm curious what your usecase is", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:11:14.652659+00:00", "message": "programmerq: yes, that is my goal. Running the docker *client* inside of docker. But I haven't been able to work out where the inconsistency lies. According to \"docker inspect\", the socket appears to be the same", "datatype": "message", "nick": "shruggar"}, {"timestamp": "2016-08-30T00:11:30.888469+00:00", "message": "shruggar: yeah, inspect will look the same", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:11:35.034346+00:00", "message": "programmerq: I want to allow access to outside just by client PROXY, where proxy is forwarded by host ip", "datatype": "message", "nick": "Druid05"}, {"timestamp": "2016-08-30T00:13:02.973272+00:00", "message": "programmerq: so , the client can not connect outside using machine ip, and can not access other IP's from docker0/etc", "datatype": "message", "nick": "Druid05"}, {"timestamp": "2016-08-30T00:14:07.046345+00:00", "message": "or more simple, just a private LAN, container -> host", "datatype": "message", "nick": "Druid05"}, {"timestamp": "2016-08-30T00:14:08.704877+00:00", "message": "Druid05: hmmm. what's the motivation? genuinely curious why you'd want/need to do that", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:14:27.106270+00:00", "message": "programmerq: so you think the docker daemon which is installed by default on ECS-optimised instances is modified so as to detect connections from ECS-launched containers? I'm not even sure how that would be exposed via Docker's API", "datatype": "message", "nick": "shruggar"}, {"timestamp": "2016-08-30T00:14:58.961483+00:00", "message": "shruggar: whatever is running on *their* /var/run/docker.sock would be the magicness that does stuff. again, that's speculation on my part and I don't know for sure.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:15:19.012465+00:00", "message": "Druid05: hmmm, interesting. I'm still curious why you'd want to do *that*. my guess is", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:15:25.032475+00:00", "message": "programmerq: i want to give shell access to the box, and i dont like ideea to use my IP address or to attack my internal network", "datatype": "message", "nick": "Druid05"}, {"timestamp": "2016-08-30T00:15:41.764710+00:00", "message": "that you are trying to replicate some corporate environment and want to test a proxy setup", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:16:05.684480+00:00", "message": "Druid05: it's very doable to completely disable networking: docker run --net=none", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:16:34.557670+00:00", "message": "and I've got one other idea too. hang on", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:16:35.929664+00:00", "message": "programmerq: maybe using file socket networking? = )", "datatype": "message", "nick": "Druid05"}, {"timestamp": "2016-08-30T00:16:48.055009+00:00", "message": "honestly, that'd work, but it's a bit nuts.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:18:13.991337+00:00", "message": "programmerq: when i set docker container without networking, if client configure network manually .. (like docker0 default range) will not work, true?", "datatype": "message", "nick": "Druid05"}, {"timestamp": "2016-08-30T00:18:15.373044+00:00", "message": "Druid05: basically, my idea is to do a 'docker network create' command that creates a bridge network that has the egress stuff disabled.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:18:43.664138+00:00", "message": "I'm curious what you are running that you mistrust so much", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:18:57.623150+00:00", "message": "if you weren't using docker, how would you run this process and get those protections?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:20:23.141948+00:00", "message": "Druid05: the problem with my idea is that I can't remember what the magic option might be to pass in that could disable the gateway", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:21:25.862256+00:00", "message": "but once you get that theoretical network created, any container connected to it would only be able to communicate with other stuff on that network-- other containers that are explicitly connected to it (if any), as well as the ip of the bridge on the host.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:21:31.106954+00:00", "message": "programmerq: createing a new bridged adapter and after this blocking everything , just allowing connection to gateway IP, can work too?", "datatype": "message", "nick": "Druid05"}, {"timestamp": "2016-08-30T00:22:08.981251+00:00", "message": "Druid05: yeah, but you're usecase seems contrived enough that I'm not sure what you are doing is really what you want to do.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:23:21.314161+00:00", "message": "you know?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:23:25.250625+00:00", "message": "but it's intriguing too", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:25:05.158316+00:00", "message": "Is not so advanced thing, i just like protection", "datatype": "message", "nick": "Druid05"}, {"timestamp": "2016-08-30T00:25:27.314730+00:00", "message": "I created a web crawler which will work just with client IP, which will be shared as socks5", "datatype": "message", "nick": "Druid05"}, {"timestamp": "2016-08-30T00:26:08.005603+00:00", "message": "I seem to have lost the docker0 bridge when upgrading my atomic host. Can anyone point me in the direction to get this resolved?", "datatype": "message", "nick": "cognitiaclaeves"}, {"timestamp": "2016-08-30T00:26:18.229769+00:00", "message": "honestly, you can probably just drop some iptables rules on top of what you get out of the box with docker to get you any firewall protections you care about.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:26:24.803545+00:00", "message": "So, the client will have access to outside only trough SOCKS5", "datatype": "message", "nick": "Druid05"}, {"timestamp": "2016-08-30T00:26:39.421810+00:00", "message": "iptables is kind of good at that sort of thing.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:26:55.524394+00:00", "message": "I've got to run though. way past time for me to be done working.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:27:51.945820+00:00", "message": "Is safe to share direct access to docker containers? :/ (Using ubuntu updated everyday)", "datatype": "message", "nick": "Druid05"}, {"timestamp": "2016-08-30T00:29:03.600146+00:00", "message": "hey how can I solve this issue? http://pastebin.com/YBRV08ss", "datatype": "message", "nick": "elisa87"}, {"timestamp": "2016-08-30T00:29:21.401885+00:00", "message": "I guess it completely depends on what you are running. an unauthenticated telnet shell provider? not so much. a TLS-enabled read-only static webserver like nginx serving non-sensitive files intended for the public? probably fine.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T00:45:48.688423+00:00", "message": "Is there any way to build a docker image with the same name as an existing one, and then remove the old one?", "datatype": "message", "nick": "axsuul"}, {"timestamp": "2016-08-30T00:46:00.430142+00:00", "message": "can you please help me with this? http://pastebin.com/2Xqrrs47", "datatype": "message", "nick": "elisa87"}, {"timestamp": "2016-08-30T00:52:28.360463+00:00", "message": "elisa87: service docker start (as root)", "datatype": "message", "nick": "Druid05"}, {"timestamp": "2016-08-30T00:53:51.353697+00:00", "message": "$ sudo service docker start", "datatype": "message", "nick": "elisa87"}, {"timestamp": "2016-08-30T00:53:51.506731+00:00", "message": "start: Job is already running: docker", "datatype": "message", "nick": "elisa87"}, {"timestamp": "2016-08-30T00:53:51.617901+00:00", "message": "ubuntu@ip-172-31-55-180:~$ docker run hello-world", "datatype": "message", "nick": "elisa87"}, {"timestamp": "2016-08-30T00:53:51.617948+00:00", "message": "docker: Cannot connect to the Docker daemon. Is the docker daemon running on this host?.", "datatype": "message", "nick": "elisa87"}, {"timestamp": "2016-08-30T00:53:54.732306+00:00", "message": "Druid05:", "datatype": "message", "nick": "elisa87"}, {"timestamp": "2016-08-30T01:49:49.519631+00:00", "message": "axsuul: no, names are unique", "datatype": "message", "nick": "blooooooo"}, {"timestamp": "2016-08-30T02:51:52.750524+00:00", "message": "when I build brand new images, `docker images` always shows them as being created \"24 hours ago\". Has anyone seen this before?", "datatype": "message", "nick": "mroth"}, {"timestamp": "2016-08-30T02:53:24.277589+00:00", "message": "negative", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T02:57:17.343720+00:00", "message": "Is dockerfile evaludated when container is restarted? or only evaluted when container is created?", "datatype": "message", "nick": "annoymouse4210"}, {"timestamp": "2016-08-30T03:12:34.634513+00:00", "message": "annoymouse4210: a docker file is evaluated on build not stop or start of a container... a build produces an image that you then run", "datatype": "message", "nick": "armando"}, {"timestamp": "2016-08-30T03:13:04.110192+00:00", "message": "armando Thanks for quick answer!", "datatype": "message", "nick": "annoymouse4210"}, {"timestamp": "2016-08-30T03:16:09.051476+00:00", "message": "sure, no problem", "datatype": "message", "nick": "armando"}, {"timestamp": "2016-08-30T04:05:20.981757+00:00", "message": "How do you guys bundle your gems?", "datatype": "message", "nick": "axsuul"}, {"timestamp": "2016-08-30T07:36:57.510607+00:00", "message": "hello", "datatype": "message", "nick": "sumi"}, {"timestamp": "2016-08-30T07:41:57.656511+00:00", "message": "hello) is it only my issue? latest stable docker doesn't work on latest mac OS Sierra Public Beta 7", "datatype": "message", "nick": "lorddaedra"}, {"timestamp": "2016-08-30T08:01:28.397174+00:00", "message": "hi all", "datatype": "message", "nick": "Yaltar"}, {"timestamp": "2016-08-30T09:31:49.697727+00:00", "message": "xsteadfastx: that's not docker related question; u can ask on #ruby or ##ruby about gems..", "datatype": "message", "nick": "disconnected"}, {"timestamp": "2016-08-30T09:32:40.371628+00:00", "message": "disconnected: never asked anything about ruby", "datatype": "message", "nick": "xsteadfastx"}, {"timestamp": "2016-08-30T09:36:29.254711+00:00", "message": "xsteadfastx: sry wrong name :D", "datatype": "message", "nick": "disconnected"}, {"timestamp": "2016-08-30T09:36:32.927636+00:00", "message": "axsuul: ^", "datatype": "message", "nick": "disconnected"}, {"timestamp": "2016-08-30T09:54:55.109955+00:00", "message": "disconnected: np :)", "datatype": "message", "nick": "xsteadfastx"}, {"timestamp": "2016-08-30T09:55:30.972106+00:00", "message": "i have a problem with getting a docker registry up and running. I followed the instructions on docs.docker.com/registry/deploying for a remote registry, but when i try to push an image i get:", "datatype": "message", "nick": "Jesterboxboy"}, {"timestamp": "2016-08-30T09:55:54.049652+00:00", "message": "getsockopt: connection refused", "datatype": "message", "nick": "Jesterboxboy"}, {"timestamp": "2016-08-30T10:13:29.544516+00:00", "message": "Using the ubuntu 16.04 base image, I can't get cron jobs from /etc/crontab to run despite /usr/sbin/cron being executed inside the container. Any idea what might be wrong?", "datatype": "message", "nick": "AppStore"}, {"timestamp": "2016-08-30T10:13:57.097446+00:00", "message": "Let me rephrase: Are there any additional steps needed?", "datatype": "message", "nick": "AppStore"}, {"timestamp": "2016-08-30T10:16:09.294600+00:00", "message": "Is possible to share custom CPU core to docker container?", "datatype": "message", "nick": "Druid05"}, {"timestamp": "2016-08-30T10:18:16.032150+00:00", "message": "Oh yes, --cpuset=0,1..", "datatype": "message", "nick": "Druid05"}, {"timestamp": "2016-08-30T10:36:34.760653+00:00", "message": "I used --cpuset-cpus=1 --cpu-shares=100 but only cpuset-cpus working. is no diff cpu-shares=1024 vs cpu-shares=100, i tested \"md5sum /dev/urandom\" and on both tests 100% usage on CPU", "datatype": "message", "nick": "Druid05"}, {"timestamp": "2016-08-30T10:36:56.710862+00:00", "message": "I misunderstood something about cpu-shares?", "datatype": "message", "nick": "Druid05"}, {"timestamp": "2016-08-30T11:31:29.014849+00:00", "message": "Druid05: --cpu-shares is 'at least this much' https://docs.docker.com/engine/reference/run/#/...", "datatype": "message", "nick": "BKC"}, {"timestamp": "2016-08-30T11:31:39.130553+00:00", "message": "\"When tasks in one container are idle, other containers can use the left-over CPU time. \"", "datatype": "message", "nick": "BKC"}, {"timestamp": "2016-08-30T11:35:49.546949+00:00", "message": "how can i start docker in debug mode or to make it log into a file everything? :)", "datatype": "message", "nick": "giany"}, {"timestamp": "2016-08-30T11:46:17.905617+00:00", "message": "Does anyone here use atomic host? I had the docker bridge (docker0) disappear on upgrade, and I'm wondering how to get it back ...", "datatype": "message", "nick": "cognitiaclaeves"}, {"timestamp": "2016-08-30T11:46:43.517228+00:00", "message": "( Also, I failed to mention that the docker service won't start. )", "datatype": "message", "nick": "cognitiaclaeves"}, {"timestamp": "2016-08-30T11:56:42.401607+00:00", "message": "hey! how can i start containers in specific order on system boot?", "datatype": "message", "nick": "marech"}, {"timestamp": "2016-08-30T12:00:27.786696+00:00", "message": "hi there is a way to list all net aliases (--net-alias option) since im using so much in swarm ?", "datatype": "message", "nick": "primehaxor"}, {"timestamp": "2016-08-30T12:09:04.111582+00:00", "message": "What is the best way to run nginx with PHP; FPM ?", "datatype": "message", "nick": "nindustries"}, {"timestamp": "2016-08-30T12:09:13.819016+00:00", "message": "I see a lot of scripts using a supervisor for php & nginx..", "datatype": "message", "nick": "nindustries"}, {"timestamp": "2016-08-30T12:14:22.397227+00:00", "message": "Hi, can someone help me? After every reboot i get this:", "datatype": "message", "nick": "nffer"}, {"timestamp": "2016-08-30T12:14:28.335465+00:00", "message": "Error response from daemon: Cannot restart container service1: rpc error: code = 6 desc = \"mkdir /run/containerd/490c884e5c45b86e3cb9a42568e2de0b5a9da6ee5fe3d60f49ee8efe7c0c0b0a: file exists\"", "datatype": "message", "nick": "nffer"}, {"timestamp": "2016-08-30T12:24:08.768398+00:00", "message": "nffer it seems that docker didn't stopped well and kept old files during reboot, you can delete it and try to restart your container", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-08-30T12:51:46.093435+00:00", "message": "is there a way to limit the mem/cpu containers use to be a bit lower than max host mem/cpu?", "datatype": "message", "nick": "giany"}, {"timestamp": "2016-08-30T12:55:28.363478+00:00", "message": "Having issue -- ip: Cannot find device \"docker0\" -- when attempting atomic host upgrade. ( http://ask.projectatomic.io/en/question/3827/fa... )", "datatype": "message", "nick": "cognitiaclaeves"}, {"timestamp": "2016-08-30T13:08:16.940035+00:00", "message": "cognitiaclaeves: No idea, maybe the atomic-devs would know", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T13:09:00.808200+00:00", "message": "have any one here have configured haproxy as a reverse proxy in docker", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:09:05.483054+00:00", "message": "?", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:09:05.592836+00:00", "message": "giany: for the memory you can, for the cpu you can limit the number of cpu used but not forbid them to use 100% of this one", "datatype": "message", "nick": "apaze"}, {"timestamp": "2016-08-30T13:11:23.535066+00:00", "message": "Jmainguy: Any idea where I'd go on IRC to ask Atomic Host related questions?", "datatype": "message", "nick": "cognitiaclaeves"}, {"timestamp": "2016-08-30T13:12:13.227677+00:00", "message": "I have to configure a haproxy container for this purpose", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:12:39.106720+00:00", "message": "Now i am completely lost", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:15:41.839113+00:00", "message": "cognitiaclaeves: #atomic", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T13:16:29.712402+00:00", "message": "thorongil: should be the same as haproxy outside docker", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T13:16:51.261495+00:00", "message": "thorongil: basically it listens on a port, then you set redirects and stuff based on hostname and uri's", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T13:17:11.204645+00:00", "message": "nope it's not working", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:17:38.309505+00:00", "message": "whats not working about it", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T13:17:45.943450+00:00", "message": "Jmainguy: You're kidding ... sorry, I didn't check beyond #atomic-host ...", "datatype": "message", "nick": "cognitiaclaeves"}, {"timestamp": "2016-08-30T13:17:53.384155+00:00", "message": "cognitiaclaeves: no worries", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T13:19:01.965683+00:00", "message": "in fact container I am not able to up the container", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:19:22.812468+00:00", "message": "thorongil: docker logs on the failed container reveal anything good?", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T13:20:00.539217+00:00", "message": "it's working as load balancer .", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:20:15.593529+00:00", "message": "but not as a reverse proxy server", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:21:39.611112+00:00", "message": "@Jmainguy:", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:21:41.427718+00:00", "message": "docker-compose logs", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:21:41.615838+00:00", "message": "Attaching to haproxy_haproxy_1, haproxy_weba_1, haproxy_webc_1, haproxy_webb_1", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:21:41.725558+00:00", "message": "haproxy_1 | <7>haproxy-systemd-wrapper: executing /usr/local/sbin/haproxy -p /run/haproxy.pid -f /usr/local/etc/haproxy/haproxy.cfg -Ds", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:21:41.725605+00:00", "message": "haproxy_1 | [ALERT] 242/121230 (6) : parsing [/usr/local/etc/haproxy/haproxy.cfg:7] : cannot find user id for 'haproxy' (0:Success)", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:21:42.410744+00:00", "message": "haproxy_1 | [ALERT] 242/121230 (6) : parsing [/usr/local/etc/haproxy/haproxy.cfg:8] : cannot find group id for 'haproxy' (0:Success)", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:21:45.427869+00:00", "message": "haproxy_1 | [ALERT] 242/121230 (6) : parsing [/usr/local/etc/haproxy/haproxy.cfg:29] : error opening file </etc/haproxy/errors/400.http> for custom error message <400>.", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:21:48.487773+00:00", "message": "haproxy_1 | [ALERT] 242/121230 (6) : parsing [/usr/local/etc/haproxy/haproxy.cfg:30] : error opening file </etc/haproxy/errors/403.http> for custom error message <403>.", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:21:51.447600+00:00", "message": "haproxy_1 | [ALERT] 242/121230 (6) : parsing [/usr/local/etc/haproxy/haproxy.cfg:31] : error opening file </etc/haproxy/errors/408.http> for custom error message <408>.", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:21:54.418568+00:00", "message": "haproxy_1 | [ALERT] 242/121230 (6) : parsing [/usr/local/etc/haproxy/haproxy.cfg:32] : error opening file </etc/haproxy/errors/500.http> for custom error message <500>.", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:21:57.415515+00:00", "message": "haproxy_1 | [ALERT] 242/121230 (6) : parsing [/usr/local/etc/haproxy/haproxy.cfg:33] : error opening file </etc/haproxy/errors/502.http> for custom error message <502>.", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:22:00.433018+00:00", "message": "haproxy_1 | [ALERT] 242/121230 (6) : parsing [/usr/local/etc/haproxy/haproxy.cfg:34] : error opening file </etc/haproxy/errors/503.http> for custom error message <503>.", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:22:03.475987+00:00", "message": "haproxy_1 | [ALERT] 242/121230 (6) : parsing [/usr/local/etc/haproxy/haproxy.cfg:35] : error opening file </etc/haproxy/errors/504.http> for custom error message <504>.", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:22:08.430273+00:00", "message": "haproxy_1 | [ALERT] 242/121230 (6) : Error(s) found in configuration file : /usr/local/etc/haproxy/haproxy.cfg", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:22:08.816173+00:00", "message": "...", "datatype": "message", "nick": "zetab"}, {"timestamp": "2016-08-30T13:22:11.432955+00:00", "message": "haproxy_1 | [ALERT] 242/121230 (6) : Fatal errors found in configuration.", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:22:13.442490+00:00", "message": "haproxy_1 | <5>haproxy-systemd-wrapper: exit, haproxy RC=256", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:23:05.990661+00:00", "message": "thorongil: nextime use pastebin or gist if its longer than a line or so", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T13:23:25.846286+00:00", "message": "thorongil: looks like it doesnt like your haproxy.cfg, its missing files and users its looking for", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T13:24:11.644767+00:00", "message": ":(", "datatype": "message", "nick": "thorongil"}, {"timestamp": "2016-08-30T13:26:19.993322+00:00", "message": "=/", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T13:35:00.299626+00:00", "message": "thorongil: use a pastebin", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-30T13:35:17.885904+00:00", "message": "in the future", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-30T14:16:59.136080+00:00", "message": "Hi, how do I go about specifying an IP to be used by a container using docker-compose", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:17:57.514551+00:00", "message": "Where would you like to use it for?", "datatype": "message", "nick": "SirMikkalot"}, {"timestamp": "2016-08-30T14:17:59.945295+00:00", "message": "What specify key am I suppose to used", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:18:06.584732+00:00", "message": "with other containers", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:18:09.644573+00:00", "message": "privately", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:18:25.956091+00:00", "message": "saying privately might have confused you there", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:18:33.719196+00:00", "message": "but I'm just looking to have it used by other containers", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:18:44.258084+00:00", "message": "and not to have it as a public interface", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:18:54.602284+00:00", "message": "We solved this by specifying them in the yml files.", "datatype": "message", "nick": "SirMikkalot"}, {"timestamp": "2016-08-30T14:19:23.698593+00:00", "message": "That's where I was hoping to solve this", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:19:28.504415+00:00", "message": "What key should I use?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:19:42.726648+00:00", "message": "I know there is an ip option with the run command", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:19:55.802839+00:00", "message": "And in a shell script, using sed or something, replacing a variable in the yml", "datatype": "message", "nick": "SirMikkalot"}, {"timestamp": "2016-08-30T14:20:44.489736+00:00", "message": "No", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:20:46.474259+00:00", "message": "I see, since we use Kubernetes, we have DNS :p But you can use https://docs.docker.com/compose/compose-file/#/... - I guess?", "datatype": "message", "nick": "SirMikkalot"}, {"timestamp": "2016-08-30T14:20:47.906765+00:00", "message": "no shell script is to be used", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:21:01.793248+00:00", "message": "That would only work if you know the IPs", "datatype": "message", "nick": "SirMikkalot"}, {"timestamp": "2016-08-30T14:23:12.908450+00:00", "message": "SirMikkalot: Know what ips? I do know what IP I want to set it as", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:23:26.990450+00:00", "message": "SirMikkalot: And this is my point. I'd like to use static ips for the containers", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:23:41.928528+00:00", "message": "A security benchmark has recommnend not to use wildcare ips", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:23:44.053521+00:00", "message": "wildcard", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:24:22.636199+00:00", "message": "I'm sorry, I read your question wrong :)", "datatype": "message", "nick": "SirMikkalot"}, {"timestamp": "2016-08-30T14:25:14.190003+00:00", "message": "Yeah", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:25:23.420907+00:00", "message": "It says to bind incomming container traffic to a specific host interface", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:27:11.282409+00:00", "message": "This seems like ti should be common practice in Docker", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:44:49.618403+00:00", "message": "What does setting a container as read-only do?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:44:55.962214+00:00", "message": "Does it merely stop it from writing in itself?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:45:02.784202+00:00", "message": "Does it stop it from being able to write to other containers", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T14:49:33.049035+00:00", "message": "purope: sets the rootfs in the container to read-only", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T14:51:22.676671+00:00", "message": "im new to docker, just wanted to try swarm, i wanted to know how to start docker daemon libnetwork", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T14:51:41.644279+00:00", "message": "im using docker 1.12.1", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T14:53:06.135202+00:00", "message": "cartik: Are you asking how to start docker?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T14:53:28.001772+00:00", "message": "cpuguy83, yes", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T14:53:50.642631+00:00", "message": "cartik: What platform are you on?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T14:54:11.218252+00:00", "message": "when i started it normally i had issues while trying to create overlay network", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T14:54:18.786681+00:00", "message": "centos 7", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T14:54:27.472254+00:00", "message": "cartik: What sort of troubles?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T14:56:03.585614+00:00", "message": "cpuguy83, umm any ideas how to start containers in specific order? liek first php then nginx?", "datatype": "message", "nick": "marech"}, {"timestamp": "2016-08-30T14:56:16.796463+00:00", "message": "marech: docker start php && docker start nginx", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T14:56:40.423966+00:00", "message": "cpuguy83, umm dont looks liek for production :(", "datatype": "message", "nick": "marech"}, {"timestamp": "2016-08-30T14:57:03.996053+00:00", "message": "marech: If you have one container that depends on another one, you should build that into the container startup", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T14:57:35.317465+00:00", "message": "e.g., if you have a webapp that needs to talk to a database, don't have the webapp fail to start just b/c it can't reach the database", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T14:57:40.388285+00:00", "message": "Have it retry", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T14:57:51.946493+00:00", "message": "cpuguy83, ahaa, so smthn like systemd then.. like start container as service", "datatype": "message", "nick": "marech"}, {"timestamp": "2016-08-30T14:58:06.708055+00:00", "message": "yea i know what you mean", "datatype": "message", "nick": "marech"}, {"timestamp": "2016-08-30T15:00:12.951386+00:00", "message": "cpuguy83, let me recreate the scenario and update you", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T15:00:47.322057+00:00", "message": "Should busybox data container exit immediately? I have it linked to another container that should read the contents of a file upon the busybox container", "datatype": "message", "nick": "LUFC"}, {"timestamp": "2016-08-30T15:01:14.389760+00:00", "message": "Don't use data-containers", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:01:27.994659+00:00", "message": "There is `docker volume <cmd>` now", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:02:23.183956+00:00", "message": "But is it not best practice to have the data on a separate container? It can then be shared between hosts and containers?", "datatype": "message", "nick": "LUFC"}, {"timestamp": "2016-08-30T15:03:34.248014+00:00", "message": "Not at all", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:03:50.846249+00:00", "message": "The whole concept of a data container was so you can reference a volume after the main container has been removed", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:03:57.965308+00:00", "message": "That was before there was volume management built in", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:04:37.704619+00:00", "message": "cpuguy83: Yes but what does setting teh rootfs in the container as read-only do?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T15:04:50.912559+00:00", "message": "What is it read-only for?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T15:05:11.908166+00:00", "message": "I am trying to achieve several tomcat containers that read a WAR file from a single place. Then if the WAR file is updated the tomcat containers are not touched", "datatype": "message", "nick": "LUFC"}, {"timestamp": "2016-08-30T15:05:20.152082+00:00", "message": "purope: it makes it so the processes in the container can't write to the rootfs", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:07:19.274881+00:00", "message": "So this wouldn't work in a mysql container then?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T15:07:34.034849+00:00", "message": "cpuguy83, when i start docker using systemctl start docker im getting Cannot connect to the Docker daemon. Is the docker daemon running on this host?", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T15:07:41.887074+00:00", "message": "http://pastebin.com/uurpx9Gn", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T15:08:21.672068+00:00", "message": "so i stopped the service and started using sudo nohup docker daemon -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock &", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T15:08:43.758496+00:00", "message": "on both the nodes", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T15:09:11.138882+00:00", "message": "purope: It would work b/c generally you'd have mysql write to a volume", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:10:11.917749+00:00", "message": "but by doing this i had trouble while creating the overlay network", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T15:11:07.990326+00:00", "message": "Hi - I just found out that docker stack is still experimental. Anyone have any idea when will it be \"generally available\"?", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T15:11:16.455776+00:00", "message": "cpuguy83: I don't really understand how this works. MySQL can use a .sql file in a volume, and if I were to import it using something like mysql -u root -pblah < mysqlcrap.sql", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T15:11:22.127656+00:00", "message": "This would import the sql data into mysql", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T15:11:30.793692+00:00", "message": "but how would I go about making myslq write to the volume?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T15:13:45.342205+00:00", "message": "Is a data volume container different to the old data containers? https://docs.docker.com/engine/tutorials/docker...", "datatype": "message", "nick": "LUFC"}, {"timestamp": "2016-08-30T15:14:55.896639+00:00", "message": "is there any reason why custom TLS handshake would not work though a docker-nized service?", "datatype": "message", "nick": "gajus"}, {"timestamp": "2016-08-30T15:15:00.698980+00:00", "message": "LUFC, which is the old one?", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T15:16:25.800968+00:00", "message": "I am willing to run all my desktop apps on a container, e.g, thunderbird. I found a thunderbird image on docker hub, but in the usage it places the config folder in a volume. But ideally I would like to have a dockerfile where I could pass my login and password and it creates an image with everything configured for me, is it possible? Or something similar?", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T15:16:57.109903+00:00", "message": "purope: This already happens automatically if you are using the `mysql` image", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:17:02.702184+00:00", "message": "I am getting this error when trying to make a TLS handshake with an app running in a container", "datatype": "message", "nick": "gajus"}, {"timestamp": "2016-08-30T15:17:03.033553+00:00", "message": "https://gist.github.com/gajus/bb3c8b95627ec50bb...", "datatype": "message", "nick": "gajus"}, {"timestamp": "2016-08-30T15:17:09.815769+00:00", "message": "without the container it is working absolutely fine", "datatype": "message", "nick": "gajus"}, {"timestamp": "2016-08-30T15:17:18.119744+00:00", "message": "purope: Mysql writes all it's stuff to a dir on disk... /var/lib/mysql/... typically", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:17:20.268346+00:00", "message": "koika, cpuguy83 said that data containers should not be used, and volumes should be.", "datatype": "message", "nick": "LUFC"}, {"timestamp": "2016-08-30T15:17:37.403731+00:00", "message": "purope: So... `docker run -v /var/lib/mysql` will make mysql write to a volume", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:18:46.355659+00:00", "message": "Hi - I just found out that docker stack is still experimental. Anyone have any idea when will it be \"generally available\"?", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T15:18:58.492093+00:00", "message": "cpuguy83, sorry got disconnected", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T15:19:34.831229+00:00", "message": "cartik: No idea what you are trying to do... but docker is just a service like any other.", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:19:40.724968+00:00", "message": "It listens on a socket at /var/run/docker.sock", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:19:48.786151+00:00", "message": "Socket is, by default only accessible to the root user", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:20:29.771845+00:00", "message": "cartik: If you are wanting to use the new swarm-mode in docker 1.12 this is different than the docker-swarm tutorials", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:20:30.514103+00:00", "message": "im executing as root user only", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T15:21:00.614411+00:00", "message": "If the service does not start, check the logs from journalctl", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:21:55.564556+00:00", "message": "Can you have a container that holds binaries which can be updated? Then other containers mount it and read the binaries", "datatype": "message", "nick": "LUFC"}, {"timestamp": "2016-08-30T15:22:18.010603+00:00", "message": "LUFC: Anything is possible... however this sounds very wrong.", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:23:26.396002+00:00", "message": "cpuguy83, do you suggest packaging the binaries with the image that will run them?", "datatype": "message", "nick": "LUFC"}, {"timestamp": "2016-08-30T15:24:08.309964+00:00", "message": "cpuguy83, or is there another alternative?", "datatype": "message", "nick": "LUFC"}, {"timestamp": "2016-08-30T15:25:28.073436+00:00", "message": "Yes, package the binaries in the image", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:25:53.371787+00:00", "message": "cpuguy83, any idea on how to solve sudo docker network create -d overlay mynet", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T15:25:53.577273+00:00", "message": "Error response from daemon: datastore for scope \"global\" is not initialized", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T15:26:33.086437+00:00", "message": "cartik: Are you trying to run classic swarm, or some-mode from docker 1.12?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:27:15.897982+00:00", "message": "wanted to try swarm mode only", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T15:27:45.942993+00:00", "message": "but docker network create is it not swarm mode?", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T15:28:09.305287+00:00", "message": "cartik: First you have to `docker swarm init`", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:28:47.784158+00:00", "message": "what is the point of runing redis in a swarm like this I'm asking myself: https://docs.docker.com/engine/swarm/swarm-tuto...", "datatype": "message", "nick": "adac"}, {"timestamp": "2016-08-30T15:30:01.578817+00:00", "message": "adac: Probably b/c it's a go-to tiny image that actually does something.", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T15:30:41.529844+00:00", "message": "cpuguy83, that is an explanation :)", "datatype": "message", "nick": "adac"}, {"timestamp": "2016-08-30T15:38:16.261552+00:00", "message": "would anyone here be able to explain the fields for the docker plugin on phpstorm?", "datatype": "message", "nick": "ash_workz"}, {"timestamp": "2016-08-30T15:41:29.675394+00:00", "message": "Hi folks. I think I'm missing something obvious here- how does one expose the ports on a container to another container using the Kitematic UI?", "datatype": "message", "nick": "Karunamon"}, {"timestamp": "2016-08-30T15:41:47.857171+00:00", "message": "cpuguy83, thanks the init did the tric", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T15:42:07.813580+00:00", "message": "im able to create overlay network :)", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-30T15:42:54.413622+00:00", "message": "I am utterly confused whats going on with my docker instance..", "datatype": "message", "nick": "gajus"}, {"timestamp": "2016-08-30T15:43:00.673659+00:00", "message": "`RUN npm config set loglevel warn && npm config get loglevel` returns \"info\"", "datatype": "message", "nick": "gajus"}, {"timestamp": "2016-08-30T15:48:49.178971+00:00", "message": "though this looks like npm problem", "datatype": "message", "nick": "gajus"}, {"timestamp": "2016-08-30T15:49:52.946761+00:00", "message": "doesn't the mysql container use docker-entrypoint-initdb.d", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T15:53:48.427665+00:00", "message": "I still haven't figured out how to specify ips to be used by containers", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T15:54:11.799505+00:00", "message": "I tried using the ports: key to do so in docker-compose by I got errors saying the IP was already being used", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:02:11.587686+00:00", "message": "purope: Why do you want to specify the IP?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T16:03:44.010167+00:00", "message": "Karunamon: I don't think you can really do this.", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T16:04:06.632997+00:00", "message": "Karunamon: Usually you wouldn't expose specific ports between containers, you'd have them share a network and use normal ports", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T16:04:42.394671+00:00", "message": "But kitematic doesn't really do multi-container apps", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T16:05:10.243461+00:00", "message": "Volume plugin question - the GlusterFS plugin that is linked as the official one is marked unmaintained on the Github repo", "datatype": "message", "nick": "LiftedKilt"}, {"timestamp": "2016-08-30T16:05:10.660196+00:00", "message": "https://github.com/calavera/docker-volume-glust...", "datatype": "message", "nick": "LiftedKilt"}, {"timestamp": "2016-08-30T16:05:35.931021+00:00", "message": "is there a preferred fork that I should be looking at?", "datatype": "message", "nick": "LiftedKilt"}, {"timestamp": "2016-08-30T16:06:11.869702+00:00", "message": "cpuguy83: I figured that would help with the warning message presented by Docker", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:06:23.808001+00:00", "message": "the Docker security benchmark that i've ran", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:07:23.955381+00:00", "message": "Warning: Bind incomming traffic to a specific host interface", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:07:47.184281+00:00", "message": "then says containers ports a bound to a wildcare I.P 0.0.0.0", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:08:04.081503+00:00", "message": "So if I can change the IP to static instead of wildcard, I may be able to resolve that error", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:08:36.003161+00:00", "message": "purope: docker run -p <ip>:<port>:<port> instead of -p <port>:<port>", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:08:41.941690+00:00", "message": "and resolve any errors of containers micking other containers by using it's name without the specified ip", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:09:01.014897+00:00", "message": "programmerq: I thought it might have been the port: key", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:09:01.685411+00:00", "message": "0.0.0.0 is the [tunable] default that published ports bind to if you don't specify one explicitly.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:09:22.132682+00:00", "message": "cpuguy83: So I'd have to set up something by hand with the CLI and `docker network`?", "datatype": "message", "nick": "Karunamon"}, {"timestamp": "2016-08-30T16:09:23.176308+00:00", "message": "but you're kind of asking about both published ports and inter-container communication at the same time-- they're not the same thing.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:10:29.700256+00:00", "message": "ops, don't mean to cause confusion", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:10:52.522815+00:00", "message": "I'm merely looking to help harden my containers", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:12:45.187871+00:00", "message": "programmerq: I've tried using the -p option but when I specify the ip to be used by most containers, that ip doesn't actually get used.", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:12:58.418962+00:00", "message": "And I get errors with most containers saying that ip is already being used", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:21:17.675169+00:00", "message": "purope: what IP are you specifying? You should be specifying an ip address on the host", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:21:45.069580+00:00", "message": "so if my host has eth0 with 1.2.3.4, I could do `docker run -p 1.2.3.4:80:80` to publish the container port 80 to port 80 on 1.2.3.4.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:22:07.721153+00:00", "message": "when specifying what ip to listen on, 0.0.0.0 has the special meaning that says to listen on _all_ host interfaces.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:22:36.658583+00:00", "message": "if you have something listening on port 80 on 1.2.3.4 already, then a failure would be expected if you tried starting a container with -p 1.2.3.4:80:80", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:25:51.143120+00:00", "message": "programmerq: I see. But if there are containers taht are communicating locally/privately, Docker has a tendency to use its 172.0.20.X ips", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:25:58.396985+00:00", "message": "It's these ips that was looking to specify", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:26:18.543048+00:00", "message": "I'd like to be able to replace X with a specific ip, instead of having to use the wildcards.", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:29:37.134935+00:00", "message": "yea?", "datatype": "message", "nick": "Igel"}, {"timestamp": "2016-08-30T16:29:42.280443+00:00", "message": "purope: again, you're mixing up talking about port publishing and intercontainer communication.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:30:01.115562+00:00", "message": "you can publish ports to 172.0.20.1", "datatype": "message", "nick": "Igel"}, {"timestamp": "2016-08-30T16:30:02.514478+00:00", "message": "the bench is talking about the published ports only", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:30:14.553593+00:00", "message": "andhave all the containers communicate to the IP directly", "datatype": "message", "nick": "Igel"}, {"timestamp": "2016-08-30T16:30:15.445580+00:00", "message": "not the ip that docker gives each container", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:30:54.055659+00:00", "message": "or, you can use docker-compose, and link the containers, refer to their bash environement variable name, eg; $WEBSERVER is 172.0.20.5", "datatype": "message", "nick": "Igel"}, {"timestamp": "2016-08-30T16:31:44.863113+00:00", "message": "programmerq: is it the benchmark I'm more worried about", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:31:58.968642+00:00", "message": "But intercontainer communication would probably also be important", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:32:33.144313+00:00", "message": "Igel: That would work if the Bash variable is actually used.", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:33:21.343268+00:00", "message": "programmerq: So I would I only want to look into port publishing for ips that have a public interface? Or for all of them?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:34:17.361312+00:00", "message": "Maybe I'm not seeing the difference between port publishing and intercontainer communicaiton.", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:34:33.371027+00:00", "message": "In the case of private interfaces communicating with each other", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:34:58.653119+00:00", "message": "How should I go about setting a non-wildcard ip for them?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:39:29.796971+00:00", "message": "purope: basically, if you put two or more containers on the same network, they can talk to eachother.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:39:44.498636+00:00", "message": "purope: if you want a servic to be accessible from outside docker, you publish that port", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:39:46.181372+00:00", "message": "for example", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:40:01.381767+00:00", "message": "docker run -d --name web1 nginx:alpine", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:40:10.449478+00:00", "message": "^^ this webserver isn't accessible to the outside world.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:40:24.715609+00:00", "message": "docker run -d --name web2 -p 80:80 nginx:alpine", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:40:44.544521+00:00", "message": "^^ this one is. the container's port 80 has been published to the host's port 80, on all interfaces (0.0.0.0)", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:41:08.184972+00:00", "message": "the bench is advising that you be explicit about what interfaces you publish your ports on, so you would instead do something like this:", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:41:37.355689+00:00", "message": "docker run -d --name web3 -p 1.2.3.4:80:80 nginx:alpine", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:41:59.015690+00:00", "message": "^^ this is the same as web2, but it will make container's port 80 available only on the host's 1.2.3.4 ip address's port 80.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:42:27.773264+00:00", "message": "now, if web2 is still running, the web3 command will fail because \"all interfaces\" would include the 1.2.3.4 ip.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T16:43:50.031590+00:00", "message": "programmerq: programmerq I see. So this may only be useful for containers using the public ip then?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T16:44:20.221930+00:00", "message": "purope: this is advice specifically for published ports, yes.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T17:04:23.486224+00:00", "message": "programmerq: So if I'm using 192.168.99.100 for my public ip for example", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T17:04:36.315743+00:00", "message": "Would would I go able mounting it's port for that ip?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T17:04:57.176358+00:00", "message": "What I get errors when I try to use it saying it's already in use", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T17:05:50.910252+00:00", "message": "I suppose this wouldn't be necessary since containers don't communicate with the public directly themselves when it comes it incomming traffic", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T17:08:48.723024+00:00", "message": "any of you deal with websites? I want to find a nice way to do docker + user editable CMS without using a database. I had been using OctoberCMS with themes (flat file-ish) but file permissions + the need for git makes it complicated. Anyone got a nice setup for this kind of thing?", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:13:47.139413+00:00", "message": "doc|work: are you asking how to use OctoberCMS with Docker?", "datatype": "message", "nick": "ldlework"}, {"timestamp": "2016-08-30T17:20:26.276489+00:00", "message": "how can I remount a volume as rw while my container is running. is it possible?", "datatype": "message", "nick": "grekkos"}, {"timestamp": "2016-08-30T17:24:22.519140+00:00", "message": "the GlusterFS plugin that is linked as the official one is marked unmaintained on the Github repo (https://github.com/calavera/docker-volume-glust...)", "datatype": "message", "nick": "LiftedKilt"}, {"timestamp": "2016-08-30T17:24:24.046958+00:00", "message": "is there a preferred fork that I should be looking at?", "datatype": "message", "nick": "LiftedKilt"}, {"timestamp": "2016-08-30T17:24:34.393395+00:00", "message": "ldlework: no, I've gotten that working fine. It's more to do with people usingflat file CMSes and how they work with docker/git repositories together. I don't want to have the client make changes to the sites, then it gets wiped the next time we push a new image", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:26:21.404997+00:00", "message": "file permissions differences in a development environment also suck because the httpd needs to have write access to the files, so the build process screws things up and git sees permission changes that aren't useful", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:26:39.775275+00:00", "message": "might be able to get around that using groups, but still, wondering if there's a less smelly way of doing this", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:27:27.835429+00:00", "message": "is mounting a volume an option that would work for you?", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-08-30T17:29:03.059278+00:00", "message": "Hi, is there a guide that can help me build a docker image from two different ones? I need X11 and Node.js (plus chrome and java", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:29:59.673915+00:00", "message": "InitHello: I considered that, but I still need to manage the files with git", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:30:17.576134+00:00", "message": "fullstack: I think docker might not be what you want for that", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:30:59.807188+00:00", "message": "fullstack: as far as I know, there's no official support for FROM-ing multiple images", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-08-30T17:32:20.610770+00:00", "message": "ok, whats the correct pattern then? Install node.js, then apt-get install x11 and chrome??", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:36:09.919044+00:00", "message": "fullstack: the first reply *might* generate the effect you're looking for: https://github.com/docker/docker/issues/3378", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-08-30T17:37:28.785887+00:00", "message": "fullstack: docker's not really meant for distributing full systems that way. It's meant for creating useful \"blocks\" that you can fit together", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:38:07.783831+00:00", "message": "e.g. a database goes into a container, a node.js server goes in another, load balancer in another, then you hook them all together.", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:38:12.232189+00:00", "message": "yeah I know, but my use case is consistent with docker cases. It just needs X11,Java,Chrome, and Node.js", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:38:38.979304+00:00", "message": "it is running selenium webdriver test cases against my web app", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:38:43.230079+00:00", "message": "ah", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:38:56.031787+00:00", "message": "I have a programmer who is running Windows and for whatever reason, chromeDriver isn't running on his laptop", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:38:58.425194+00:00", "message": "might it be easiest just to write your own dockerfile?", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:39:22.548308+00:00", "message": "Yes? Is that what I want to do? Is it just \"RUN apt-get update && apt-get install -y <my stuff>\" ?", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:39:27.890404+00:00", "message": "inside my Dockerfile?", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:39:38.390841+00:00", "message": "yes, give or take some complications :)", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:39:53.972576+00:00", "message": "ok", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:40:29.421345+00:00", "message": "I can jump into a Ubuntu 14.04 and manually run apt-get until it works, then write those down, and guess-a-mate a Dockerfile, test it and make changes? Is that the work flow?", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:40:58.782555+00:00", "message": "yep, or you can go straight to a text editor and work from there", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:41:05.015456+00:00", "message": "(or a combination of both)", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:41:21.065497+00:00", "message": "we're both on very slow DSL", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:41:36.526732+00:00", "message": "that's why I'm hesistent. I don't want to apt-get <bunch of files> for each test", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:41:40.198426+00:00", "message": "https://docs.docker.com/engine/userguide/eng-im...", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:41:56.763016+00:00", "message": "thank you for that link, reading it now.", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:41:59.383351+00:00", "message": "no access to something in a datacenter or with a decent connection?", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-08-30T17:42:07.412030+00:00", "message": "yes, but then its headless", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:42:33.444837+00:00", "message": "oh, right", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-08-30T17:42:42.635446+00:00", "message": "can you even do that with docker?", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:42:54.275197+00:00", "message": "an actual X instance)", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:42:55.151553+00:00", "message": "not sure", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:42:59.937929+00:00", "message": "ssh -X", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:43:00.854357+00:00", "message": "?", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:43:15.159289+00:00", "message": "then you have to install ssh, which isn't really meant to be done", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:43:26.789397+00:00", "message": "phusion?", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:43:33.557499+00:00", "message": "what about it?", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:44:11.162844+00:00", "message": "https://github.com/phusion/baseimage-docker#ena...", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:44:16.999682+00:00", "message": "not sure if docker exec -it container /bin/bash supports X", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:44:21.037648+00:00", "message": "fullstack: people do it, but ti", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:44:28.507195+00:00", "message": "*it's not really meant to be done", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:44:54.491009+00:00", "message": "fullstack: http://jpetazzo.github.io/2014/06/23/docker-ssh...", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:45:05.460017+00:00", "message": "not entirely up to date, but still somewhat relevant", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T17:46:01.064186+00:00", "message": "ok, well, I'll make the argument, it is only for the development of the Docker image so I can publish it with ssh turned off. The end result is the results.html output of Protractor/Selenium/Webdriver, which has Chrome screenshots. I just want a 'gulp run-tests' that runs a really long time, but in an environment that is 100% the same between developers", "datatype": "message", "nick": "fullstack"}, {"timestamp": "2016-08-30T17:46:44.126065+00:00", "message": "programmerq: When I use the wildcare assignments for port publishing, everything works well with a 172.20.0.9 ip", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T17:46:49.882770+00:00", "message": "programmerq: wildcard", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T17:47:13.820514+00:00", "message": "programmerq: but when I specify that ip given manually inside my docker-compose file such as: 172.20.0.9:80:80, it fails to work", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T17:47:23.094391+00:00", "message": "saying the ip is already in use", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T17:55:52.078455+00:00", "message": "Hi - I just tryed to create docker registry service. I used command", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T17:55:59.399730+00:00", "message": "docker service create --replicas=2 --mount type=volume,source=registry_volume,target=/var/lib/registry --name registry -p 5000:5000 registry:2", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T17:56:46.183133+00:00", "message": "But when I try to push to it, I push one part and the others are retrying, or pushing, but it always fails and retrys...", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T17:59:50.846749+00:00", "message": "hello guys. Could someone help me ? I am blocked since last friday with this problem. I created a dockerfile. When I launch it locally on my windows docker machine it works. When I start the build in my dedicated server I get the following errors : https://gist.github.com/sebastienvermeille/24d9...", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T18:00:09.090573+00:00", "message": "Err http://security.debian.org stable/updates/main amd64 Packages", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T18:00:09.273226+00:00", "message": "403 Forbidden [IP: 212.211.132.32 80]", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T18:00:21.113815+00:00", "message": "do you have any idea about a way to solve it ? thank you in advance", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T18:01:12.168231+00:00", "message": "I have ran: docker run -p 127.0.0.1:8069:8069 --name odoo --link db:db -t odoo", "datatype": "message", "nick": "hedin"}, {"timestamp": "2016-08-30T18:01:12.278038+00:00", "message": "and now I want to s/127.0.0.1/1921.68.1.2/ without starting all over again... how can I do this ?", "datatype": "message", "nick": "hedin"}, {"timestamp": "2016-08-30T18:01:56.608685+00:00", "message": "hedin: I think you can't", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T18:08:24.704123+00:00", "message": "Hi - I just tryed to create docker registry service. I used command:", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T18:08:24.850297+00:00", "message": "docker service create --replicas=2 --mount type=volume,source=registry_volume,target=/var/lib/registry --name registry -p 5000:5000 registry:2", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T18:08:24.850343+00:00", "message": "But when I try to push to it, it fails like this (one part uploaded succesfully, but other not...)", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T18:08:24.959893+00:00", "message": "http://pastebin.com/4gk8s7wW", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T18:10:38.333898+00:00", "message": "purope: is 172.20.0.9 an ip address on your docker _host_ ?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T18:10:57.924229+00:00", "message": "purope: do you have something already listening on port 80 if you try to connect to 172.20.0.9 from your host?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T18:14:25.977320+00:00", "message": "Hi - I just tryed to create docker registry service. I used command:", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T18:14:26.097428+00:00", "message": "docker service create --replicas=2 --mount type=volume,source=registry_volume,target=/var/lib/registry --name registry -p 5000:5000 registry:2", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T18:14:31.122742+00:00", "message": "But when I try to push to it, it fails like this (one part uploaded succesfully, but other not...)", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T18:14:31.263523+00:00", "message": "http://pastebin.com/4gk8s7wW", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T18:15:22.384787+00:00", "message": "programmerq: Not it's not", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T18:15:35.894096+00:00", "message": "programmerq: It's instead an ip given by the docker host I beleive", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T18:15:43.879341+00:00", "message": "programmerq: It is found by using docekrs service discovery", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T18:19:27.913023+00:00", "message": "How do I disable interprocess-communication while only enabling it for linked containers?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T18:19:31.581925+00:00", "message": "Does this work by default?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T18:25:40.818759+00:00", "message": "Hi! I'm using docker with compose. I'd like to add the current git revision as a file in my built docker container. How would I go about achieving this goal? Any hints or pointers?", "datatype": "message", "nick": "linus_torngren"}, {"timestamp": "2016-08-30T18:25:52.747183+00:00", "message": "purope: okay, again", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T18:25:56.953798+00:00", "message": "when you publish a port", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T18:26:04.551732+00:00", "message": "you can specify an existing IP that belong's to the host", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T18:26:20.584095+00:00", "message": "the whole point of publishing a port is so that something can connect to the host and be serviced by the container's service", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T18:26:29.099338+00:00", "message": "so passing in a container's IP to -p simply doesn't make sense.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T18:26:50.537991+00:00", "message": "if you just need two containers to talk to eachother, put them on the same network and they can", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T18:29:18.119079+00:00", "message": "Error response from daemon: Bad response from Docker engine. On OSX using docker.", "datatype": "message", "nick": "akkad"}, {"timestamp": "2016-08-30T18:30:08.686174+00:00", "message": "akkad: docker-for-mac? is the icon in the menu bar? click on it and choose restart.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T18:30:22.061754+00:00", "message": "yes", "datatype": "message", "nick": "akkad"}, {"timestamp": "2016-08-30T18:30:27.155985+00:00", "message": "k", "datatype": "message", "nick": "akkad"}, {"timestamp": "2016-08-30T18:30:35.849588+00:00", "message": "(and wait that it will start, for me it gives that if you just started it)", "datatype": "message", "nick": "zetab"}, {"timestamp": "2016-08-30T18:30:44.490700+00:00", "message": "had a previous one installed and all worked. but no love yet.", "datatype": "message", "nick": "akkad"}, {"timestamp": "2016-08-30T18:30:49.973092+00:00", "message": "same thing'", "datatype": "message", "nick": "akkad"}, {"timestamp": "2016-08-30T18:32:07.301920+00:00", "message": "programmerq: Ok, then specifying the public ip should work then. But it doesn't considering something is taking it before my Web container.", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T18:32:48.416001+00:00", "message": "reboot/reinstall until it workjs :P", "datatype": "message", "nick": "akkad"}, {"timestamp": "2016-08-30T18:33:20.108485+00:00", "message": "how can I change network bindings on a stopped container ?", "datatype": "message", "nick": "hedin"}, {"timestamp": "2016-08-30T18:35:49.941245+00:00", "message": "anyone know how I can set icc=false and to still have containers be able to communications for example by setting a link between them?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T18:37:26.998952+00:00", "message": "purope: set --link between them", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T18:37:39.765408+00:00", "message": "cpuguy83: Awesome. Thank you.", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T18:37:42.387615+00:00", "message": "purope: But this only applies to the default network", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T18:37:51.510074+00:00", "message": "purope: Should consider using custom networks.", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T18:37:59.942136+00:00", "message": "If you want to things to communicate, put them in the same network", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T18:39:29.964520+00:00", "message": "cpuguy83: Interesting. Is this a long process?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T18:39:43.432537+00:00", "message": "cpuguy83: Will this cause problems with networks communicating with one another?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T18:39:57.505818+00:00", "message": "purope: networks don't communicate with one another, containers do", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T18:40:01.696635+00:00", "message": "network are for segmentation", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T18:40:20.414432+00:00", "message": "docker network create foo && docker run --network foo ...", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T18:40:40.958089+00:00", "message": "Two containers in the same network can talk to each other. They can discover each other by DNS and are load balanced if applicable.", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T18:40:58.507978+00:00", "message": "Containers can be part of as many networks as you want.", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T18:41:33.181714+00:00", "message": "cpuguy83: Interesting", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T18:41:47.123445+00:00", "message": "cpuguy83: Should I remove some of the networks from the default network", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T18:43:10.271414+00:00", "message": "containers", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-30T18:43:57.382007+00:00", "message": "how can one debug docker errors on osx?", "datatype": "message", "nick": "akkad"}, {"timestamp": "2016-08-30T18:44:36.479156+00:00", "message": "cpuguy83: Hi - I was trying to create docker regsitry service. I used command \"docker service create --replicas=2 --mount type=volume,source=registry_volume,target=/var/lib/registry --name registry -p 5000:5000 registry:2\". I cant push to it. the output of push command is: http://pastebin.com/4gk8s7wW. In logs of service, I found \"invalid token\" me", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T18:44:36.609686+00:00", "message": "ssage. Any ideas how to solve it?", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T18:45:28.805570+00:00", "message": "when you install docker on linux how do you remove the 'sudo' requirement? I was reading something about creating a new user for docker but then it said there were some security implications or something?", "datatype": "message", "nick": "grekkos"}, {"timestamp": "2016-08-30T18:45:45.397643+00:00", "message": "slunatecqo: 'blob upload unknown' happens when you have multiple registry instances not using the same storage backend.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T18:45:54.699832+00:00", "message": "in this case, it looks like you have two local folders on two nodes", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T18:46:00.688011+00:00", "message": "slunatecqo: I'm also trying to run a registry :| if you figure it out let me know. I'm having some weird issues telling me there's no such host", "datatype": "message", "nick": "grekkos"}, {"timestamp": "2016-08-30T18:46:11.137671+00:00", "message": "so your blob gets pushed to one, and the other doesn't have it, hence 'blob upload unknown'", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T18:46:18.737508+00:00", "message": "cpuguy83: cpuguy83 right, ok", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T18:46:24.109556+00:00", "message": "cpuguy83: man, I could really use a good tutor", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T18:46:25.544865+00:00", "message": "using something like NFS would be one solution", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T18:46:31.505640+00:00", "message": "using object storage like S3 or swift is another.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T18:46:42.138437+00:00", "message": "cpuguy83: Too many sources provide videos and documentation that don't do a good job when it comes to mixing things for a final build", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T18:47:43.689484+00:00", "message": "cpuguy83: https://thepb.in/p/DRhjL4XDZVycy Both should have the same storage...", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T18:47:59.608621+00:00", "message": "slunatecqo: are those different nodes?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T18:48:31.326338+00:00", "message": "I have only one node", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T18:48:32.596199+00:00", "message": "each node is its own node, so even though it's the same path, unless you've put some sort of file sharing solution in place (like nfs), they are different folders", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T18:48:47.821533+00:00", "message": "hmmm, that's a headscratcher then", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T18:49:23.361356+00:00", "message": "programmerq: https://thepb.in/p/BghPXYv0wAYIY", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T18:50:31.396538+00:00", "message": "programmerq: I read about authorisation with tokens, but I did not set anything like it... Do you think I should paste it as issue to github?", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-08-30T18:50:55.119223+00:00", "message": "slunatecqo: what's the token error you're running into?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:14:10.198923+00:00", "message": "sorry I lost connection.. did someone answer me ? :/", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T19:20:59.887862+00:00", "message": "sbeex: why are you building on your server? You should be able to build locally and push that to your repository", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T19:21:35.685451+00:00", "message": "doc|work: I build it on my server to push on my own registry", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T19:21:52.625712+00:00", "message": "ok, but why?", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T19:21:57.168810+00:00", "message": "because it's private", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T19:22:06.584621+00:00", "message": "no, I mean why aren't you building locally?", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T19:22:20.328879+00:00", "message": "I do it with jenkins", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T19:22:24.676593+00:00", "message": "when my tests are good", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T19:22:27.095011+00:00", "message": "-> build", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T19:22:28.680393+00:00", "message": "else not", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T19:22:35.168234+00:00", "message": "ah, ok", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T19:22:39.490167+00:00", "message": "that makes sense", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T19:22:40.438852+00:00", "message": "anyone around who can help me understand the docker fields in phpstorm?", "datatype": "message", "nick": "ash_workz"}, {"timestamp": "2016-08-30T19:22:58.640905+00:00", "message": ":{", "datatype": "message", "nick": "ash_workz"}, {"timestamp": "2016-08-30T19:23:32.820507+00:00", "message": "sbeex: if you add apt-get upgrade after apt-get update does it work?", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T19:24:26.976626+00:00", "message": "doc|work: it could be but I have another problem now... docker has overidden my iptables settings :( my jenkins is no more available", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T19:24:38.226687+00:00", "message": "I have to fix it first", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T19:24:55.923656+00:00", "message": "I will note that thank you doc|work", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T19:25:07.436029+00:00", "message": "np", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T19:25:36.121914+00:00", "message": "Hi guys, i need some help", "datatype": "message", "nick": "Gotxi"}, {"timestamp": "2016-08-30T19:25:55.103930+00:00", "message": "Im doing a tutorial of docker and im using native windows 10 docker", "datatype": "message", "nick": "Gotxi"}, {"timestamp": "2016-08-30T19:26:23.397063+00:00", "message": "i executed \"docker run -d adejonge/helloworld\" and it should start a webserver in :8080, and docker logs says that", "datatype": "message", "nick": "Gotxi"}, {"timestamp": "2016-08-30T19:26:34.128996+00:00", "message": "but i cannot ping nor see the web", "datatype": "message", "nick": "Gotxi"}, {"timestamp": "2016-08-30T19:27:10.228186+00:00", "message": "docker inspect gave me the ip \"IPAddress\": \"172.17.0.2\" in JSON", "datatype": "message", "nick": "Gotxi"}, {"timestamp": "2016-08-30T19:27:18.814522+00:00", "message": "anything i could do to fix the connectivity?", "datatype": "message", "nick": "Gotxi"}, {"timestamp": "2016-08-30T19:28:30.488610+00:00", "message": "Gotxi: the container ip isn't something you should hit directly", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:28:40.018058+00:00", "message": "since you didn't publish that port, you won't be able to get to it.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:28:59.909235+00:00", "message": "try something more like this: docker run -d -p 8080:8080 adejonge/helloworld", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:29:18.360804+00:00", "message": "that says to publish the container's port 8080 to the host's port 8080 (the order is host:container)", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:29:59.277323+00:00", "message": "the docker-for-windows project includes a piece that looks at published ports on the docker daemon and sets up another forward from your windows host into the hyper-v vm where docker is actually running.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:30:30.388106+00:00", "message": "i (always) want the container's hostname to be capitalized, is best way on start to have a script run that 'fixes' it if -h was specified with a lower case name?", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:30:40.215202+00:00", "message": "<@programmerq> still nothing :(", "datatype": "message", "nick": "Gotxi"}, {"timestamp": "2016-08-30T19:31:06.818291+00:00", "message": "I know I shouldn't care, and making steps not to, but for the time being sadly hostnames matter, even container names", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:32:30.342628+00:00", "message": "okay, so since I'm not getting anywhere with this, I'm gonna reverse document this to myself", "datatype": "message", "nick": "ash_workz"}, {"timestamp": "2016-08-30T19:33:07.901471+00:00", "message": "Gotxi: try it with this container instead: docker run -d --name web -p 8989:80 nginx:alpine", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:33:14.941797+00:00", "message": "and then navigate to http://localhost:8989", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:33:23.256763+00:00", "message": "does it work with that image?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:33:35.353519+00:00", "message": "trying~ give me a sec", "datatype": "message", "nick": "Gotxi"}, {"timestamp": "2016-08-30T19:34:03.552652+00:00", "message": "yep, it worked like a charm", "datatype": "message", "nick": "Gotxi"}, {"timestamp": "2016-08-30T19:34:18.404787+00:00", "message": "Gotxi: must be something weird with your other image then", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:34:42.663695+00:00", "message": "its supposed to be a hello world web demo container, the simplest possible...", "datatype": "message", "nick": "Gotxi"}, {"timestamp": "2016-08-30T19:34:48.976508+00:00", "message": "when one runs `docker-machine env default` on a mac, what does DOCKER_CERT_PATH reference?", "datatype": "message", "nick": "ash_workz"}, {"timestamp": "2016-08-30T19:34:50.865289+00:00", "message": "ok screw it then", "datatype": "message", "nick": "Gotxi"}, {"timestamp": "2016-08-30T19:35:00.577515+00:00", "message": "thanks @programmerq :)", "datatype": "message", "nick": "Gotxi"}, {"timestamp": "2016-08-30T19:35:18.851030+00:00", "message": "Gotxi: I'm a fan of using nginx:alpine since it's an official image, and pretty much always just works. the :alpine gets you the smaller alpine-based version so it downloads nice and quick.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:35:56.503219+00:00", "message": "ok, since you are mentioning alpine, noob question.... it is better alpine or coreos?", "datatype": "message", "nick": "Gotxi"}, {"timestamp": "2016-08-30T19:36:08.248854+00:00", "message": "alpine and coreos have very different goals", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:36:20.942740+00:00", "message": "alpine's goals are to be a minimal, general-purpose linux distro", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:36:46.939115+00:00", "message": "coreos's goal is to be a container host that makes use of systemd and automatic updates (although I admit it's been a while since I played with it)", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:37:21.305299+00:00", "message": "a1", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T19:37:27.889064+00:00", "message": "I like alpine based images because smaller images are easier to shuffle around. the alpine package manager is nice and quick too: apk", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:37:34.566762+00:00", "message": "oh, so coreos is a host OS to run containers only and alpine is a container \"OS\"?", "datatype": "message", "nick": "Gotxi"}, {"timestamp": "2016-08-30T19:37:53.709057+00:00", "message": "Gotxi: alpine has actually been around for 10+ years", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:38:03.974463+00:00", "message": "but it does very well as a base image for containers too", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:38:10.738719+00:00", "message": "in fact, docker hired the creator of alpine.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:38:24.273193+00:00", "message": "and he's been working on alpine versions of the official images", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:38:31.727418+00:00", "message": "including that nginx:alpine image I had you run.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:38:32.588637+00:00", "message": "sounds great, i heard about alpine, but only in docker demos, its working well on production?", "datatype": "message", "nick": "Gotxi"}, {"timestamp": "2016-08-30T19:38:46.518659+00:00", "message": "yeah, it's a mature, stable distro that's been around for quite some time.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:38:57.254416+00:00", "message": "cool i will have to learn more about that", "datatype": "message", "nick": "Gotxi"}, {"timestamp": "2016-08-30T19:39:07.860584+00:00", "message": "thanks a lot, going back to my lessons :) cya!", "datatype": "message", "nick": "Gotxi"}, {"timestamp": "2016-08-30T19:39:48.215461+00:00", "message": "I too first heard of it in the context of docker. ended up installing an alpine box just to learn what a full alpine install was like. it's pretty neat. it comes with a grsec enabled kernel by default, and some of the desktop apps I tried to run had some weirdness due to that.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:39:52.426467+00:00", "message": "oh, he's gone :)", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:40:04.443178+00:00", "message": "clear", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T19:40:08.148345+00:00", "message": "clear", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-30T19:40:29.254946+00:00", "message": "grsec is something I have not thought of in a very long time", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:42:06.960536+00:00", "message": "Any suggestions on manipulating hostname of containers? otherwise I'm just going to have a 'fake it by setting and then starting the app'", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:42:27.665022+00:00", "message": "docker run --hostname ...", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:42:46.184528+00:00", "message": "Right, but I need to ensure if you pass --hostname foo it still translates to FOO", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:42:53.145349+00:00", "message": "Looking at using glusterfs as a persistent storage backend for docker swarm, and I have a quick question. the GlusterFS plugin that is linked to from the docker volume plugin page marked unmaintained on the Github repo (https://github.com/calavera/docker-volume-glust...)", "datatype": "message", "nick": "LiftedKilt"}, {"timestamp": "2016-08-30T19:42:59.939776+00:00", "message": "why wouldn't you just supply FOO ?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:43:02.279657+00:00", "message": "is there a preferred fork that I should be looking at?", "datatype": "message", "nick": "LiftedKilt"}, {"timestamp": "2016-08-30T19:43:14.754297+00:00", "message": "I can't guarantee somebody won't supply foo", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:43:36.942828+00:00", "message": "Ahlee: then it sounds like they don't deserve access to your system if they can't play by your rules-- can you expound on this requirement?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:44:11.773863+00:00", "message": "I'm trying to upload a file to an FTP server using 'ftp' from inside a docker container. For some reason, the ftp 'put' command hangs, but when I enter the exact same commands not from inside a Docker container, it works. Any suggestions?", "datatype": "message", "nick": "amtq"}, {"timestamp": "2016-08-30T19:44:34.775634+00:00", "message": "Sure. Everything internally is identified by all capitals. Mixing in containers, they report info based on hostname, and hostnames with lower case cause interesting artifacts", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:44:38.661331+00:00", "message": "amtq: passive ftp port issues I am guessing", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T19:44:48.776368+00:00", "message": "I have two possible solutions in mind, but none of them are what I would consider to be all of \"correct\", \"easy\", and \"clean\". it's a \"pick two\" situation", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:45:17.196624+00:00", "message": "so physical box over yonder as BAR, container over here as foo (or, rather, 0c30885b6ec2)", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:45:40.805284+00:00", "message": "The only thing I've come up for is to ensure nobody ever messes up and specifies a lower case name, which is just wishful thinking", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:45:53.448853+00:00", "message": "or to be defensive, which best i've come upw tih is to set hostname on container init", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:46:13.298235+00:00", "message": "another option of coruse is to rework it so everything else doesn't care", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:46:15.418446+00:00", "message": "Ahlee: any reason this reporting isn't happening per host instead of per container?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:46:15.717132+00:00", "message": "Jmainguy: can you elaborate? Is there something I can do to my ftp command to make it work?", "datatype": "message", "nick": "amtq"}, {"timestamp": "2016-08-30T19:46:18.684232+00:00", "message": "but that's just not feasible at this time", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:46:26.580351+00:00", "message": "programmerq: legacy requirements", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:46:36.365240+00:00", "message": "a container should be treated as a service, not as a host", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:46:40.132429+00:00", "message": "it's still app specific, app maps to hostname", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:46:43.718182+00:00", "message": "but of course the depends on your app thing", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:46:47.240361+00:00", "message": "amtq: where is the ftp server you are connecting to", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T19:46:51.633030+00:00", "message": "okay, my two ideas", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:46:54.810449+00:00", "message": "amtq: is it on the same host that is running docker?", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T19:47:01.095293+00:00", "message": "let me google the proper things. one moment.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:47:10.730729+00:00", "message": "Jmainguy: no, it is on a different host.", "datatype": "message", "nick": "amtq"}, {"timestamp": "2016-08-30T19:47:42.092184+00:00", "message": "Ahlee: there is this plugin architecture that was introduced back in 1.10ish I think? https://docs.docker.com/engine/extend/plugins_a...", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:48:04.030410+00:00", "message": "but it should be feasible to write a plugin that says \"any container created with a hostname not matching these requirements gets rejected\"", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:48:06.276614+00:00", "message": "amtq: try tailing the ftp log on the ftp server, and see if that reveals anything obvious", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T19:48:24.580110+00:00", "message": "that would be the \"correct\" and \"clean\" way to do it, but it isn't necessarily easy.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:48:36.530936+00:00", "message": "Makes sense", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:48:51.979290+00:00", "message": "I guess my other idea is basically the same, but implemented worse. put something in front of the docker daemon that does the same thing and force everything to connect through that.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:49:04.908058+00:00", "message": "Doesn't fix the 'problem', just adds a protective net around it", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:49:12.717160+00:00", "message": "yeah", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:49:18.178251+00:00", "message": "makes sense. Thanks programmerq.", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:49:36.123897+00:00", "message": "well, there's no other way that I'm aware of to not have hostnames that violate your requirements unless you block that.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:49:42.760127+00:00", "message": "Jmainguy: unfortunately I don't think I have access to the FTP server's logs...", "datatype": "message", "nick": "amtq"}, {"timestamp": "2016-08-30T19:49:55.773821+00:00", "message": "yeah, and i just realized without --privileged i'm not going to be able to set the hostname", "datatype": "message", "nick": "Ahlee"}, {"timestamp": "2016-08-30T19:50:02.473826+00:00", "message": "yeah", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:50:18.584344+00:00", "message": "amtq: ftp will definitly work from inside the container, so I am 99% sure its network related", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T19:50:37.871689+00:00", "message": "amtq: guessing the internal IP of the docker container contacting the ip of the ftp server host somehow arent playing nice", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T19:50:53.412432+00:00", "message": "amtq: I usually saw this with ftp passive ports when I had trouble running an ftp server", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T19:51:24.119277+00:00", "message": "amtq: you could run ftp server in another container, and link the two containers, and try to ftp there", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T19:51:29.272667+00:00", "message": "Jmainguy: so do you think the FTP server has some sort of IP restriction(s)?", "datatype": "message", "nick": "amtq"}, {"timestamp": "2016-08-30T19:51:32.479924+00:00", "message": "amtq: just to test that ftp does work", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T19:51:44.016323+00:00", "message": "oh man, it's been like a decade since I've thought about passive FTP", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:51:50.199552+00:00", "message": "programmerq: its not fun", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T19:52:48.844790+00:00", "message": "amtq: yeah, I would try and get in contact with the guy running the ftp server and see if he can help you troubleshoot", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T19:52:58.048643+00:00", "message": "if I recall correctly, your client will also need to be able to accept a connection", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:53:25.118038+00:00", "message": "let me see if I can whip up an example really quickly.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T19:53:29.954106+00:00", "message": "programmerq++", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T19:56:16.555448+00:00", "message": "Jmainguy: something that is interesting is that my container is a container for Jenkins. Jenkins has an FTP plugin. If I try it via the plugin, the file gets uploaded successfully.", "datatype": "message", "nick": "amtq"}, {"timestamp": "2016-08-30T19:57:11.624387+00:00", "message": "amtq: might be a client config option like programmerq said then", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T19:57:25.268238+00:00", "message": "amtq: so command line ftp is using a config looking for passive or something, and maybe jenkins isnt", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T19:57:46.290075+00:00", "message": "sounds like you got it figured out", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T19:58:20.118377+00:00", "message": "amtq: does that plugin use active or passive?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:01:09.716823+00:00", "message": "programmerq: Passive, it seems: https://wiki.jenkins-ci.org/display/JENKINS/Pub...", "datatype": "message", "nick": "amtq"}, {"timestamp": "2016-08-30T20:01:32.195212+00:00", "message": "programmerq: \"By default passive mode will be used to connect to the FTP Server.\" I have the default.", "datatype": "message", "nick": "amtq"}, {"timestamp": "2016-08-30T20:02:11.595887+00:00", "message": "hm", "datatype": "message", "nick": "dddh_"}, {"timestamp": "2016-08-30T20:02:27.146540+00:00", "message": "trying to specify static ip address for container", "datatype": "message", "nick": "dddh_"}, {"timestamp": "2016-08-30T20:03:02.763425+00:00", "message": "is supported on user defined networks only ?", "datatype": "message", "nick": "dddh_"}, {"timestamp": "2016-08-30T20:07:02.812418+00:00", "message": "amtq: I can't reproduce the issue either.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:07:29.203925+00:00", "message": "curl --ftp-pasv -v -u programmerq ftp://ftp.example.com", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:07:42.107213+00:00", "message": "I just installed a pretty basic vsftpd on an ubuntu system and tested against that", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:08:04.028024+00:00", "message": "the FTP service is on my local network, and my docker container where I ran that curl command is running inside docker-for-mac on my osx host.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:08:14.149706+00:00", "message": "so from the container's point of view, it is double-NAT'd", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:08:31.164656+00:00", "message": "and it still managed to grab the file listing", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:11:35.016068+00:00", "message": "created network, works", "datatype": "message", "nick": "dddh_"}, {"timestamp": "2016-08-30T20:11:53.252518+00:00", "message": "programmerq: did putting a file work?", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T20:12:10.771874+00:00", "message": "let me try that, hang on.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:18:32.465221+00:00", "message": "Jmainguy: yeah, it works both with and without --ftp-pasv from my container.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:18:54.975427+00:00", "message": "wierd, I got nothing", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T20:19:04.236487+00:00", "message": "not all servers and clients are alike though", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:19:07.626295+00:00", "message": "true", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T20:19:11.119815+00:00", "message": "the ftp spec is kind of all over the place", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:19:18.400986+00:00", "message": "and it's honestly weird when I see someone using it", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:19:24.176148+00:00", "message": "running into this message \"Could not reach any registry endpoint\"", "datatype": "message", "nick": "n0n3such"}, {"timestamp": "2016-08-30T20:19:36.322851+00:00", "message": "when trying to publish", "datatype": "message", "nick": "n0n3such"}, {"timestamp": "2016-08-30T20:20:06.324054+00:00", "message": "n0n3such: is the registry/distribution running where you are trying to push to", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T20:20:06.475269+00:00", "message": "sbt-native-packager docker:publish", "datatype": "message", "nick": "n0n3such"}, {"timestamp": "2016-08-30T20:20:13.853330+00:00", "message": "programmerq: Jmainguy: I'm using the plain 'ftp' program, not vsftpd. Does that matter?", "datatype": "message", "nick": "amtq"}, {"timestamp": "2016-08-30T20:20:20.288434+00:00", "message": "n0n3such: are you pushing to docker hub or private repo", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T20:20:25.775706+00:00", "message": "amtq: there are lots of implementations of 'ftp'", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:20:30.973250+00:00", "message": "vsftpd isn't the client, it's the server", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:20:32.544963+00:00", "message": "push to docker hub, private repo", "datatype": "message", "nick": "n0n3such"}, {"timestamp": "2016-08-30T20:20:33.357966+00:00", "message": "amtq: nope, vsftpd is a server", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T20:20:39.541406+00:00", "message": "can you attach to a given network when doing a 'docker build'?", "datatype": "message", "nick": "akkad"}, {"timestamp": "2016-08-30T20:20:44.101461+00:00", "message": "re: squidcache", "datatype": "message", "nick": "akkad"}, {"timestamp": "2016-08-30T20:20:49.644148+00:00", "message": "akkad: no", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:21:10.181093+00:00", "message": "you can specify daemon-level dns options that go inte effect during build, and you can point to a squid cache that way.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:21:15.227157+00:00", "message": "if I have squidcache running a bridge driver user network.", "datatype": "message", "nick": "akkad"}, {"timestamp": "2016-08-30T20:21:25.880360+00:00", "message": "k", "datatype": "message", "nick": "akkad"}, {"timestamp": "2016-08-30T20:21:33.106340+00:00", "message": "Jmainguy push to docker hub, private repo", "datatype": "message", "nick": "n0n3such"}, {"timestamp": "2016-08-30T20:21:45.551986+00:00", "message": "n0n3such: what version of docker are you using to do the push?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:22:09.520062+00:00", "message": "using latest docker plugin for sbt-native-package", "datatype": "message", "nick": "n0n3such"}, {"timestamp": "2016-08-30T20:22:12.852580+00:00", "message": "Jmainguy: When you said \"I got nothing\", do you mean the put doesn't work?", "datatype": "message", "nick": "amtq"}, {"timestamp": "2016-08-30T20:23:16.667718+00:00", "message": "amtq: out of ideas, I still think its somehow network related in your case", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T20:23:24.384249+00:00", "message": "Hi, could someone help me ? my image won't buld... \"unable to fetch\" https://gist.github.com/sebastienvermeille/24d9...", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T20:23:27.551942+00:00", "message": "amtq: but programmerq was unable to reproduce, and I am out of ideas on how to reproduce it", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T20:23:31.205640+00:00", "message": "but on my own machine it works..", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T20:24:38.246413+00:00", "message": "sbeex: it looks like the security.debian.org server is rejecting you with 403.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:25:02.348053+00:00", "message": "programmerq: hmmm but why ? :)", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T20:25:03.790358+00:00", "message": "there are lots of servers that back \"security.debian.org\". maybe one of them is misconfigured, or maybe they've blacklisted you specifically by ip", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:25:18.033290+00:00", "message": "that's going to be more of a question for the debian folks than a docker specific question", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:26:03.523137+00:00", "message": "ok I will go on #debian thank you", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T20:26:30.939896+00:00", "message": "dont think I have eer seen a 403 forbidden from an apt-get before", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T20:26:32.144181+00:00", "message": "thats new", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T20:26:39.135449+00:00", "message": "oh it can happen", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:26:55.516435+00:00", "message": "all sorts of craziness can happen when you've got that many mirrors backing a service like that.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:27:09.906395+00:00", "message": "guess that makes sense", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T20:27:22.417413+00:00", "message": "it is weird though", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:27:25.680381+00:00", "message": "but it works locally ><", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T20:27:25.790191+00:00", "message": "I always wondered how they audited thier mirrors and made sure they kept up to a certain level of service", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T20:27:41.459954+00:00", "message": "sbeex: locally is it pulling from the same mirror?", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T20:27:51.020265+00:00", "message": "no it's not the same country", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T20:28:01.308044+00:00", "message": "sbeex: just because A-B works, doesn't mean that C->D will.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:28:02.921291+00:00", "message": "one is ovh (france) and locally is switzerland", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T20:28:10.739927+00:00", "message": "guessing its just an instance with that mirror", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T20:28:21.455110+00:00", "message": "security.debian.org is going to be backed by B, D, and any number of other endpoints", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:28:38.000574+00:00", "message": "well it does a week I am blocked with that..", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T20:28:43.287891+00:00", "message": "pretty annoying ^^", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T20:29:02.648356+00:00", "message": "all is freshly installed btw", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T20:29:10.614310+00:00", "message": "that's all fine and dandy", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:29:20.455831+00:00", "message": "but it's the security.debian.org server that's giving you the 403", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:29:30.430131+00:00", "message": "not anything that you've done locally", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:29:57.837505+00:00", "message": "you could probably change the mirror you are using to something that works instead of letting the default redirector do its thing", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:30:02.836334+00:00", "message": "it's annoying, but it should work.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:31:59.217967+00:00", "message": "programmerq: with something like that but for debian ? RUN echo \"deb http://archive.ubuntu.com/ubuntu precise main universe\" > /etc/apt/sources.list", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T20:33:17.463639+00:00", "message": "yeah, something like that but for the debian security list. you'll probably need to change instead of add though.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:35:34.647185+00:00", "message": "trying to run nginx on alpine with s6; I get `nginx: [emerg] open() \"/run/nginx/nginx.pid\" failed (2: No such file or directory)`; what am I doing wrong?", "datatype": "message", "nick": "ash_workz"}, {"timestamp": "2016-08-30T20:36:24.707578+00:00", "message": "'docker run -d --name nginx -p 80:80 nginx:alpine' - this seems to work.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:37:58.163348+00:00", "message": "programmerq: is that https://github.com/smebberson/docker-alpine/blo... ?", "datatype": "message", "nick": "ash_workz"}, {"timestamp": "2016-08-30T20:38:12.333817+00:00", "message": "no, that's the official nginx image, alpine tag.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:38:36.253302+00:00", "message": "programmerq: debugging ... my .dockercfg file has https:index.docker.io/v1 as the registry url. I can't ping index.docker.io. Has the registry url changed in the last 6 months ?", "datatype": "message", "nick": "n0n3such"}, {"timestamp": "2016-08-30T20:38:55.341538+00:00", "message": "it is not expected that you will be able to ping that. icmp is disabled.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:39:03.887182+00:00", "message": "k", "datatype": "message", "nick": "n0n3such"}, {"timestamp": "2016-08-30T20:40:08.612110+00:00", "message": "Jmainguy: programmerq: At least I can confirm that both Jenkins FTP and raw ftp are in passive mode...", "datatype": "message", "nick": "amtq"}, {"timestamp": "2016-08-30T20:40:48.011619+00:00", "message": "Jmainguy: programmerq: In the raw ftp version, it hangs for some time after the put, and then I get '421 Service not available, remote server has closed connection'", "datatype": "message", "nick": "amtq"}, {"timestamp": "2016-08-30T20:43:06.334252+00:00", "message": "programmerq: so I am unable to wget https:index.docker.io/v1/search?q=ubuntu. Could that be why I'm getting the 'Could not reach any registry endpoint' msg ?", "datatype": "message", "nick": "n0n3such"}, {"timestamp": "2016-08-30T20:44:32.733828+00:00", "message": "n0n3such: that's not the endpoint that I'd expect to use, no. that url looks made up.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T20:45:16.217324+00:00", "message": "programmerq: what endpoint would you expect to use ?", "datatype": "message", "nick": "n0n3such"}, {"timestamp": "2016-08-30T20:47:44.295715+00:00", "message": "programmerq: so I guess this isn't using a process manager like supervisor or s6", "datatype": "message", "nick": "ash_workz"}, {"timestamp": "2016-08-30T20:48:03.152490+00:00", "message": "programmerq: does that present a PID1 problem?", "datatype": "message", "nick": "ash_workz"}, {"timestamp": "2016-08-30T20:56:34.770046+00:00", "message": "in the case of nginx? not really. nginx cleans up its children afaik", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T21:06:03.422041+00:00", "message": "programmerq: I tryed FROM ubuntu -> same problem", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T21:07:12.043678+00:00", "message": "pfff.. maybe my dedicated server ip is blacklisted from linux mirrors :/", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T21:07:56.002929+00:00", "message": "sbeex: thats pretty wacky", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-08-30T21:09:03.686941+00:00", "message": "I host docker on an esxi server (vm) can this come in consideration ?", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T21:09:13.106587+00:00", "message": "maybe custom nameserver or something?", "datatype": "message", "nick": "sbeex"}, {"timestamp": "2016-08-30T21:24:55.286940+00:00", "message": "Hey, I am trying to run my irc client on a container, but when I open the app, it tries to open /.config instead of /home/myuser/.config, any ideas why? In the docker file I put USER myuser and WORKDIR /home/myuser", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T21:25:14.811311+00:00", "message": "what is $HOME set to?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T21:25:45.980662+00:00", "message": "why should my local $HOME interfer?", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T21:25:53.689132+00:00", "message": "what is $HOME set to in the container?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T21:26:26.956818+00:00", "message": "how can I check that? I used the CMD hexchat and it opens the hexchat directly", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T21:26:42.043195+00:00", "message": "docker inspect <container>", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T21:29:49.273879+00:00", "message": "programmerq, the speck shows \"WorkingDir\": \"/home/docker\", where docker is the myuser", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T21:30:00.281915+00:00", "message": "s/speck/inspect", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T21:30:12.461672+00:00", "message": "working dir != $HOME", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T21:30:34.676363+00:00", "message": "if $HOME isn't populated, and hexchat is configured to put its stuff in $HOME/.config, it'll resolve to /.config", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T21:30:41.424866+00:00", "message": "because $HOME is blank", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T21:30:56.158650+00:00", "message": "right, and I need to populated it in the dockerfile I support", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T21:31:04.375509+00:00", "message": "s/support/suppose", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T21:38:29.968992+00:00", "message": "programmerq, I put ENV HOME /home/docker but it doesn't show in inspect either", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T21:39:30.603711+00:00", "message": "did you build a new image and create a new container with the new image?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T21:42:38.244090+00:00", "message": "Hey, probably an easy question here, but I'm using `-v /mnt/jboss/log:/opt/jboss/wildfly/standalone/log` to persist the logs generated by my wildfly containers, but /mnt is a folder that has a linux mount on it, but docker is reading/writing the underlying folder, beneath the linux mount, which is essentially hidden from the host unless I umount it. Any idea what's going on there? I read some stuff about rprivate/slave but I can seem t", "datatype": "message", "nick": "rpierce"}, {"timestamp": "2016-08-30T21:43:32.806331+00:00", "message": "programmerq, http://pastebin.com/1K7SMhNX my docker file and how I execute it", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T21:44:09.603723+00:00", "message": "koike: okay, did you build a new image once you changed the Dockerfile? did you create a new container with that new image?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T21:44:57.158454+00:00", "message": "programmerq, I executed this: docker build -t docker-hexchat .", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T21:45:14.191451+00:00", "message": "okay, that'll build a new image", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T21:47:13.693333+00:00", "message": "programmerq, and docker inspect <hash> | grep -i home doesn't show the HOME variable", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T21:47:30.932186+00:00", "message": "and what <hash> are you providing?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T21:49:02.908222+00:00", "message": "programmerq, the one that shows after docker run", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T21:49:43.846893+00:00", "message": "okay, and did you do that docker run before or after you build the image with the updated Dockerfile that includes that ENV line?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T21:51:34.037291+00:00", "message": "I included the ENV line, runned build and then run, got the hash id and used it in the inspec", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T21:52:31.103216+00:00", "message": "programmerq, I removed the CMD line in the dockerfile and added an echo $HOME, and in docker logs <container-id> it shows /home/koike instead of /home/docker", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T21:54:11.879939+00:00", "message": "koike: did you escape the variable? it sounds like your local shell resolved it, and then your container command ended up being 'echo /home/koike'", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T21:54:15.238127+00:00", "message": "do env", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T21:54:39.262707+00:00", "message": "if you do 'docker inspect docker-hexchat', do you see it there?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T21:54:40.452206+00:00", "message": "programmerq, make sense, I didn't escape", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T21:55:25.728045+00:00", "message": "docker inspect docker-hexchat | grep -i home -> shows only \"WorkingDir\": \"/home/docker\",", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T21:55:40.476199+00:00", "message": "sounds like your build didn't take then", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T21:55:47.080380+00:00", "message": "pastebin the output of your docker build command?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T21:57:04.805309+00:00", "message": "programmerq, http://pastebin.com/Vdic1cPW", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T21:57:11.949311+00:00", "message": "I get an error in the end about passwd", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T21:58:04.201735+00:00", "message": "but hexchat runs, it just complains that it doesn't have permissions to /.config instead of trying /home/docker/.config", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T22:01:29.145355+00:00", "message": "weird, I tried to docker rmi docker-hexchat but I got this error: Error response from daemon: conflict: unable to remove repository reference \"docker-hexchat\" (must force) - container 5b360f66dd74 is using its referenced image 08492d3c0709", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T22:01:43.098404+00:00", "message": "and docker ps doesn't show any container", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T22:05:08.749957+00:00", "message": "I think I will give up. I tried forced a docker rmi and now when I try to build the image again, the image doesn't show on docker image", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T22:05:30.040377+00:00", "message": "hey guys, is anyone familiar with maven-docker-plugin?", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-08-30T22:05:47.487917+00:00", "message": "koike: yeah, if the build command doesn't complete, that'd explain why changes weren't taking effect.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T22:06:14.959010+00:00", "message": "you'll need to useradd a 'docker' user before you can actually have a user with that name in the container", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T22:06:57.678539+00:00", "message": "'USER docker' doesn't update /etc/passwd, just sets some metadata for use when a container runs, and RUN runs as a container", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T22:07:05.799074+00:00", "message": "normally, you'll put a USER statement near the bottom", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T22:13:44.492077+00:00", "message": "programmerq, I just got it working, I changed USER docker to USER $UID, I am not sure if I need the USER statement, I am testing now if I can remove it", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T22:16:57.112466+00:00", "message": "is it possible to have a volume where if there is nothing there it puts some default files?", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T22:18:30.514144+00:00", "message": "yes, if there is something in that location in the image, it'll populate the blank volume with that", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T22:19:46.284556+00:00", "message": "programmerq, awesome, thanks", "datatype": "message", "nick": "koike"}, {"timestamp": "2016-08-30T22:21:59.101257+00:00", "message": "if docker daemon is started before a partition is mounted, does that affect Docker's ability to see that mount point?", "datatype": "message", "nick": "rpierce"}, {"timestamp": "2016-08-30T22:22:22.531534+00:00", "message": "rpierce: off the top of my head I'm 80% sure that is a \"yes\"", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T22:22:58.062306+00:00", "message": "Meaning you're 80% sure that a mount that is done after daemon start will be invisible to docker", "datatype": "message", "nick": "rpierce"}, {"timestamp": "2016-08-30T22:23:34.403617+00:00", "message": "right", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T22:23:50.617958+00:00", "message": "something about mount namespaces", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T22:25:22.240407+00:00", "message": "@programmerq - thank you, I think we've just verified that, we'll have to shake up the order of our startup to resolve", "datatype": "message", "nick": "rpierce"}, {"timestamp": "2016-08-30T22:49:58.716283+00:00", "message": "is it possible to run a chef confiuration recipe (or set of recipes) in a docker container?", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T22:54:39.357589+00:00", "message": "is it possible? yes. normally though, you'll not want to run CM inside a container. you are going to be better off building new images and using those for the gold standard for what your container should look like.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T22:56:19.343440+00:00", "message": "i'm trying to understand whether if / how docker would be a good solution for a monolithic legacy application. the recipes used to configure the application amount to several thousand lines and several hundred resource blocks.", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T22:57:39.081797+00:00", "message": "i suppose the app itself could be provisioned inside of a docker container", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T22:58:43.883063+00:00", "message": "however, this application has a poor understanding of seperation between binaries and datafiles. thus, it'd be somewhat difficult to create ephemeral images", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T22:58:50.390089+00:00", "message": "*containers", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T22:59:34.447263+00:00", "message": "grill: I could probably talk for too long on the topic, but I'll try to sum it up: you could do it. it will work. you'll lose the advantages of having ephemeral containers by not using ephemeral containers, and that's something docker is kind of good at.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:00:39.492586+00:00", "message": "if you'd like to talk for too long about it, by all means :). i'm trying to understand the costs/benefits of a solution that would include docker", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T23:01:03.537701+00:00", "message": "grill: unfortunately, I have split attention and won't be able to go into it.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:01:32.246201+00:00", "message": "I recommend taking some time to step away from the problem you're trying to solve and learn the \"docker way\"-- spend a day or two learning docker and its tools and ecosystem", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:01:42.269118+00:00", "message": "and then you can make a better decision for how your problem might fit into that.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:01:57.749827+00:00", "message": "grill: sounds like you're trying to make docker do things it wasn't designed to do", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T23:02:04.407030+00:00", "message": "why do you think you even need it?", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T23:02:32.805402+00:00", "message": "doc|work yeah. that's what i'm thinking. i'm trying to make sure my thoughts are correct though", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T23:03:43.314082+00:00", "message": "grill: yeah. One of the key points is you can kill off the containers to upgrade them without impacting your data.", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T23:03:48.202588+00:00", "message": "i've used docker for a few simple webapps, and i like it.", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T23:04:10.662308+00:00", "message": "of course it takes work with most setups, but sounds like you'd need to do some major restructuring if everything is all over the place", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T23:04:20.834701+00:00", "message": "it would be nice to not have to provision a new VM for every instance of the app", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T23:05:01.566927+00:00", "message": "grill: so, in some ways, wordpress is a monolithic legacy application that doesn't separate binaries and data that well (plugins and themes are code that are also kind of state)", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:05:12.926221+00:00", "message": "it might be worth taking a look at the official wordpress image to see how they deal with that", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:05:39.358244+00:00", "message": "programmerq: do you know? What's the rough gist?", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T23:05:40.751594+00:00", "message": "interesting. ok.", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T23:05:48.007606+00:00", "message": "I'm hitting this issue too with a CMS we're using", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T23:06:21.089755+00:00", "message": "doc|work: it puts wordpress into a volume", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:06:33.313170+00:00", "message": "so the image is basically a glorified php container with some code that downloads wordpress", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:06:38.726782+00:00", "message": "hmmm", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T23:06:43.618005+00:00", "message": "not the cleanest, but it gets the job done.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:06:53.111828+00:00", "message": "wordpress is what it is", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:06:54.939965+00:00", "message": "that's one way to approach it I guess...", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T23:06:55.832497+00:00", "message": "i suppose that would be the solution in this case", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T23:07:09.674187+00:00", "message": "not sure it helps with upgrading the application itself though", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T23:07:11.409242+00:00", "message": "and at the end of the day, docker will run anything that can run as a process.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:07:17.447899+00:00", "message": "create container that includes chef + necessary packages. run install via chef", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T23:07:20.292814+00:00", "message": "doc|work: not necessarily, no", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:07:36.892168+00:00", "message": "programmerq: which is pretty much the reason I want to use docker", "datatype": "message", "nick": "doc|work"}, {"timestamp": "2016-08-30T23:08:04.199103+00:00", "message": "it works in the case of wordpress since wordpress has a built-in updater.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:08:47.670625+00:00", "message": "the other approach for something like wordpress would be to disable all the theme/plugin installers somehow, and then bake them into the image", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:09:12.818148+00:00", "message": "the hard part with that is you are walking away from the wordpress's main/official/supported update system, and you have to make up for it-- maybe run daily jenkins builds?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:09:39.467625+00:00", "message": "so, what would the benefit be, aside from not having to provision a VM?", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T23:10:05.882028+00:00", "message": "*not having to provision a discrete VM for every application instance", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T23:15:11.887088+00:00", "message": "grill: speed", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:15:18.463967+00:00", "message": "isolation", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:15:33.987320+00:00", "message": "dropped caps by default, and other security plusses", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:15:51.405851+00:00", "message": "content trust, if you want to", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:15:58.941334+00:00", "message": "same goes if you want to use image scanning", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:17:00.698863+00:00", "message": "where would the speed increases come from aside from not having to provision a VM? bear in mind that i'd still need to run chef once the container is up", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T23:17:14.247576+00:00", "message": "grill: you should run chef to build the image", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:18:13.903365+00:00", "message": "hey, I have an interesting problem with docker-compose scale foo=x ... if I scale=6 -> scale=0 -> scale=1, then the outcome of the last step is scale=6 instead of scale=1", "datatype": "message", "nick": "lisak"}, {"timestamp": "2016-08-30T23:18:29.579661+00:00", "message": "so, run chef to build the base image, deploy, and run chef again to configure the app?", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T23:18:46.975816+00:00", "message": "sure-- or maybe see if you can eliminate that last little bit.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:19:12.354943+00:00", "message": "that's really interesting", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T23:19:15.899947+00:00", "message": "config by environment", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:19:30.495609+00:00", "message": "that's the approach I would take with all my legacy chef stuff", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:19:42.034316+00:00", "message": "granted that is all left at a previous job so it's not my problem", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:19:49.681427+00:00", "message": "don't even know if they still use anything I touched at this point.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:20:41.491541+00:00", "message": "what do you mean by \"config by environment?\"", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T23:21:31.346247+00:00", "message": "environment variable", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:21:44.929344+00:00", "message": "in chef or in docker?", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T23:22:01.722400+00:00", "message": "so the goal will be to get whatever you are running to pay attention to the environment variables", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:22:05.334216+00:00", "message": "so that you don't have to run chef", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:22:26.264637+00:00", "message": "then when you do your 'docker run' of the image produced by your mostly-chefified build process, your thing can just run", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:22:29.959708+00:00", "message": "and you don't have to run chef", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:22:57.426855+00:00", "message": "depending on how much stuff chef is doing, this could be really easy or really hard", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:23:00.911912+00:00", "message": "if it's easy, go for it", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:23:11.966402+00:00", "message": "maybe you could do a chef run, remove chef, and that's your image", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:23:28.218939+00:00", "message": "if it isn't easy, and it's easier to do a chef run at 'docker run' time to configure the app, then do that.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:23:39.596414+00:00", "message": "hm. that's a really interesting approach", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T23:24:27.014130+00:00", "message": "yeah, it's been a while, but I did put a lot of thought into migration paths like what you're describing", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:24:36.998948+00:00", "message": "I actually first heard of docker at chefconf 2013", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:25:03.737953+00:00", "message": "there's a small chance that there's some git blame lines with me in some cookbooks somewhere", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:25:08.152842+00:00", "message": "i'm definitely leaving my current job, but i really think they should try to move over to docker if it makes sense", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T23:25:44.677676+00:00", "message": "selling $newthing to a group of people with an $establishedthing is always hard.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:26:10.857517+00:00", "message": "so, you can set an image up such that environment variables can be used to change portions of the image during run time, right?", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T23:26:35.730565+00:00", "message": "some things can just be told to look at the environment directly", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:26:38.151115+00:00", "message": "some things can't", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:27:02.226329+00:00", "message": "for the things that can't, you basicaly have to render a templated config file", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:27:08.351572+00:00", "message": "or give it a wrapper script", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:27:24.538855+00:00", "message": "so since you're chefified, your chef templates probably already do that.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:27:48.450772+00:00", "message": "anyway, I've got to get going.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-30T23:28:02.153556+00:00", "message": "ok. thanks for chatting. interesting stuff here", "datatype": "message", "nick": "grill"}, {"timestamp": "2016-08-30T23:35:24.144015+00:00", "message": "me is vlose to closing on a sept apartment :)", "datatype": "message", "nick": "jrabbit"}, {"timestamp": "2016-08-30T23:35:34.105606+00:00", "message": "oh fuck wrong channel", "datatype": "message", "nick": "jrabbit"}, {"timestamp": "2016-08-30T23:40:41.667963+00:00", "message": "hey guys, someone have docker running on debian 8.5?", "datatype": "message", "nick": "SamSagaZ"}, {"timestamp": "2016-08-31T00:21:24.253528+00:00", "message": "SamSagaZ: i'm running docker on jessie at home fwiw", "datatype": "message", "nick": "nathanleclaire"}, {"timestamp": "2016-08-31T00:21:26.819871+00:00", "message": "why ?", "datatype": "message", "nick": "nathanleclaire"}, {"timestamp": "2016-08-31T00:27:08.354541+00:00", "message": "trying to get my docker daemon to run with a tcp socket, i've added \"-H tcp://localhost:2375\" to DOCKER_OPTS in /etc/default/docker but i'm not seeing any connections listening when i run a `netstat -ntl | grep 2` as far as logs go all seems fine, i can see that docker started in syslog... any idea where else i may look to get this working? TIA", "datatype": "message", "nick": "hunger_"}, {"timestamp": "2016-08-31T00:36:42.623212+00:00", "message": "doh, nvm slowly figuring it out, /etc/default/docker isn't being used anymore :D", "datatype": "message", "nick": "hunger_"}, {"timestamp": "2016-08-31T01:33:00.954635+00:00", "message": "Hi, anyone know of any good places to find a tutor for Docker? I know IRC is great, but I would like gain more time and energy and to work in a better learning environent.", "datatype": "message", "nick": "backnforth"}, {"timestamp": "2016-08-31T02:09:06.635004+00:00", "message": "is hub being buggy for anyone else? I see https://status.docker.com/ but I can't even build my latest / get it to queue", "datatype": "message", "nick": "diginc"}, {"timestamp": "2016-08-31T02:09:59.597599+00:00", "message": "I clicked build on one tag and instead it re-queued a tag that had already built after a long delay...now I have a ton of re-builds queued", "datatype": "message", "nick": "diginc"}, {"timestamp": "2016-08-31T02:14:27.995691+00:00", "message": "guys, is ok to use docker for example to install apache and mysql to use as testing server? all the example taht i found just run simple command and exit, i want something to give me a bash to install, update, add stuff and save the sate on exit", "datatype": "message", "nick": "SamSagaZ"}, {"timestamp": "2016-08-31T02:14:31.078132+00:00", "message": "how can i set up docker and nginx-proxy so that http://cooldomain.com/serviceA goes to running container serviceA and so that http://cooldomain.com/serviceB points to running container serviceB ?", "datatype": "message", "nick": "teratoma"}, {"timestamp": "2016-08-31T02:14:33.165260+00:00", "message": "can someone recommend me some tutorial?", "datatype": "message", "nick": "SamSagaZ"}, {"timestamp": "2016-08-31T02:18:12.837979+00:00", "message": "SamSagaZ: most docker tutorials i see use nginx, not apache", "datatype": "message", "nick": "teratoma"}, {"timestamp": "2016-08-31T02:18:20.072912+00:00", "message": "you could do the steps in https://www.digitalocean.com/community/tutorial...", "datatype": "message", "nick": "teratoma"}, {"timestamp": "2016-08-31T02:18:26.864132+00:00", "message": "then attach to the image, install mysql, save the image", "datatype": "message", "nick": "teratoma"}, {"timestamp": "2016-08-31T02:18:36.588285+00:00", "message": "teratoma, ok, will check it", "datatype": "message", "nick": "SamSagaZ"}, {"timestamp": "2016-08-31T02:18:37.753436+00:00", "message": "thanks", "datatype": "message", "nick": "SamSagaZ"}, {"timestamp": "2016-08-31T02:32:01.169616+00:00", "message": "Does someone have a workaround for this issue https://github.com/docker/docker/issues/10589 ?", "datatype": "message", "nick": "faza"}, {"timestamp": "2016-08-31T02:49:30.686597+00:00", "message": "Hi guys. Please help me. I'm trying make new build \"ubuntu+nginx\" and if i make nginx config with daemon off; nginx freeze and don't start, i'm try make with command CMD [\"nginx\", \"-g\", \"daemon off;\"] and have same shit, nginx freeze and container dont work", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T02:52:03.074869+00:00", "message": "kiotos_: try quoting daemon off, e.g. CMD [\"nginx\", \"-g\", \"'daemon off;'\"]", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T02:52:23.643598+00:00", "message": "(just a shot in the dark, but it might work)", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T02:53:15.965579+00:00", "message": "its not work", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T02:54:44.167924+00:00", "message": "because before I'm made like this ** RUN rm -v /etc/nginx/nginx.conf > ADD nginx.conf /etc/nginx/ and nginx.conf with read daemon off;", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T02:55:24.689490+00:00", "message": "i'm out of suggestions (and also very new to docker/not very well-versed in ngix), but good luck", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T02:56:27.301065+00:00", "message": "and I installed another ubuntu to ESXi and just install to this VM nginx, after i changed config with read daemon off; and have same issue", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T02:56:57.508609+00:00", "message": "Thanks", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T02:57:21.300341+00:00", "message": "mb somebody can help me with stuped nginx", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:01:37.594322+00:00", "message": "If i use nginx without daemon off; to nginx is started but not demonized", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:04:12.032175+00:00", "message": "kiotos_: why not just use the official nginx image?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:04:18.508967+00:00", "message": "no", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:04:23.070383+00:00", "message": "and, what do you mean by \"it freezes\" ?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:04:29.428083+00:00", "message": "i try make my image", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:04:44.299236+00:00", "message": "just not hapend", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:04:53.027717+00:00", "message": "nginx should run in the foreground. it's a non-interactive command, so depending on what you are seeing that you are calling \"freezing\" could indeed be the expected behavior.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:05:18.686240+00:00", "message": "everywhere, in contaner and in test VM", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:05:54.654542+00:00", "message": "Yes on official image all work perfect", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:07:26.182615+00:00", "message": "if you get the expected behavior out of the official image, then it almest certainly isn't a docker issue. you've got a working example to compare to. I'm still not sure what your nginx instance is doing. \"freezing\" could mean any number of things.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:07:30.963890+00:00", "message": "but I'm trying to make my image and for automaticly nginx start need type this option in nginx.conf file \"daemon off;\"", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:07:43.082367+00:00", "message": "yes", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:07:52.931212+00:00", "message": "or you can specify it on the command line. the official image does the latter.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:07:57.354522+00:00", "message": "but either way will work.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:09:59.426185+00:00", "message": "Ok nginx not freeze, just hold on on start command", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:10:13.721275+00:00", "message": "okay, that's expected when you tell it to daemon off", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:10:18.044127+00:00", "message": "it's running in the foreground", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:10:28.250386+00:00", "message": "it's a non-interactive command, so you can't type to it", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:10:39.594927+00:00", "message": "and unless you've configured logging to go to stderr/stdout, it won't output anything either.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:10:50.827469+00:00", "message": "nginx -g \"daemon off;\" and waiting and nothing", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:10:51.588085+00:00", "message": "the official image does log to stderr/stdout in its config file", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:10:56.116215+00:00", "message": "yes, that's expected", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:11:12.126691+00:00", "message": "you'll need to hit it with a web browser or other http user agent to interact with it once it's running", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:11:37.809230+00:00", "message": "yes", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:11:48.505050+00:00", "message": "i checked it", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:12:04.486450+00:00", "message": "nginx didnt start", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:12:08.063528+00:00", "message": "and you got... connection refused? connection timed out? or some other error", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:12:19.498131+00:00", "message": "a web browser is going to give you an error message other than \"nginx didn't start\"", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:12:21.092339+00:00", "message": "time out", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:12:44.241400+00:00", "message": "what URL are you putting in your browser?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:12:53.088732+00:00", "message": ")))", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:13:06.057951+00:00", "message": "and what's the docker command you are running to start your image?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:13:07.137870+00:00", "message": "my nginx container", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:13:11.450247+00:00", "message": "yes", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:13:17.703620+00:00", "message": "after run for example", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:13:56.107052+00:00", "message": "docker run -i -t p xxx.xxx.xxx.xxx:80:80 --name nginx_test mynginximg", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:14:37.352364+00:00", "message": "and i go to webb and try connect to nginx hostname:80", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:15:19.470485+00:00", "message": "if i start nginx container docker start nginx_test", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:15:34.791676+00:00", "message": "this container not demonized", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:15:57.590120+00:00", "message": "yes, that's what 'daemon off' is supposed to do", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:15:59.093935+00:00", "message": "docker ps nothing", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:16:07.160842+00:00", "message": "ah, that's different", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:16:09.098354+00:00", "message": "docker ps -a", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:16:14.935711+00:00", "message": "you should see it exited", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:16:40.656099+00:00", "message": "it should have an error code, and 'docker logs nginx_test' should give you any stderr/stdout output that nginx output before it exited (if any)", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:17:27.448460+00:00", "message": "docker ps -a , show that container was launched", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:17:36.856372+00:00", "message": "ok", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:17:40.792727+00:00", "message": "i try it now", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:18:09.878022+00:00", "message": "\ud83d\udc4d", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T03:22:30.920768+00:00", "message": "Please expect my config", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:22:40.443682+00:00", "message": "############################################################ # Dockerfile to build Nginx Installed Containers # # Based on Ubuntu # ############################################################ # Set the base image to Ubuntu FROM ubuntu:14.04 # File Author / Maintainer MAINTAINER Yuriy doc_nginx #Update Ubuntu RUN apt-get update #Install tools RUN apt-get install -y nano wget dia", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:23:05.168026+00:00", "message": "#Install nginx RUN apt-get install -y nginx #Remove default Nginx config file RUN rm -v /etc/nginx/nginx.conf", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:23:13.364033+00:00", "message": "#Copy new Nginx Config file from external directory ADD nginx.conf /etc/nginx/", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:23:19.624296+00:00", "message": "#Append \"daemon off;\" to beggining of the configuration RUN echo \"daemon off;\" >> /etc/nginx/nginx.conf", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:23:25.159732+00:00", "message": "#Expose ports EXPOSE 80", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:23:29.600061+00:00", "message": "#Set the default command to execute # when creating a new contaner CMD service nginx start", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:24:00.344411+00:00", "message": "sorry", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:24:05.953950+00:00", "message": "bad copypast", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:25:03.229937+00:00", "message": "after i biud new image # dcoker build -t test_nginx .", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:25:39.997542+00:00", "message": "clear", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:27:20.363003+00:00", "message": "and new image constructed successfully", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:29:06.846598+00:00", "message": "than #docker run -p 192.168.0.155:80:80 --name nginx_test1 -d new_nginx_ubu", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T03:37:02.263201+00:00", "message": "is anyone running system or systemd in a container", "datatype": "message", "nick": "bdonnahue"}, {"timestamp": "2016-08-31T03:37:17.310437+00:00", "message": "can you attach to the container and see if nginx is running, and if anything is listening on port 80", "datatype": "message", "nick": "teratoma"}, {"timestamp": "2016-08-31T03:37:23.884165+00:00", "message": "sorry i am time traveller", "datatype": "message", "nick": "teratoma"}, {"timestamp": "2016-08-31T03:46:13.396745+00:00", "message": "this is weird", "datatype": "message", "nick": "frew"}, {"timestamp": "2016-08-31T03:46:21.183660+00:00", "message": "I ran docker rm -f foo", "datatype": "message", "nick": "frew"}, {"timestamp": "2016-08-31T03:46:28.748202+00:00", "message": "and it just keeps echoing foo", "datatype": "message", "nick": "frew"}, {"timestamp": "2016-08-31T03:46:40.650649+00:00", "message": "and if I try to name another container foo, it errors that one named foo already exists", "datatype": "message", "nick": "frew"}, {"timestamp": "2016-08-31T03:47:13.293986+00:00", "message": "and the same happens if I try to remove the fully name (1497a78d15fc1a4475a59f9ac96703108aba1282fef83228f9508527433cbf1e) and the underlying image (also foo)", "datatype": "message", "nick": "frew"}, {"timestamp": "2016-08-31T03:50:29.335350+00:00", "message": "ok guys its work, i'm figure out, issue in -p im forget : between 8080 thank you all,", "datatype": "message", "nick": "kiotos_"}, {"timestamp": "2016-08-31T04:38:22.479653+00:00", "message": "Anyone else having ungodly queue times on docker hub image builds?", "datatype": "message", "nick": "SrWaffles"}, {"timestamp": "2016-08-31T04:42:27.275015+00:00", "message": "if a link fails, then my Webserver fails. How can i make my Web server docker image link, but still startup if the link isn't there?", "datatype": "message", "nick": "hendry"}, {"timestamp": "2016-08-31T04:43:09.290885+00:00", "message": "SrWaffles: I saw it last night", "datatype": "message", "nick": "hendry"}, {"timestamp": "2016-08-31T04:46:03.306956+00:00", "message": "Thanks. Yea we saw it last night, and again tonight have some builds that are over 2 hr in queue", "datatype": "message", "nick": "SrWaffles"}, {"timestamp": "2016-08-31T05:12:52.480209+00:00", "message": "how to make containers on two different swarm overlay network communicate with each other", "datatype": "message", "nick": "cartik"}, {"timestamp": "2016-08-31T07:19:36.561243+00:00", "message": "Is there a way to rebalance a swarm cluster after a node goes down and comes back up?", "datatype": "message", "nick": "juho9000"}, {"timestamp": "2016-08-31T07:39:54.819781+00:00", "message": "hi, I have a big mysql db on the host filesystem. I would like a container with mysqld that mounts the db folder as unionfs, so changes to the db are transient. How can this be set up?", "datatype": "message", "nick": "willvarfar"}, {"timestamp": "2016-08-31T07:56:49.157019+00:00", "message": "morning, just have a silly question and you guys prolly can help me out. I am running linux and if I was to use docker the first line says \"FROM image\", if run from linux does docker still downloads that image and uses it instead of my system resources?", "datatype": "message", "nick": "steven"}, {"timestamp": "2016-08-31T07:57:32.338319+00:00", "message": "furthermore, what if a weird dependency tree requires FROM ubuntu and FROM debian, does it then download the both of them and uses it or does it check internally if my OS was enough and skips those images?", "datatype": "message", "nick": "steven"}, {"timestamp": "2016-08-31T07:58:21.232400+00:00", "message": "steven: it downloads the images. It ignores the distro stuff you already have installed.", "datatype": "message", "nick": "willvarfar"}, {"timestamp": "2016-08-31T07:59:26.999964+00:00", "message": "whats the latter part mean exactly? lets say I run ubuntu1604, and one image says ubuntu14 how would docker handle it", "datatype": "message", "nick": "steven"}, {"timestamp": "2016-08-31T08:00:09.071408+00:00", "message": "it downloads an image for ubuntu14", "datatype": "message", "nick": "willvarfar"}, {"timestamp": "2016-08-31T08:00:42.982026+00:00", "message": "and runs it as well? I see", "datatype": "message", "nick": "steven"}, {"timestamp": "2016-08-31T08:01:02.026478+00:00", "message": "if you run ubuntu1604 on a box, and your image says its from ubuntu1604, then docker will still download a 1604 image", "datatype": "message", "nick": "willvarfar"}, {"timestamp": "2016-08-31T08:01:30.030624+00:00", "message": "it doesn't boot the kernel in the images, its just how it ensures the container has an environment that seems to be 1604 when it runs", "datatype": "message", "nick": "willvarfar"}, {"timestamp": "2016-08-31T08:01:41.334587+00:00", "message": "so startup is basically instant", "datatype": "message", "nick": "willvarfar"}, {"timestamp": "2016-08-31T08:02:01.293294+00:00", "message": "does it only share the kernel from the host os?", "datatype": "message", "nick": "steven"}, {"timestamp": "2016-08-31T08:02:06.685368+00:00", "message": "or stuff like usr as well?", "datatype": "message", "nick": "steven"}, {"timestamp": "2016-08-31T08:06:05.219916+00:00", "message": "it only shares the kernel", "datatype": "message", "nick": "willvarfar"}, {"timestamp": "2016-08-31T08:06:17.520761+00:00", "message": "the usr is what the container finds in the image", "datatype": "message", "nick": "willvarfar"}, {"timestamp": "2016-08-31T08:06:47.080473+00:00", "message": "so you can be running redhat whatever, and have a container that is from ubuntu something else, and the whole filesystem from the perspective of the container looks and feels like ubuntu", "datatype": "message", "nick": "willvarfar"}, {"timestamp": "2016-08-31T08:07:25.834228+00:00", "message": "(I'm a noob, but I got a container running so I'm kinda sure of my answers so far)", "datatype": "message", "nick": "willvarfar"}, {"timestamp": "2016-08-31T08:07:37.446882+00:00", "message": "gotcha, so it shares the kernel when image OS == host OS, but the FS it self is within the image and docker simply exposes the kernel to it", "datatype": "message", "nick": "steven"}, {"timestamp": "2016-08-31T08:26:40.748648+00:00", "message": "hi guys i try to use https://hub.docker.com/r/kevineye/rclone/", "datatype": "message", "nick": "lodgnewt"}, {"timestamp": "2016-08-31T08:26:58.746350+00:00", "message": "and then i run container with docker run --rm -it -v \"$PWD\"/rclone.conf:/root/.rclone.conf kevineye/rclone rclone config", "datatype": "message", "nick": "lodgnewt"}, {"timestamp": "2016-08-31T08:27:09.630242+00:00", "message": "get error Failed to load config file \"/root/.rclone.conf\" - using defaults: read /root/.rclone.conf: is a directory", "datatype": "message", "nick": "lodgnewt"}, {"timestamp": "2016-08-31T08:27:34.013399+00:00", "message": "can you help me?", "datatype": "message", "nick": "lodgnewt"}, {"timestamp": "2016-08-31T08:47:25.325295+00:00", "message": "Hi. if i start a shell inside a container (debian:latest) the $USER variable is empty", "datatype": "message", "nick": "astephanh"}, {"timestamp": "2016-08-31T09:56:16.662358+00:00", "message": "hey guys, i'm trying to figure out how to bring a project into the docker practice, i figure compose is a good starting point, it's a trio of scala mircoservices, so i'm take the leaf service(consumer of hte other two) and it has a mock (pact stubber) of those two, so i put a compose file together using alpine-sbt and all seems to boot up properly, but it takes a LONG time to build, so i'm pushing the dockerifle content to containt the sbt", "datatype": "message", "nick": "NET||abuse"}, {"timestamp": "2016-08-31T09:56:16.772080+00:00", "message": "install and i was thinking also to put the sbt call to biuld the jars in the dockerfile. does that sound like the right approach?", "datatype": "message", "nick": "NET||abuse"}, {"timestamp": "2016-08-31T09:56:35.435228+00:00", "message": "then the command in the compose file is just run the jars", "datatype": "message", "nick": "NET||abuse"}, {"timestamp": "2016-08-31T09:59:09.752267+00:00", "message": "the goal is to use these containers as local dev environment and also in load testing that setup, and adding it to the jenkins build/CI pipeline as a load testing step(verify load test can sustain X requests per second and has no major differences between builds, bad code paths introduced) mounting the app code base to be built in the dockerfile phase, then crom the compose command: value,run the sbt command of the prebuilt output", "datatype": "message", "nick": "NET||abuse"}, {"timestamp": "2016-08-31T11:01:37.683837+00:00", "message": "Hi !", "datatype": "message", "nick": "linovia"}, {"timestamp": "2016-08-31T11:05:42.255198+00:00", "message": "Is there a way I can find more log about what's causing \"Cannot start service xxx: oci runtime error: no such file or directory\" when I'm starting a docker-compose up ?", "datatype": "message", "nick": "linovia"}, {"timestamp": "2016-08-31T11:06:31.415138+00:00", "message": "looks like the container's destination dir name is creating some conflicts though I have no idea why (renaming the destination fixes the issue but I'd like to keep the name)", "datatype": "message", "nick": "linovia"}, {"timestamp": "2016-08-31T11:09:16.630683+00:00", "message": "linovia: try --verbose ?", "datatype": "message", "nick": "disconnected"}, {"timestamp": "2016-08-31T11:10:42.192634+00:00", "message": "disconnected: does this work with docker-compose ? it's not listed in the options", "datatype": "message", "nick": "linovia"}, {"timestamp": "2016-08-31T11:11:07.144085+00:00", "message": "right, it's --verbose up", "datatype": "message", "nick": "linovia"}, {"timestamp": "2016-08-31T11:14:38.184218+00:00", "message": "well, all I can notice particular is compose.parallel.parallel_execute_iter: Failed: <Service: XXXX>", "datatype": "message", "nick": "linovia"}, {"timestamp": "2016-08-31T11:44:53.886405+00:00", "message": "Hey guys I have a question, is it possible to connect a docker container to an internal network created by VirtualBox?", "datatype": "message", "nick": "Numin0us"}, {"timestamp": "2016-08-31T12:09:55.389103+00:00", "message": "How can I install engine 1.10 from 1.8 apt-get update doesn't seem to do the trick?", "datatype": "message", "nick": "bweston92"}, {"timestamp": "2016-08-31T12:10:46.130484+00:00", "message": "Yikes, docker just used all of my inodes. :o", "datatype": "message", "nick": "AppStore"}, {"timestamp": "2016-08-31T12:10:48.404737+00:00", "message": "Cleanup tiem.", "datatype": "message", "nick": "AppStore"}, {"timestamp": "2016-08-31T12:19:07.500908+00:00", "message": "bweston92, apt-get upgrade to actually install updated packages ?", "datatype": "message", "nick": "RV06"}, {"timestamp": "2016-08-31T12:37:14.365095+00:00", "message": "hello", "datatype": "message", "nick": "wwwi"}, {"timestamp": "2016-08-31T12:37:32.255453+00:00", "message": "can you use docker in windows to make an app portable?", "datatype": "message", "nick": "wwwi"}, {"timestamp": "2016-08-31T12:41:55.906752+00:00", "message": "if you're asking if you can run docker containers on windows, yes, you can, but they run via virtualization", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T12:42:04.143513+00:00", "message": "wwwi: ^", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T12:42:50.169374+00:00", "message": "the app itself would be written with the assumption of running in a linux environment", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T12:43:28.284539+00:00", "message": "diphtherial: via virtualization? what's the difference if it run without virtualization? the linux thing?", "datatype": "message", "nick": "wwwi"}, {"timestamp": "2016-08-31T12:45:24.991236+00:00", "message": "wwwi: basically, on windows, in order to run docker containers you have to run a program that emulates an entire computer that is itself running linux (the reality is a little more complicated than that, but that's the gist)", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T12:45:44.361334+00:00", "message": "Rv06: Yeah that is what I meant aha, turns out there is a new apt repo", "datatype": "message", "nick": "bweston92"}, {"timestamp": "2016-08-31T12:46:28.731658+00:00", "message": "diphtherial: so, you can't run win apps in a docker container?", "datatype": "message", "nick": "wwwi"}, {"timestamp": "2016-08-31T12:46:31.230539+00:00", "message": "wwwi: it can be fairly efficient if your computer supports hardware virtualization, but it'll never be quite as efficient as running linux as your host OS", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T12:47:20.271298+00:00", "message": "wwwi: no; docker makes use of linux-only features", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T12:48:13.465033+00:00", "message": "wwwi: to clarify, 'container' is docker's terminology for an app (more or less) -- if you wanted to run, say, a database server, you'd download a docker image of the server, then use that image to create a container (similar to launching an application)", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T12:48:13.949332+00:00", "message": "diphtherial: do you know if there is a win equivalent of docker?", "datatype": "message", "nick": "wwwi"}, {"timestamp": "2016-08-31T12:48:42.552579+00:00", "message": "wwwi: out of curiosity, what windows app are you trying to run inside of docker?", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T12:49:20.057605+00:00", "message": "diphtherial: i just want to have win apps that are portable", "datatype": "message", "nick": "wwwi"}, {"timestamp": "2016-08-31T12:49:23.182804+00:00", "message": "the closest thing i can think of to docker that'd run windows apps is just running a windows VM on your host, e.g. through virtualbox", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T12:50:17.155422+00:00", "message": "if you want to write portable apps, use a language that's portable, e.g. java or python", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T12:50:35.335720+00:00", "message": "diphtherial: if you run windows in a vm, and a sector becomes corrupted in vm, don't you lose the entire vm?", "datatype": "message", "nick": "wwwi"}, {"timestamp": "2016-08-31T12:51:34.943825+00:00", "message": "wwwi: not necessarily; it's the same as data corruption on a regular machine, in fact easier because you can access the vm's hard disk as a file", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T12:51:48.807617+00:00", "message": "anyway, that's a strangely specific concern and one that i haven't encountered myself", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T12:53:32.688205+00:00", "message": "well, the vm is a file, and a sector gets corrupted on that file, why won't the whole file become corrupted?", "datatype": "message", "nick": "wwwi"}, {"timestamp": "2016-08-31T12:55:01.798116+00:00", "message": "well, imagine you take a text file and put your cursor in some random place and start typing random letters -- the file has become 'corrupted' in some sense, but the rest of it's still readable, right?", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T12:55:18.666064+00:00", "message": "diphtherial: ok", "datatype": "message", "nick": "wwwi"}, {"timestamp": "2016-08-31T12:56:14.012204+00:00", "message": "once i had a linux vm and moved it to another computer, all ok, but then i moved it to another pc, but it couldn't be imported for some reason", "datatype": "message", "nick": "wwwi"}, {"timestamp": "2016-08-31T12:56:20.631922+00:00", "message": "there are tons of tools for recovering corrupted data on hard disks, or at least segregating the error from the rest of the disk; you can use the same tools you'd use to fix a corrupted hard disk for the vm's hard disk image", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T12:56:55.442341+00:00", "message": "diphtherial: from within the same vm, while it runs?", "datatype": "message", "nick": "wwwi"}, {"timestamp": "2016-08-31T12:57:18.828817+00:00", "message": "wwwi: well, sure, why not? you can do that on a regular computer, no?", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T12:57:28.992125+00:00", "message": "diphtherial: ok", "datatype": "message", "nick": "wwwi"}, {"timestamp": "2016-08-31T12:57:43.366831+00:00", "message": "fwiw, this is extremely off-topic; the answer to your question is that docker doesn't run windows apps", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T12:58:12.039879+00:00", "message": "diphtherial: yes", "datatype": "message", "nick": "wwwi"}, {"timestamp": "2016-08-31T12:58:35.197561+00:00", "message": "on topic, can a run more that one services in a docker instance?", "datatype": "message", "nick": "wwwi"}, {"timestamp": "2016-08-31T12:59:30.682610+00:00", "message": "yes, but each service is typically a separate container", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T12:59:55.524497+00:00", "message": "(you can host multiple containers on the same machine)", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T13:11:11.485432+00:00", "message": "Hi, how do I run the CMD in a dockerfile using sudo?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-31T13:16:11.687478+00:00", "message": "Or root?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-31T13:16:40.749672+00:00", "message": "if I changed the user to a sudo user before the command?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-31T13:18:04.209967+00:00", "message": "man, this place is dead today", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-31T13:18:17.568375+00:00", "message": "you can use `USER` in the dockerfile", "datatype": "message", "nick": "Meroje"}, {"timestamp": "2016-08-31T13:18:31.267746+00:00", "message": "what?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-31T13:18:37.618224+00:00", "message": "I've used USER to change a non-root user", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-31T13:18:55.605208+00:00", "message": "but I want to execute the CMD on \"apache2-foreground\" which I need root to do so", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-31T13:20:47.637188+00:00", "message": "Oh oops lol, so I can run Docker commands after executing CMD", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-31T13:21:42.579086+00:00", "message": "diphtherial: and if i want to e.g. move a db server and and the code of an app to another server, i just move both instances?", "datatype": "message", "nick": "wwwi"}, {"timestamp": "2016-08-31T13:23:41.587184+00:00", "message": "a service i put in docker must be a special version of the service, or i can just install a regular service in docker?", "datatype": "message", "nick": "wwwi"}, {"timestamp": "2016-08-31T13:23:43.687242+00:00", "message": "wwwi: ideally you'd be storing your database's data in a volume; if you wanted to move to another server, you'd recreate the containers for the db server and app from their images and hook up the db's data volume", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T13:24:01.277770+00:00", "message": "you can run regular linux apps and services inside a docker container", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T13:24:40.618248+00:00", "message": "for your convenience many images for popular software already exist on the docker hub, so typically you can just use one of those", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T13:25:11.781877+00:00", "message": "diphtherial: ok, so i just put the db data, in a directory in the real os disk?", "datatype": "message", "nick": "wwwi"}, {"timestamp": "2016-08-31T13:26:39.206857+00:00", "message": "Meroje: Sry to bother you, but I run the command, then added, USER newuser, and, RUN sudo-s , afterwards and I still get permisisons errors about creating web sockets", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-31T13:26:50.434229+00:00", "message": "it could be that sudo -s is putting me as run?", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-31T13:27:09.511521+00:00", "message": "wwwi: yes; there's a parameter when you create a container to have an external directory (i.e. on your host) as an internal one", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T13:27:13.843738+00:00", "message": "When I remove those two lines the container works", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-31T13:27:37.006924+00:00", "message": "I'm not sure what you're trying to do purope, but you shouldn't have to use sudo", "datatype": "message", "nick": "Meroje"}, {"timestamp": "2016-08-31T13:27:40.762691+00:00", "message": "diphtherial: thanks", "datatype": "message", "nick": "wwwi"}, {"timestamp": "2016-08-31T13:27:43.988957+00:00", "message": "not even surei t works", "datatype": "message", "nick": "Meroje"}, {"timestamp": "2016-08-31T13:28:06.256989+00:00", "message": "wwwi: no problem", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T13:28:29.627476+00:00", "message": "Meroje: I'm trying to run a apache web container with a non-root user", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-31T13:28:36.210642+00:00", "message": "there's ton of apache images if you want to take a look how they do things", "datatype": "message", "nick": "Meroje"}, {"timestamp": "2016-08-31T13:28:38.899071+00:00", "message": "actually, i'd like all my containers to have non-root useres", "datatype": "message", "nick": "purope"}, {"timestamp": "2016-08-31T13:31:13.563095+00:00", "message": "is there a particular reason for that? i mean, you're only ever going to be running one process, and it only has access to that container", "datatype": "message", "nick": "diphtherial"}, {"timestamp": "2016-08-31T13:31:20.035033+00:00", "message": "apache is supposed to run as root, to open port 80, but it downgrades to unprivileged user for its workers", "datatype": "message", "nick": "Meroje"}, {"timestamp": "2016-08-31T13:31:41.779165+00:00", "message": "purope: use a port > 1024", "datatype": "message", "nick": "nindustries"}, {"timestamp": "2016-08-31T13:31:47.602713+00:00", "message": "e.g. let apache listen on 8080", "datatype": "message", "nick": "nindustries"}, {"timestamp": "2016-08-31T13:31:49.221139+00:00", "message": "diphtherial well, it's still a container", "datatype": "message", "nick": "Meroje"}, {"timestamp": "2016-08-31T13:32:32.558604+00:00", "message": "purope: and no need to do a sudo when you specify a USER", "datatype": "message", "nick": "nindustries"}, {"timestamp": "2016-08-31T13:45:16.439605+00:00", "message": "is there a way to set default environment variables for all containers at the docker daemon level?", "datatype": "message", "nick": "psev"}, {"timestamp": "2016-08-31T13:46:23.607799+00:00", "message": "psev: not that I am aware of. What would be the use-case?", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-31T13:56:01.879767+00:00", "message": "Hi, does some have an idea on \"docker network ls\" command slownees ?", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-08-31T13:56:19.749609+00:00", "message": "more than 14 sec to respond using overlay network, and consul as KV store", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-08-31T13:59:11.623382+00:00", "message": "GodGinrai: setting an env variable pointing to the host's ip for service discovery", "datatype": "message", "nick": "psev"}, {"timestamp": "2016-08-31T14:37:07.874273+00:00", "message": "hi people :)", "datatype": "message", "nick": "tinco"}, {"timestamp": "2016-08-31T14:37:36.079565+00:00", "message": "I wrote an article on building docker application containers, curious what you think of our approach: https://blog.phusion.nl/2016/08/31/efficiently-...", "datatype": "message", "nick": "tinco"}, {"timestamp": "2016-08-31T14:38:10.383697+00:00", "message": "I made some changes in a container that I want to undo", "datatype": "message", "nick": "kbaegis"}, {"timestamp": "2016-08-31T14:38:25.950670+00:00", "message": "How do I revert a container without recreating it?", "datatype": "message", "nick": "kbaegis"}, {"timestamp": "2016-08-31T14:55:15.216179+00:00", "message": "kbaegis: Like what?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-31T14:56:25.964489+00:00", "message": "cpuguy83: I removed a directory, and I'd like it back. :) It's on the image, but not on the container anymore", "datatype": "message", "nick": "kbaegis"}, {"timestamp": "2016-08-31T14:56:42.952235+00:00", "message": "kbaegis: Can't get it back without recreating.", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-31T14:56:47.788767+00:00", "message": "kbaegis: You could... I guess...", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-31T14:57:15.713871+00:00", "message": "kbaegis: run a new container, use `docker cp` to grab the dir from the new container and then `docker cp` to copy into the old one", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-31T14:58:48.472743+00:00", "message": "cpuguy83: Is there a way to snapshot the container so that when I do something dumb like that I can revert?", "datatype": "message", "nick": "kbaegis"}, {"timestamp": "2016-08-31T14:59:00.046650+00:00", "message": "kbaegis: no", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-31T14:59:31.123657+00:00", "message": "run your containers like they are disposable.", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-31T14:59:37.145483+00:00", "message": "If you are writing data to disk, do it in a volume", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-31T14:59:45.902276+00:00", "message": "Then you can just throw away the container and create a new one if something goes wrong.", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-31T15:01:08.396668+00:00", "message": "cpuguy83: the container running is easy. It's the attachments that become a pain in the", "datatype": "message", "nick": "kbaegis"}, {"timestamp": "2016-08-31T15:01:24.570150+00:00", "message": "about 20 -e, 5 -v per container", "datatype": "message", "nick": "kbaegis"}, {"timestamp": "2016-08-31T15:01:39.083717+00:00", "message": "maybe I missed it, but how do I authenticate to docker hub (for private repos ) on each of my swarm workers ? ( swarm mode )", "datatype": "message", "nick": "odedpriva"}, {"timestamp": "2016-08-31T15:01:41.589778+00:00", "message": "Use compose, or a shell script?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-31T15:02:06.441423+00:00", "message": "odedpriva: use `--with-registry-auth` when creating or updating a service.", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-08-31T15:02:31.825579+00:00", "message": "Ho .. so I have missed it :)", "datatype": "message", "nick": "odedpriva"}, {"timestamp": "2016-08-31T15:02:35.045919+00:00", "message": "thanks.", "datatype": "message", "nick": "odedpriva"}, {"timestamp": "2016-08-31T15:20:29.025251+00:00", "message": "Where does docker store the data volume if I only name it and not give it a local path?", "datatype": "message", "nick": "csmule"}, {"timestamp": "2016-08-31T15:20:55.385116+00:00", "message": "csmule: docker volume inspect <nameorid>", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T15:20:59.169596+00:00", "message": "it'll show you the path", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T15:23:01.422839+00:00", "message": "got it, thanks", "datatype": "message", "nick": "csmule"}, {"timestamp": "2016-08-31T15:40:21.335447+00:00", "message": "I have a question about taking images from one docker instance to another", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T15:40:55.311735+00:00", "message": "I'm getting the following image:", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T15:40:55.595348+00:00", "message": "Error response from daemon: Error processing tar file(exit status 1): unexpected EOF", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T15:41:09.209367+00:00", "message": "When running the import command", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T15:41:19.738435+00:00", "message": "(docker import pipeline_catalog.tar)", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T15:41:45.079537+00:00", "message": "I have checked and the file has the same md5 sum in source and destination", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T15:41:56.667297+00:00", "message": "Therefore somehow the save is truncating before completion?", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T15:45:04.895639+00:00", "message": "recently I've been running into an issue where if I do `docker rm -f $specific-container` it either takes a long time to stop or literally forever", "datatype": "message", "nick": "frew"}, {"timestamp": "2016-08-31T15:45:14.312017+00:00", "message": "hard to tell the diff, don't haev forever to verify", "datatype": "message", "nick": "frew"}, {"timestamp": "2016-08-31T15:45:24.867857+00:00", "message": "should i strace dockerd or something to see what it's doing?", "datatype": "message", "nick": "frew"}, {"timestamp": "2016-08-31T15:46:18.039990+00:00", "message": "ugh well that's not really feasible, because if I do -f it gets all the containers too", "datatype": "message", "nick": "frew"}, {"timestamp": "2016-08-31T15:47:32.684146+00:00", "message": "hello. is anyone familiar with running systemd inside the container?", "datatype": "message", "nick": "bdonnahue"}, {"timestamp": "2016-08-31T15:48:05.940188+00:00", "message": "im confused why the ocntainer needs to mount volumes and why it cannot just completely install what it ineeds inside?", "datatype": "message", "nick": "bdonnahue"}, {"timestamp": "2016-08-31T15:57:07.244071+00:00", "message": "Hi all, I'm using docker compose. I have one container which is a web service (using flask) and I want to create another container which exposes some python stuff. I want to access the python stuff in my web service container", "datatype": "message", "nick": "FrancescoV"}, {"timestamp": "2016-08-31T16:14:22.163982+00:00", "message": "FrancescoV: is this \"python stuff\" something that will be exposed by listening on a port?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T16:14:53.035926+00:00", "message": "programmerq: yes", "datatype": "message", "nick": "FrancescoV"}, {"timestamp": "2016-08-31T16:15:08.412091+00:00", "message": "is this correct: ports: - \"5500:5500\" ?", "datatype": "message", "nick": "FrancescoV"}, {"timestamp": "2016-08-31T16:15:24.853183+00:00", "message": "if you just want one container to access another, you don't need to publish the port to the world", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T16:15:28.140565+00:00", "message": "Has anyone worked with the php:fpm image? I'm only getting 500 errors and can't seem to get it to log the actual error. I've created a custom php.ini and set log_errors = On and error_log = /dev/stderr", "datatype": "message", "nick": "bnason"}, {"timestamp": "2016-08-31T16:15:40.004295+00:00", "message": "looks like what I ran into is a kernel bug", "datatype": "message", "nick": "frew"}, {"timestamp": "2016-08-31T16:15:40.943477+00:00", "message": "just connect to it. docker's built-in dns will resolve the service name in your compose file", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T16:18:13.276277+00:00", "message": "With the Python API.. is docker.logs(stream=True, follow=True) really the same as docker logs -f ? Because my container spits out quite a lot of data (~300k), but I'm only seeing ~75k of it when using docker.logs(). Same as if I run docker logs <container id> on an exited container", "datatype": "message", "nick": "eljrax"}, {"timestamp": "2016-08-31T16:18:26.197499+00:00", "message": "But if I do docker logs -f on a running container, I do get all 300k", "datatype": "message", "nick": "eljrax"}, {"timestamp": "2016-08-31T16:18:28.377937+00:00", "message": "so on mac, since there is no docker0. how could I get a docker build to use a squidcache? I set the vars. but it is on a bridge network that appears unable to reach it.", "datatype": "message", "nick": "akkad"}, {"timestamp": "2016-08-31T16:19:19.759684+00:00", "message": "So docker.logs(stream, follow) seems to behave more like docker logs than docker logs -f", "datatype": "message", "nick": "eljrax"}, {"timestamp": "2016-08-31T16:19:32.642668+00:00", "message": "docker-py==1.9.0", "datatype": "message", "nick": "eljrax"}, {"timestamp": "2016-08-31T16:22:39.188149+00:00", "message": "programmerq, so I need to check 'dns' in docker compose?", "datatype": "message", "nick": "FrancescoV"}, {"timestamp": "2016-08-31T16:23:48.032332+00:00", "message": "no", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T16:23:53.254014+00:00", "message": "if you have a service called 'foo'", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T16:24:01.481658+00:00", "message": "and you want to connect to it on port 5000 from another container", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T16:24:06.818033+00:00", "message": "connect to foo:5000", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T16:24:08.816492+00:00", "message": "it's built in", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T16:24:27.765371+00:00", "message": "no need to publish port 5000 unless you want something outside docker to connect to it", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T16:25:12.224367+00:00", "message": "FrancescoV: https://github.com/programmerq/scaletest - this is an example repo with a python app and nginx using the dns based network service discovery via compose", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T16:25:31.121748+00:00", "message": "programmerq: thanks a lot!", "datatype": "message", "nick": "FrancescoV"}, {"timestamp": "2016-08-31T16:34:08.484389+00:00", "message": "ok figured it out... put the php.ini in the wrong location", "datatype": "message", "nick": "bnason"}, {"timestamp": "2016-08-31T16:44:11.241644+00:00", "message": "well maybe not... it reported 1 error and then stopped... arg!", "datatype": "message", "nick": "bnason"}, {"timestamp": "2016-08-31T16:46:28.549107+00:00", "message": "When deploying tomcat apps in docker, is there any advantage to pre-exploding the war?", "datatype": "message", "nick": "Toger"}, {"timestamp": "2016-08-31T17:12:06.398265+00:00", "message": "@all I've just configured a 5-node swarm cluster on AWS and have a security group that allows all tcp+udp traffic from/to itself. The nodes and the managers are in the same group. If I create a postgres service with 1 replica and then 2 app containers (one per node) only the app container on the same host as the postgres container can connect to postgres. I have an overlay network configured and all ports are allowed. I'm stumped.", "datatype": "message", "nick": "cpldave"}, {"timestamp": "2016-08-31T17:19:23.205007+00:00", "message": "docks.docker.com is 404\u2019ing its homepage", "datatype": "message", "nick": "Toger"}, {"timestamp": "2016-08-31T17:20:34.515076+00:00", "message": "ah i see it noted on http://status.docker.com/", "datatype": "message", "nick": "Toger"}, {"timestamp": "2016-08-31T17:21:53.420870+00:00", "message": "I want to let a container connect to mysql on the host via a ENV setting, so I'm using host networking. eg `docker run --rm -it --net=host --expose 9292 -P -e \"DATABASE_URL=mysql2://root:@localhost/xsolo-development?encoding=utf8&pool=5&timeout=5000\" xsolo`", "datatype": "message", "nick": "sbeam_"}, {"timestamp": "2016-08-31T17:22:07.283987+00:00", "message": "so with that it should also expose port 9292 right?", "datatype": "message", "nick": "sbeam_"}, {"timestamp": "2016-08-31T17:22:29.583533+00:00", "message": "but `docker port xsolo` returns nothing, and connection is refused", "datatype": "message", "nick": "sbeam_"}, {"timestamp": "2016-08-31T17:22:32.207948+00:00", "message": "--expose, --publish, -p, and -P all really do nothing with --net=host", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T17:23:14.794167+00:00", "message": "programmerq: ah ok that's what I'm deducing but the docs don't explicitly say that afaict", "datatype": "message", "nick": "sbeam_"}, {"timestamp": "2016-08-31T17:23:39.193803+00:00", "message": "--net=host basically says \"hey, all that network isolation that continerized processes get? nevermind. don't bother\"", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T17:24:49.366637+00:00", "message": "programmerq: so is there any way to connect to an external service from a container and still have that? bridge network?", "datatype": "message", "nick": "sbeam_"}, {"timestamp": "2016-08-31T17:25:06.103122+00:00", "message": "anyone else getting 404 https://docs.docker.com/engine/userguide/storag...", "datatype": "message", "nick": "GivenToCode"}, {"timestamp": "2016-08-31T17:25:34.670233+00:00", "message": "sbeam_: just run that mysql server on an interface that is routable from the container ip. instead of 127.0.0.1, listen on all interfaces, for example.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T17:25:52.936352+00:00", "message": "then you can tell the container to connect to the ip of the host.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T17:28:50.631476+00:00", "message": "what kernel do i need for overlay2 support?", "datatype": "message", "nick": "GivenToCode"}, {"timestamp": "2016-08-31T17:29:10.211149+00:00", "message": "programmerq: ok it uses a socket but I think there is a way, will check it out thanks", "datatype": "message", "nick": "sbeam_"}, {"timestamp": "2016-08-31T17:30:37.276930+00:00", "message": "sbeam_: you can configure mysql to listen on an ip", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T17:30:47.934396+00:00", "message": "or actually, speaking of the socket, you can share the socket into the container", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T17:31:02.195672+00:00", "message": "docker run -v /var/run/mysql.sock:/var/run/mysql.sock ...", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T17:31:11.003162+00:00", "message": "(I don't remember the exact expected path, though)", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T17:32:39.752256+00:00", "message": "hi there.I am very new to docker and i have created an image and some containers....the first that that occures to me is that i will probably quickly have a lot of images and containers floating around....how do i know what is what? I mean how do people keep track of what images and containers are used and for what and which one can just be deleted etc?", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-08-31T17:33:12.027722+00:00", "message": "programmerq: yep. actually I do want to switch it to a tcp connection. This is testing locally for getting a containerized web app connecting to an existing RDS store in production.", "datatype": "message", "nick": "sbeam_"}, {"timestamp": "2016-08-31T17:33:16.278741+00:00", "message": "hey guys. i am reading this article and i had a question about cgroups: https://maci0.wordpress.com/2014/07/23/run-syst...", "datatype": "message", "nick": "bdonnahue"}, {"timestamp": "2016-08-31T17:33:22.880195+00:00", "message": "why does the systemd in the container only display the processes of the container and not the whole system if it has access to the cgroups of the host?", "datatype": "message", "nick": "bdonnahue"}, {"timestamp": "2016-08-31T17:35:37.101510+00:00", "message": "GivenToCode: the docker status page shows docs as broken.", "datatype": "message", "nick": "Toger"}, {"timestamp": "2016-08-31T17:39:57.961267+00:00", "message": "hi there.I am very new to docker and i have created an image and some containers....the first that that occures to me is that i will probably quickly have a lot of images and containers floating around....how do i know what is what? I mean how do people keep track of what images and containers are used and for what and which one can just be deleted etc?", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-08-31T17:40:15.426622+00:00", "message": "usually with meaningful tags and names", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-08-31T17:40:19.398738+00:00", "message": "at least in my case", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-08-31T17:41:11.050740+00:00", "message": "Also, you can run containers with a flag so that they remove themselves when stopped", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-31T17:41:15.438771+00:00", "message": "e.g. docker build -t super_awesome_webapp_container super/awesome/webapp/Dockerfile", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-08-31T17:42:13.885739+00:00", "message": "InitHello: does build accept path/to/Dockerfile instead of /path/to/build/context ?", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-31T17:42:55.936580+00:00", "message": "oh, maybe the Dockerfile doesn't belong there", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-08-31T17:43:30.387091+00:00", "message": "I rarely give entirely functional examples, that would require paying attention to what I'm saying", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-08-31T17:43:36.768433+00:00", "message": "lol", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-31T17:43:43.578286+00:00", "message": "for which I lack the spoons", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-08-31T17:46:35.101747+00:00", "message": "how do i remove all containers and all images", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-08-31T17:48:18.856028+00:00", "message": "is it possible to install the docker-client only?", "datatype": "message", "nick": "kryten2"}, {"timestamp": "2016-08-31T17:48:25.654175+00:00", "message": "not to my knowledge", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-08-31T17:48:53.758968+00:00", "message": "ok", "datatype": "message", "nick": "kryten2"}, {"timestamp": "2016-08-31T17:49:22.635121+00:00", "message": "kryten2: sure before OSX docker was released you could only install the client on OSX.", "datatype": "message", "nick": "dtrott"}, {"timestamp": "2016-08-31T17:49:36.691931+00:00", "message": "diverdude: docker rm LIST OF CONTAINERS / docker rmi LIST OF IMAGES", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-08-31T17:49:47.666620+00:00", "message": "space separated, of course", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-08-31T17:49:50.789230+00:00", "message": "right, but I am thinking about ubuntu", "datatype": "message", "nick": "kryten2"}, {"timestamp": "2016-08-31T17:50:18.411109+00:00", "message": "the docker client interacts with the docker service. Also needs to be the same version, as I just discovered the hard way", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-08-31T17:50:29.484590+00:00", "message": "any general advice on handling secrets (git user/pass combos) for a docker img?", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-08-31T17:50:51.804775+00:00", "message": "Dynetrekk: I'd use environment variables set on the command line", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-08-31T17:50:52.808855+00:00", "message": "the docker container must get access to a git repo... I've no good ideas", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-08-31T17:51:02.071471+00:00", "message": "Dynetrekk: readonly users", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-31T17:51:03.371206+00:00", "message": "InitHello: hm, not easy but yeah, maybe", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-08-31T17:51:11.865054+00:00", "message": "GodGinrai: on the host?", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-08-31T17:51:39.398654+00:00", "message": "Dynetrekk: make a user that has readonly access to your repo, then create a passwordless ssh key that you use in the image to pull from said repo", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-31T17:51:55.773603+00:00", "message": "that is indeed also an option", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-08-31T17:52:11.215540+00:00", "message": "probably easier to implement than the environment variables", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-08-31T17:53:41.740769+00:00", "message": "GodGinrai: so you'd put the ssh key in the image? with no passphrase? seems to make it easy to gain access imho", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-08-31T17:53:55.809155+00:00", "message": "GodGinrai: maybe use an ssh key with passphrase, then distribute the passphrase independently?", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-08-31T17:54:51.412689+00:00", "message": "Dynetrekk: I mean, it depends on what you need the secrets for", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-31T17:55:09.852309+00:00", "message": "Dynetrekk: what I suggested is what I'm using when I need to clone during the image build process", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-31T17:55:22.122113+00:00", "message": "where you can't easily pass in user volumes with your keys", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-31T17:55:29.245887+00:00", "message": "Dynetrekk: The question is what is the attack vector your concerned about \u2026 getting read only access to your source repo \u2026 you have just cloned the source onto the image anyway there is no increased exposure.", "datatype": "message", "nick": "dtrott"}, {"timestamp": "2016-08-31T17:55:42.323363+00:00", "message": "this too", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-31T17:58:24.900104+00:00", "message": "what is the normal practice if i want to e.g. run an ubuntu docker image and install a few software from repo and config something...and i want to automate the process...can i make some sort of build file or do i create a clean docker image, modify it with the software i want and then use that image in the future or what is the normal practice?", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-08-31T17:58:44.662494+00:00", "message": "when I `docker cp container:path -` I get lots of \\0 characters in the output but when I use a target path the file is fine. is it a known problem that copying to stdout inserts \\0 characters?", "datatype": "message", "nick": "cr3"}, {"timestamp": "2016-08-31T17:59:34.966379+00:00", "message": "diverdude: Dockerfile", "datatype": "message", "nick": "dtrott"}, {"timestamp": "2016-08-31T18:01:35.522079+00:00", "message": "it seems to insert other bytes, not just \\0 because piping to `tr -d '\\0'` still doesn't look like the original file", "datatype": "message", "nick": "cr3"}, {"timestamp": "2016-08-31T18:01:43.247056+00:00", "message": "how can this be so broken?", "datatype": "message", "nick": "cr3"}, {"timestamp": "2016-08-31T18:06:07.713910+00:00", "message": "dtrott: true - but it's convenient to post public images on docker hub", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-08-31T18:06:26.402032+00:00", "message": "dtrott: it's mostly just a tweak of ubuntu for my own c++ build purposes", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-08-31T18:07:25.821001+00:00", "message": "Is your git repo private ?", "datatype": "message", "nick": "dtrott"}, {"timestamp": "2016-08-31T18:07:29.029139+00:00", "message": "Dynetrekk: if they're public images, they're public", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-31T18:07:31.046195+00:00", "message": "duh", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-31T18:20:31.735724+00:00", "message": "Anyone know of a way to add some host mappings (/etc/host entries) to the Alpine instance of Docker native (OS X)?", "datatype": "message", "nick": "juztin"}, {"timestamp": "2016-08-31T18:21:52.110808+00:00", "message": "juztin: there isn't a way to do that, no.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T18:22:56.706981+00:00", "message": "Doh! thanks. I just found this, so hopefully soon =) https://github.com/docker/docker/issues/25008", "datatype": "message", "nick": "juztin"}, {"timestamp": "2016-08-31T18:26:16.852188+00:00", "message": "GodGinrai: I know", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-08-31T18:26:20.991113+00:00", "message": "dtrott: git repo is private, yes", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-08-31T18:27:19.609802+00:00", "message": "So to be clear you want to clone a private repo into a docker image that you are going to make public, what is it your are concerned about here ?", "datatype": "message", "nick": "dtrott"}, {"timestamp": "2016-08-31T18:47:40.007892+00:00", "message": "So lets say i create an image and a container from this gitlab image: https://hub.docker.com/r/gitlab/gitlab-ce/ If i then want to make a backup of all my repositories in gitlab...do i then just backup the image somehow or is there better way to do it? That image is 1.2GB in virtual size", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-08-31T19:01:49.510794+00:00", "message": "dtrott: the image needs access to the private repo", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-08-31T19:03:11.006487+00:00", "message": "I'm using the new docker for mac native, and something has died and is holding a port open, despite no containers running. Then when I try to run the containers it says that the port is already taken!", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:03:13.552178+00:00", "message": "How can I reset it?", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:05:35.997329+00:00", "message": "try restarting docker?", "datatype": "message", "nick": "boucher"}, {"timestamp": "2016-08-31T19:08:49.762723+00:00", "message": "done", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:08:54.719106+00:00", "message": "removed all containers", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:09:01.759290+00:00", "message": "changed docker to the stable channel", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:09:04.725994+00:00", "message": "rebooted bachine", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:09:07.123632+00:00", "message": "*machine", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:09:10.792520+00:00", "message": "nothing", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:22:27.737279+00:00", "message": "dunk: sudo lsof -iTCP -sTCP:LISTEN -n -P", "datatype": "message", "nick": "telx"}, {"timestamp": "2016-08-31T19:22:57.118468+00:00", "message": "that should tell you what process it is that's holding the port open", "datatype": "message", "nick": "telx"}, {"timestamp": "2016-08-31T19:23:04.443108+00:00", "message": "telx: shows the docker process listening to the port", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:23:16.282516+00:00", "message": "interesting", "datatype": "message", "nick": "telx"}, {"timestamp": "2016-08-31T19:24:06.229695+00:00", "message": "anything interesting in the diagnostic window?", "datatype": "message", "nick": "telx"}, {"timestamp": "2016-08-31T19:24:32.537378+00:00", "message": "can a docker running in a 16 GB RAM and 4 core intel xeon processor ubuntu server VM sitting on a 128 GB RAM blade server running ESXi handle a process wrapped by socat expecting 1000 to 6000 simultaneous connections ?", "datatype": "message", "nick": "b3h3m0th"}, {"timestamp": "2016-08-31T19:25:45.825024+00:00", "message": "not simultaneous exactly, but yeah, any of the 6000 users may connect to the process whenever he wants and lifetime of a single session is 10-20 seconds", "datatype": "message", "nick": "b3h3m0th"}, {"timestamp": "2016-08-31T19:30:19.356053+00:00", "message": "b3h3m0th: docker can handle whatever your host can handle. your docker 'container' is just a process on your host", "datatype": "message", "nick": "L0j1k"}, {"timestamp": "2016-08-31T19:30:50.598664+00:00", "message": "so if your process can handle that running outside of docker, it can handle that running inside of docker", "datatype": "message", "nick": "L0j1k"}, {"timestamp": "2016-08-31T19:32:03.684420+00:00", "message": "I was thinking should I even use docker and just use a VM for each process", "datatype": "message", "nick": "b3h3m0th"}, {"timestamp": "2016-08-31T19:32:31.435520+00:00", "message": "I have of couple of blade servers running ESX", "datatype": "message", "nick": "b3h3m0th"}, {"timestamp": "2016-08-31T19:32:32.945022+00:00", "message": "telx: it's on my colleague's computer and he has now gone home for the night", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:33:00.509736+00:00", "message": "telx: I won't be able to execute any more commands to diagnose till morning unless he comes online tonight", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:33:07.390104+00:00", "message": "hey all, trying to debug a dockerfile / docker-compose.yml config and added a \"CMD echo /etc/hosts\" to dockerfile. It looks like the command works, but i don't see the output in stdout when I do docker-compose up", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:33:13.203257+00:00", "message": "is there a way to get the stdout?", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:33:51.631728+00:00", "message": "rakm: why not `tail -f /dev/null` ?", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:33:58.410296+00:00", "message": "at least that way the container would stay up", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:34:00.720260+00:00", "message": "for inspection", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:34:27.958852+00:00", "message": "dunk you mean put that in my Dockefile?", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:35:24.555825+00:00", "message": "rakm: you can put it in either your Dockerfile or your docker-compose.yml", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:35:28.814213+00:00", "message": "They double up on a lot of stuff", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:35:50.695476+00:00", "message": "but if you are debugging I'd suggest docker-compose.yml as that way you just have to restart to change it, rather than rebuild the image", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:36:07.470662+00:00", "message": "i tried adding \"CMD tail -f /dev/null\" to Dockerfile and it didn't pause as part of the docker-compose up process, like i expected", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:36:37.595460+00:00", "message": "pause?", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:37:10.611605+00:00", "message": "dunk i'm using `docker-compose --verbose up` to debug.. is there a better way? it looks like it *is* building the image every time. didn't know that wasn't necessary", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:37:27.047720+00:00", "message": "dunk err, i don't think i understood properly what you are saying tail will do in this case", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:37:32.191975+00:00", "message": "it shouldn't rebuild it if you don't change it", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:37:44.160700+00:00", "message": "when the container starts it will stay running", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:38:12.426220+00:00", "message": "if you run \"CMD echo /etc/hosts\" then the container will just run that and stop", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:38:12.894537+00:00", "message": "my `docker-compose up` is failing (rails app trying to fetch from a rubygems host inside vpn)", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:38:22.184850+00:00", "message": "i have a docker container with a code repository...i want to make bakcup of my code which is all inside my docker container...what is best way to do this? Docker container is 1.2GB", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-08-31T19:39:14.259078+00:00", "message": "diverdude: https://docs.docker.com/engine/reference/comman... ?", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:39:38.461491+00:00", "message": "dunk, but export makes a full 1.2GB image then right?", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-08-31T19:39:57.169404+00:00", "message": "rakm: what is \"command\" set to in your docker-compose.yml", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:39:59.165702+00:00", "message": "?", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:40:02.110970+00:00", "message": "diverdude: yeah", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:40:21.822151+00:00", "message": "diverdude: scp it out of there?", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:40:25.992996+00:00", "message": "dunk, so basically if i backup every week i have to backup additinal 1.2GB each week", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-08-31T19:40:42.873583+00:00", "message": "dunk pretty much straight out of the rails guide on docker docs: dunk, scrapping the tail idea, let me back up. I'm trying to add a host. e.g. I can do `docker run", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:40:45.104625+00:00", "message": "diverdude: I'm not an expert on that, but you probably want to mount in the data", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:40:56.859549+00:00", "message": "diverdude: perhaps look at data volumes?", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:41:07.834819+00:00", "message": "only problem is that my Dockerfile runs `bundle install` , which looks for a website inside the vpn", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:41:12.551415+00:00", "message": "and that mapping isn't being added", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:41:35.163533+00:00", "message": "this works: `docker run -it --add-host=\"my mapping\" --entrypoint /bin/bash`", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:41:52.449290+00:00", "message": "i need to put that `--add-host` option into Dockerfile or docker-compose", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:41:57.437638+00:00", "message": "or wherever it's supposed to go", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:42:44.849142+00:00", "message": "ahh, phrasing it like that made it easier to google :) https://docs.docker.com/compose/compose-file/#/...", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:45:34.103520+00:00", "message": "I'm glad to be your duck!", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:48:18.876566+00:00", "message": "dunk, mount in the data??? data volumes???", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-08-31T19:50:12.715208+00:00", "message": "dunk spoke too soon. that _should_ have worked, but it didn't :(", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:52:02.860556+00:00", "message": "rakm: :-(", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:52:11.299542+00:00", "message": "rakm: that looks like your path", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:52:45.402754+00:00", "message": "rakm: you can inspect the container to make sure that it was applied correctly: https://docs.docker.com/engine/reference/comman...", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:53:09.168213+00:00", "message": "my container never starts though because docker-compose up fails", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:53:42.626679+00:00", "message": "i guess i could not try to bundle install for now", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:54:23.212325+00:00", "message": "diverdude: well, the way I see it you have three options. (1) save the whole container. (2) copy the data out of the container in a traditional way, with rsync or whatever, or (3) have the variable part of the container mounted into it, and then just back that part up. I'm no expert with data volumes, but I believe that they were made for this use-case.", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:54:38.622393+00:00", "message": "rakm: can you get it to start in a vanilla way?", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:54:45.714549+00:00", "message": "rakm: with no changes, yeah?", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:54:47.590627+00:00", "message": "dunk yep", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:54:52.713201+00:00", "message": "with docker run you mean, rgith?", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:54:54.478065+00:00", "message": "right*", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:54:58.519004+00:00", "message": "rakm: so it's just the bundle that fails?", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:55:04.477368+00:00", "message": "yeah", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:55:15.073208+00:00", "message": "dunk, right yeah ok i see....thx a bunch :)", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-08-31T19:55:17.717588+00:00", "message": "so far :)", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:55:19.957483+00:00", "message": "rakm: something applied with docker-compose won't take effect till runtime", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:55:34.986873+00:00", "message": "so if your install is at Dockerfile time then you will have to find another way", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:55:42.379013+00:00", "message": "oh..", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:55:46.186409+00:00", "message": "that makes sense", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:55:49.229236+00:00", "message": "yeah, it's a gotcha", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:56:23.387976+00:00", "message": "I tried `CMD echo \"my mapping\" > /etc/hosts ` too", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:56:49.159255+00:00", "message": "i think I got \"no such file or directory\" when trying to do that", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:57:03.262876+00:00", "message": "which makes me think that Dockerfile is running as non root", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T19:57:14.073302+00:00", "message": "Should run as root", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:58:06.741800+00:00", "message": "Unless you used the USER directive [https://docs.docker.com/engine/reference/builde...]", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:58:34.790666+00:00", "message": "One page to make sure you read is https://docs.docker.com/engine/userguide/eng-im...", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:58:39.710241+00:00", "message": "There are quite a few gotchas...", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:59:06.415518+00:00", "message": "You're not trying to do one thing in one line which starts a process, and then expect it to be running in the next like are you?", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:59:11.835213+00:00", "message": "That's a common mistake", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T19:59:27.948992+00:00", "message": "You have to imagine that everything got shut down between commands", "datatype": "message", "nick": "dunk"}, {"timestamp": "2016-08-31T20:00:22.703437+00:00", "message": "anyone know how i can get docker to start? getting this: \"Error starting daemon: layer does not exist\"", "datatype": "message", "nick": "cs02rm0"}, {"timestamp": "2016-08-31T20:03:30.705161+00:00", "message": "dunk i don't think i'm doing anything unconventional. here's both: https://gist.github.com/anonymous/44741fac3bdbe...", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T20:03:54.318279+00:00", "message": "line 11 in Dockerfile and line 15 in docker-compose", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T20:04:04.863020+00:00", "message": "line 15 in Dockerfile fails", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T20:06:59.704280+00:00", "message": "stepping away for a bit. will come back with fresh eyes", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-08-31T20:09:39.062638+00:00", "message": "raatiniemi: line 11 in that Dockerfile has incorrect /etc/hosts syntax, but the extra_hosts option should work.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T20:09:59.844854+00:00", "message": "docker run --rm -it --add-host foo.com:1.2.3.4 alpine cat /etc/hosts | grep foo.com", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T20:10:01.169408+00:00", "message": "1.2.3.4 foo.com", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T20:12:10.226613+00:00", "message": "https://gist.github.com/programmerq/56681c0ed26...", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T20:15:35.026978+00:00", "message": "Whats the best way to have a docker container bind to localhost (127.0.0.1). Would something like --publish=127.0.0.1:8080:8080 work?", "datatype": "message", "nick": "scooby2"}, {"timestamp": "2016-08-31T20:18:43.001583+00:00", "message": "yes", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T20:21:03.624149+00:00", "message": "programmerq: thank you", "datatype": "message", "nick": "scooby2"}, {"timestamp": "2016-08-31T20:37:04.906886+00:00", "message": "is there an uninstaller on osx?", "datatype": "message", "nick": "cs02rm0"}, {"timestamp": "2016-08-31T20:42:57.639628+00:00", "message": "had the idea of somehow sharing primed ccache as docker containers or such (since I can't just mount a volume to be used while building an image)", "datatype": "message", "nick": "thlorenz"}, {"timestamp": "2016-08-31T20:43:43.666144+00:00", "message": "has anyone thought of that, i.e. for nodejs you'd do `FROM primed-ccache/nodejs` which comes with a ~/.ccache dir and thus building nodejs gets much faster", "datatype": "message", "nick": "thlorenz"}, {"timestamp": "2016-08-31T20:44:24.772765+00:00", "message": "granted these images would be on the larger side, but could be useful and exist for all kinds of projects that take a while to build", "datatype": "message", "nick": "thlorenz"}, {"timestamp": "2016-08-31T20:46:16.972150+00:00", "message": "thlorenz: you could just have it inside your build context dir. COPY it and compile in the build.", "datatype": "message", "nick": "jor"}, {"timestamp": "2016-08-31T20:46:47.405408+00:00", "message": "jor: yeah thought of that, but then I also have to copy it back out (granted my host is different platform)", "datatype": "message", "nick": "thlorenz"}, {"timestamp": "2016-08-31T20:46:55.693743+00:00", "message": "i.e. I'd have to prime it myself", "datatype": "message", "nick": "thlorenz"}, {"timestamp": "2016-08-31T20:47:15.899342+00:00", "message": "also anyone doing this for the first time wouldn't benefit the same way they would if it was a published image", "datatype": "message", "nick": "thlorenz"}, {"timestamp": "2016-08-31T20:56:27.995320+00:00", "message": "so if i do docker run -t -i myimage /bin/bash and then type exit ENTER, then the container will just keep running right? even if i log off from the SSH shell i ran the docker image from?", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-08-31T20:57:02.959704+00:00", "message": "no, /bin/bash is the pid1 of that container", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T20:57:11.888823+00:00", "message": "exiting that will cause docker consider the container to be stopped.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T21:01:25.996718+00:00", "message": "programmerq, ok i see...so how do i start a container such that it keeps running even if i log out of ssh ?", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-08-31T21:03:11.852826+00:00", "message": "i installed docker. what now? how can I web scale?", "datatype": "message", "nick": "saml"}, {"timestamp": "2016-08-31T21:05:15.035216+00:00", "message": "is there docker in 5 minutes? few commands that tells how to install(?) new image, run it, ... etc", "datatype": "message", "nick": "saml"}, {"timestamp": "2016-08-31T21:06:30.648142+00:00", "message": "programmerq, are you there?", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-08-31T21:21:35.163469+00:00", "message": "how do i start a container such that it keeps running even if i log out of ssh ?", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-08-31T21:23:38.247867+00:00", "message": "docker run -d", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T21:23:40.855634+00:00", "message": "-d is detach mode", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T21:25:11.843728+00:00", "message": "saml: http://lmgtfy.com/?q=docker+in+5+minutes#", "datatype": "message", "nick": "thlorenz"}, {"timestamp": "2016-08-31T21:25:31.359447+00:00", "message": "but seriously lots of material out there to learn from ;)", "datatype": "message", "nick": "thlorenz"}, {"timestamp": "2016-08-31T21:25:35.622790+00:00", "message": "thanks i'm alraedy web scaling", "datatype": "message", "nick": "saml"}, {"timestamp": "2016-08-31T21:25:54.407273+00:00", "message": "docker run --name mariadb --env MYSQL_ROOT_PASSWORD=root --publish 3306:3306 mariadb i did this and it's scale", "datatype": "message", "nick": "saml"}, {"timestamp": "2016-08-31T21:27:57.104645+00:00", "message": "saml thats noob stuff", "datatype": "message", "nick": "telx"}, {"timestamp": "2016-08-31T21:28:04.147831+00:00", "message": "gotta use double docker", "datatype": "message", "nick": "telx"}, {"timestamp": "2016-08-31T21:28:09.083893+00:00", "message": "noob = simple = web scale", "datatype": "message", "nick": "saml"}, {"timestamp": "2016-08-31T21:28:40.784220+00:00", "message": "these things just work out of the box wow", "datatype": "message", "nick": "saml"}, {"timestamp": "2016-08-31T21:29:03.719258+00:00", "message": "dd if=/dev/zero of=/dev/sda bs=1024", "datatype": "message", "nick": "telx"}, {"timestamp": "2016-08-31T21:29:14.475407+00:00", "message": "that's how you web scale", "datatype": "message", "nick": "telx"}, {"timestamp": "2016-08-31T21:30:06.625851+00:00", "message": "that's how these guys made their third billion: https://devnull-as-a-service.com/", "datatype": "message", "nick": "telx"}, {"timestamp": "2016-08-31T21:32:42.929356+00:00", "message": "docker kill mariadb; docker start mariadb; how come data is retained? i thought restaring container would wipe out all data", "datatype": "message", "nick": "saml"}, {"timestamp": "2016-08-31T21:32:57.531188+00:00", "message": "So I have a mysql docker-compose file that just launches mysql, which by default creates a \"mysql_default\" network. I'm trying to connect another docker-compose service to that network but i'm not able to use the service name to connect IE 'mysql:3306'", "datatype": "message", "nick": "bnason"}, {"timestamp": "2016-08-31T21:34:09.773970+00:00", "message": "saml, I *think* that if the image has a VOLUME line in it, docker will create a \"volume\" for it on the host system", "datatype": "message", "nick": "bnason"}, {"timestamp": "2016-08-31T21:34:46.263857+00:00", "message": "yah i wasn't specifying -v . maybe it's new behavior", "datatype": "message", "nick": "saml"}, {"timestamp": "2016-08-31T21:35:07.507575+00:00", "message": "https://docs.docker.com/engine/reference/builde...", "datatype": "message", "nick": "bnason"}, {"timestamp": "2016-08-31T21:38:33.501551+00:00", "message": "saml: it's still the same container", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T21:38:38.713938+00:00", "message": "start starts an existing container", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T21:38:46.548115+00:00", "message": "you can start and stop a container as many times as you want", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T21:38:51.099078+00:00", "message": "it still has the some write layer", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T21:39:06.827150+00:00", "message": "same*", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T21:39:31.941218+00:00", "message": "oh yea that too heh", "datatype": "message", "nick": "bnason"}, {"timestamp": "2016-08-31T21:39:33.093007+00:00", "message": "but in the case of the official mariadb and mysql and postgres images, there is a VOLUME directive in the Dockerfile", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T21:39:39.294272+00:00", "message": "do you use supervisord or something similar to run multiple docker containers? or docker compose?", "datatype": "message", "nick": "saml"}, {"timestamp": "2016-08-31T21:39:44.423029+00:00", "message": "or i guess it could be both? lol", "datatype": "message", "nick": "bnason"}, {"timestamp": "2016-08-31T21:39:45.326692+00:00", "message": "and if you don't specify -v, then docker will create an anonymous volume", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T21:39:49.372706+00:00", "message": ";)", "datatype": "message", "nick": "bnason"}, {"timestamp": "2016-08-31T21:40:18.151238+00:00", "message": "how do you purge container so that you can start afresh (but don't want to pull)", "datatype": "message", "nick": "saml"}, {"timestamp": "2016-08-31T21:40:24.789743+00:00", "message": "saml: docker rm", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T21:40:40.980427+00:00", "message": "but you can do another 'docker run' or 'docker create' to get another conatiner.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-08-31T21:41:08.582756+00:00", "message": "ah thanks.", "datatype": "message", "nick": "saml"}, {"timestamp": "2016-08-31T21:48:10.129635+00:00", "message": "h", "datatype": "message", "nick": "dthorman"}, {"timestamp": "2016-08-31T21:48:49.345231+00:00", "message": "I've just run `docker run -d elasticsearch`, however I can't access my instance at localhost:9300 or 9200", "datatype": "message", "nick": "thepr"}, {"timestamp": "2016-08-31T21:48:54.565652+00:00", "message": "I have no idea what to do", "datatype": "message", "nick": "thepr"}, {"timestamp": "2016-08-31T21:53:32.206380+00:00", "message": "did you expose the port?", "datatype": "message", "nick": "akkad"}, {"timestamp": "2016-08-31T21:53:44.407932+00:00", "message": "in dockerfile EXPOSE 9200", "datatype": "message", "nick": "akkad"}, {"timestamp": "2016-08-31T22:06:07.892512+00:00", "message": "Is there a way to create a container for example with a mysql database and have any changes made to that database transient as opposed to persisted. Volumes gets automatically persisted if I understand correctly.", "datatype": "message", "nick": "HenrikN"}, {"timestamp": "2016-08-31T22:06:51.171900+00:00", "message": "Ideally I would want to create a container with mysql, populate it with data and then freeze it. That is not the technical term I am sure, bit of a noob here.", "datatype": "message", "nick": "HenrikN"}, {"timestamp": "2016-08-31T22:10:52.872647+00:00", "message": "are the official repositories' images (for example debian) built by debian (and if so somehow signed by them) or are they built by docker people?", "datatype": "message", "nick": "psofa"}, {"timestamp": "2016-08-31T22:11:11.095008+00:00", "message": "trying to see who do i have to trust", "datatype": "message", "nick": "psofa"}, {"timestamp": "2016-08-31T22:15:32.814006+00:00", "message": "HenrikN: just destroy and recreate the container", "datatype": "message", "nick": "Helio-"}, {"timestamp": "2016-08-31T22:16:02.431076+00:00", "message": "volumes are not automatically persisted", "datatype": "message", "nick": "Helio-"}, {"timestamp": "2016-08-31T22:21:10.668468+00:00", "message": "sure about that Helio?", "datatype": "message", "nick": "HenrikN"}, {"timestamp": "2016-08-31T22:21:16.968039+00:00", "message": "https://docs.docker.com/engine/tutorials/docker...", "datatype": "message", "nick": "HenrikN"}, {"timestamp": "2016-08-31T22:21:30.635141+00:00", "message": "that page says: \"Data volumes persist even if the container itself is deleted.\"", "datatype": "message", "nick": "HenrikN"}, {"timestamp": "2016-08-31T22:22:57.352315+00:00", "message": "only if you create a data volume for your mysql container", "datatype": "message", "nick": "Helio-"}, {"timestamp": "2016-08-31T22:23:00.337306+00:00", "message": "just don't create one", "datatype": "message", "nick": "Helio-"}, {"timestamp": "2016-08-31T22:23:41.745487+00:00", "message": "if you don't pass -v to the mysql container the data wll be transient", "datatype": "message", "nick": "Helio-"}, {"timestamp": "2016-08-31T22:24:03.190479+00:00", "message": "ok, I will try that, thanks.", "datatype": "message", "nick": "HenrikN"}, {"timestamp": "2016-08-31T22:46:59.254473+00:00", "message": "hey, at the end of my docker file I've put the line CMD ['mycommand'], the 'mycommand' is in the path and CMD env and CMD ['env'] show that the path is correct, yet still when I run the container it complaints its not there", "datatype": "message", "nick": "groundnuty"}, {"timestamp": "2016-08-31T22:49:59.070824+00:00", "message": "groundnuty: do you have an entrypoint?", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-31T22:51:04.748645+00:00", "message": "GodGinrai: no, jsut CMD", "datatype": "message", "nick": "groundnuty"}, {"timestamp": "2016-08-31T22:51:46.614474+00:00", "message": "just FROM, RUN, and CMD there 3 lines :)", "datatype": "message", "nick": "groundnuty"}, {"timestamp": "2016-08-31T22:52:13.828745+00:00", "message": "hrm", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-31T22:52:16.137289+00:00", "message": "try this:", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-31T22:52:30.166309+00:00", "message": "CMD ['env && mycommand']", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-31T22:53:24.273997+00:00", "message": "https://github.com/groundnuty/hipchat-docker-we...", "datatype": "message", "nick": "groundnuty"}, {"timestamp": "2016-08-31T22:53:26.951739+00:00", "message": "ok", "datatype": "message", "nick": "groundnuty"}, {"timestamp": "2016-08-31T22:53:43.346323+00:00", "message": "I did tried CMD env and CMD ['env'] they showned good $PATH", "datatype": "message", "nick": "groundnuty"}, {"timestamp": "2016-08-31T22:54:48.036131+00:00", "message": "/bin/sh: 1: [evn && hipchat-docker-webhook]: not found", "datatype": "message", "nick": "groundnuty"}, {"timestamp": "2016-08-31T22:55:47.945592+00:00", "message": "groundnuty: well, for one thing, you have a typo in the github url", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-31T22:55:56.457452+00:00", "message": "you put \"webook\" instead of \"webhook\"", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-08-31T23:01:30.230824+00:00", "message": "GodGinrai: yea... and that's what expets are for :)", "datatype": "message", "nick": "groundnuty"}, {"timestamp": "2016-08-31T23:01:33.616303+00:00", "message": "thx :)", "datatype": "message", "nick": "groundnuty"}, {"timestamp": "2016-08-31T23:01:41.737969+00:00", "message": "never whoud have seen it", "datatype": "message", "nick": "groundnuty"}, {"timestamp": "2016-08-31T23:04:08.950034+00:00", "message": "np", "datatype": "message", "nick": "GodGinrai"}, {"timestamp": "2016-09-01T00:46:12.632958+00:00", "message": "Hi, is there a way to specify command line arguments for containers in Kitematic?", "datatype": "message", "nick": "thebitguru"}, {"timestamp": "2016-09-01T01:30:17.669390+00:00", "message": "Am I going to run into any headaches if I use Docker without AUFS support?", "datatype": "message", "nick": "guzzlefry"}, {"timestamp": "2016-09-01T03:08:47.868672+00:00", "message": "It's pretty quiet in here :)", "datatype": "message", "nick": "thebitguru"}, {"timestamp": "2016-09-01T03:52:30.828455+00:00", "message": "thebitguru: maybe like https://docs.docker.com/kitematic/userguide/#/d... ?", "datatype": "message", "nick": "larsks"}, {"timestamp": "2016-09-01T04:01:28.258553+00:00", "message": "i have a postgres container running and i have a sql dump locally, how do I get the data into the db inside the container?", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-09-01T04:01:34.685193+00:00", "message": "sql dump on the host, i mean", "datatype": "message", "nick": "rakm"}, {"timestamp": "2016-09-01T04:11:01.864292+00:00", "message": "@larsks: I can access the CLI, but I am not sure how I can add the additional parameter to the container. Any ideas? I have been searching, but no luck so far.", "datatype": "message", "nick": "thebitguru"}, {"timestamp": "2016-09-01T04:11:34.585743+00:00", "message": "thebitguru: looking at the docs, you should be able to create a new container via the 'docker run ...' cli, so you can pass in arbitrary command line arguments.", "datatype": "message", "nick": "larsks"}, {"timestamp": "2016-09-01T04:11:56.557351+00:00", "message": "That's just my guess based on the docs; I don't have kitematic in front of me to test.", "datatype": "message", "nick": "larsks"}, {"timestamp": "2016-09-01T04:12:06.559085+00:00", "message": "Can I edit the args after I have created a container, or those can only be added when creating it?", "datatype": "message", "nick": "thebitguru"}, {"timestamp": "2016-09-01T04:12:33.258766+00:00", "message": "\"docker inspect container-name\" shows the Config/CMD that I am guessing I need to edit, but I can't figure out how to edit that.", "datatype": "message", "nick": "thebitguru"}, {"timestamp": "2016-09-01T04:13:19.622008+00:00", "message": "I don't believe that is something that you can edit. You can only modify it by creating a new image (e.g., in a dockerfile, or possibly via docker commit)", "datatype": "message", "nick": "larsks"}, {"timestamp": "2016-09-01T04:13:51.858625+00:00", "message": "Ah, that's probably what I was missing. I will try recreating a new image from command line. I am new to this, as you can probably tell :)", "datatype": "message", "nick": "thebitguru"}, {"timestamp": "2016-09-01T04:14:12.669084+00:00", "message": "No worries. I'm completely unfamiliar with kitematic, so take anything I see on that front with a grain of salt.", "datatype": "message", "nick": "larsks"}, {"timestamp": "2016-09-01T04:14:46.393532+00:00", "message": "I was looking at the code behind kitematic and it relies on the docker remote API so it doesn't look like there is much kitematic magic going on.", "datatype": "message", "nick": "thebitguru"}, {"timestamp": "2016-09-01T04:15:02.852387+00:00", "message": "It's just a GUI for the docker backend", "datatype": "message", "nick": "thebitguru"}, {"timestamp": "2016-09-01T04:15:24.464706+00:00", "message": "\"When you rename the container it will be stopped, removed and re-created with the new name (due to the default volumes mapping.\"", "datatype": "message", "nick": "thebitguru"}, {"timestamp": "2016-09-01T04:15:43.223164+00:00", "message": "So, that's exactly what it does.", "datatype": "message", "nick": "thebitguru"}, {"timestamp": "2016-09-01T04:20:00.309120+00:00", "message": "@larsks: Thanks for pointing me in the right direction!", "datatype": "message", "nick": "thebitguru"}, {"timestamp": "2016-09-01T05:25:37.839546+00:00", "message": "hello", "datatype": "message", "nick": "palate"}, {"timestamp": "2016-09-01T05:27:33.981764+00:00", "message": "I am not completely sure about docker volumes, but I can't seem to find answers in the documentation. Is it right to say it as follows?", "datatype": "message", "nick": "palate"}, {"timestamp": "2016-09-01T05:29:43.980703+00:00", "message": "\"A volume is a directory containing data. It is not layered or using any kind of union filesystem like containers and images do; it is a simple directory. A volume can be mounted on a container, in which case it will override the directory on which it is mounted on the container\"", "datatype": "message", "nick": "palate"}, {"timestamp": "2016-09-01T05:33:09.977901+00:00", "message": "\"This means that there is no difference between creating a volume with `docker volume create`, creating a data volume container with `docker create -v ...` or mounting a host directory as a data volume. The only difference is the location of this \"volume directory\" on the host, but nothing more.\"", "datatype": "message", "nick": "palate"}, {"timestamp": "2016-09-01T05:34:01.144988+00:00", "message": "That is my understanding of docker volumes, I want to verify that. Does somebody know where I can find that?", "datatype": "message", "nick": "palate"}, {"timestamp": "2016-09-01T05:35:19.722877+00:00", "message": "Hello there!", "datatype": "message", "nick": "r4z"}, {"timestamp": "2016-09-01T05:35:30.272780+00:00", "message": "hi", "datatype": "message", "nick": "palate"}, {"timestamp": "2016-09-01T05:36:17.813199+00:00", "message": "I have running a ELK stack on docker and I'd like to add a mongodb plugin... I'm pretty n00b with docker...", "datatype": "message", "nick": "r4z"}, {"timestamp": "2016-09-01T05:36:55.152623+00:00", "message": "And I have this guide which says that running this command will add that plugin:", "datatype": "message", "nick": "r4z"}, {"timestamp": "2016-09-01T05:37:38.557281+00:00", "message": "sudo docker run container_id FROM sebp/elk WORKDIR ${LOGSTASH_HOME} RUN gosu logstash bin/logstash-plugin install logstash-output-mongodb", "datatype": "message", "nick": "r4z"}, {"timestamp": "2016-09-01T05:37:54.075136+00:00", "message": "I mean, this:", "datatype": "message", "nick": "r4z"}, {"timestamp": "2016-09-01T05:37:55.951537+00:00", "message": "FROM sebp/elk WORKDIR ${LOGSTASH_HOME} RUN gosu logstash bin/logstash-plugin install logstash-output-mongodb", "datatype": "message", "nick": "r4z"}, {"timestamp": "2016-09-01T05:38:08.631810+00:00", "message": "But I don't know how to run it", "datatype": "message", "nick": "r4z"}, {"timestamp": "2016-09-01T05:42:21.607046+00:00", "message": "I should save that cmd as a DockerFile and then...", "datatype": "message", "nick": "r4z"}, {"timestamp": "2016-09-01T05:46:31.725521+00:00", "message": "Okey I think I got it", "datatype": "message", "nick": "r4z"}, {"timestamp": "2016-09-01T05:46:42.266686+00:00", "message": "I must create a DockerFile", "datatype": "message", "nick": "r4z"}, {"timestamp": "2016-09-01T05:49:04.907065+00:00", "message": "r4z: gosu is a binary coming with elk, right?", "datatype": "message", "nick": "palate"}, {"timestamp": "2016-09-01T05:49:58.409571+00:00", "message": "palate: gosu, simple Go-based setuid+setgid+setgroups+exec, a convenient alternative to USER in Dockerfiles", "datatype": "message", "nick": "r4z"}, {"timestamp": "2016-09-01T05:50:05.802707+00:00", "message": "r4z: I mean... if you go inside the docker container, what is the command line you need to run in order to install the plugin? Isn't it something like \"logstash-plugin install logstash-output-mongodb\"?", "datatype": "message", "nick": "palate"}, {"timestamp": "2016-09-01T05:50:49.031130+00:00", "message": "r4z: Ok, so that is a docker thing saying that you will run \"logstash-plugin install logstash-output-mongodb\" as the \"logstash\" user, right?", "datatype": "message", "nick": "palate"}, {"timestamp": "2016-09-01T05:51:35.105442+00:00", "message": "palate: that's right", "datatype": "message", "nick": "r4z"}, {"timestamp": "2016-09-01T05:52:02.738720+00:00", "message": "r4z: To me, there are two things: (1) installing stuff on the container (that is independent from docker), and (2) make the DockerFile install the right things on your container", "datatype": "message", "nick": "palate"}, {"timestamp": "2016-09-01T05:52:34.176420+00:00", "message": "r4z: So first, make sure that you can install your plugin from inside your container, maybe.", "datatype": "message", "nick": "palate"}, {"timestamp": "2016-09-01T05:53:29.673095+00:00", "message": "ok, I'll check it, thanks!", "datatype": "message", "nick": "r4z"}, {"timestamp": "2016-09-01T05:53:43.291741+00:00", "message": "r4z: Then, the DockerFile you copied says that your base image is sebp/elk (\"FROM sebp/elk\"), and when creating the image, you run the installation of the plugin (\"RUN gosu ... logstash-output-mongodb\")", "datatype": "message", "nick": "palate"}, {"timestamp": "2016-09-01T05:54:25.643164+00:00", "message": "r4z: but that is exactly the same as running the sebp/elk image directly and trying to run the command from inside", "datatype": "message", "nick": "palate"}, {"timestamp": "2016-09-01T05:54:32.772929+00:00", "message": "r4z: hope it helped =/", "datatype": "message", "nick": "palate"}, {"timestamp": "2016-09-01T06:06:12.218478+00:00", "message": "Success! the plugin installed correct, now let's see if the integration works :) thanks palate", "datatype": "message", "nick": "r4z"}, {"timestamp": "2016-09-01T06:06:44.851255+00:00", "message": "r4z: ;-)", "datatype": "message", "nick": "palate"}, {"timestamp": "2016-09-01T07:27:10.415084+00:00", "message": "Hi - I have problem creating registry service. I wrote a issue about it, but I don't think it should be an issue. Anyone know how to solve this problem? https://github.com/docker/distribution/issues/1933", "datatype": "message", "nick": "slunatecqo"}, {"timestamp": "2016-09-01T07:32:51.794849+00:00", "message": "Hi. I'm using this image: mvertes/alpine-mongoI have specified this volumen through docker compose: mongo-data:/data/db", "datatype": "message", "nick": "chachan"}, {"timestamp": "2016-09-01T07:33:32.751853+00:00", "message": "but I can't find that directory in my local files. I'm using OSX (native)", "datatype": "message", "nick": "chachan"}, {"timestamp": "2016-09-01T07:36:10.238268+00:00", "message": "chachan you need to create the path", "datatype": "message", "nick": "rmenn"}, {"timestamp": "2016-09-01T07:37:10.045058+00:00", "message": "rmenn: but I'm using it right now and data is persistent, where is it stored?", "datatype": "message", "nick": "chachan"}, {"timestamp": "2016-09-01T07:37:38.769875+00:00", "message": "Docker compose is not mounting my host volumes. I add \"volumes: - /absolute/path/to/host/volume:/absolute/path/to/container/folder\" to docker-compose.yml, but it is not mounting. Mounting the host volume from the command line (docker run ...) is working. Any idea why?", "datatype": "message", "nick": "palate"}, {"timestamp": "2016-09-01T07:38:26.021409+00:00", "message": "rmenn: starting container using verbose mode says mountpoint is /var/lib/docker/volumes/cykik_mongo-data/_data, but I can't see that either in my local computer", "datatype": "message", "nick": "chachan"}, {"timestamp": "2016-09-01T07:38:49.119549+00:00", "message": "hi all, when docker hub builds our image it puts the readme.md from the source root dir to the home page, is there a way to make it choose a different readme?", "datatype": "message", "nick": "kr1ss"}, {"timestamp": "2016-09-01T08:02:01.098493+00:00", "message": "hey! about docker swarm, how many managers and workers is recommended to have for cluster?", "datatype": "message", "nick": "marech"}, {"timestamp": "2016-09-01T08:34:25.479693+00:00", "message": "does somebody have experience with mounting host volumes with docker-compose? in my experience, `volumes-from` works, but not `volumes`", "datatype": "message", "nick": "palate"}, {"timestamp": "2016-09-01T08:39:08.499993+00:00", "message": "Anyone able to help with a swarm+overlay-network issue?", "datatype": "message", "nick": "cpldave"}, {"timestamp": "2016-09-01T08:40:13.760047+00:00", "message": "Does anyone know if dockers \"Desired state reconciliation\" means it kills containers to reschedule them somewhere else in order to spread them evenly in a swarm?", "datatype": "message", "nick": "Perl_Is_Not_Dead"}, {"timestamp": "2016-09-01T08:42:39.003056+00:00", "message": "I'm using AWS. I have 3 managers and 2 nodes all running 1.12.1. They are all in the same security-group and have unrestricted network access to each other, but for some reason overlay networking isn't working at all. Any tips on diagnosing?", "datatype": "message", "nick": "cpldave"}, {"timestamp": "2016-09-01T08:42:42.477496+00:00", "message": "when are docker volumes mounted? can I put the VOLUME commands at the end of the dockerfile?", "datatype": "message", "nick": "pLaTo0n"}, {"timestamp": "2016-09-01T08:43:03.473803+00:00", "message": "I need to write things in the volume paths before mounting them", "datatype": "message", "nick": "pLaTo0n"}, {"timestamp": "2016-09-01T08:50:17.631859+00:00", "message": "is there anyone that has a good way to give a docker container a \"real ip\". Example, I want to give a container the ip 158.10.10.10 and I want to be able to access it directly from the internet. When I kill the container, the ip should no longer be reachable.", "datatype": "message", "nick": "Lock-Aze"}, {"timestamp": "2016-09-01T08:52:17.308521+00:00", "message": "hi, i run docker only from time to time for testing things, howewer /var/lib/docker/btrfs/subvolumes filled up my entire root partition. (it is only 40 GB but baobab says that dir is 150GB Howewer at least 30 are actually taken.. what can should i do about it ?", "datatype": "message", "nick": "asdfas"}, {"timestamp": "2016-09-01T08:52:34.721955+00:00", "message": "just delete all the subvolumes with the btrfs command?", "datatype": "message", "nick": "asdfas"}, {"timestamp": "2016-09-01T09:07:19.755045+00:00", "message": "i want to set the hostname of the machine inside the dockerfile. this is because im running commands in the dockerfile which read the hostname", "datatype": "message", "nick": "unholycrab"}, {"timestamp": "2016-09-01T09:07:59.400886+00:00", "message": "i can't run `hostname foo` in the dockerfile. it gives me the error \"hostname: you must be root to change the host name\"", "datatype": "message", "nick": "unholycrab"}, {"timestamp": "2016-09-01T09:13:02.568283+00:00", "message": "unholycrab: http://lmgtfy.com/?q=hostname%3A+you+must+be+ro...", "datatype": "message", "nick": "disconnected"}, {"timestamp": "2016-09-01T09:13:13.295874+00:00", "message": "First link! A github issue!", "datatype": "message", "nick": "disconnected"}, {"timestamp": "2016-09-01T09:13:14.954152+00:00", "message": "... really.", "datatype": "message", "nick": "disconnected"}, {"timestamp": "2016-09-01T09:13:51.641757+00:00", "message": "disconnected: you are a smart man with great sarcasm superpowers", "datatype": "message", "nick": "unholycrab"}, {"timestamp": "2016-09-01T09:14:02.030900+00:00", "message": "they suggest starting the container with -h", "datatype": "message", "nick": "unholycrab"}, {"timestamp": "2016-09-01T09:14:08.200901+00:00", "message": "but thats not what im doing. im building a container with a dockerfile", "datatype": "message", "nick": "unholycrab"}, {"timestamp": "2016-09-01T09:15:10.475457+00:00", "message": "you fucking moron", "datatype": "message", "nick": "unholycrab"}, {"timestamp": "2016-09-01T09:15:12.904470+00:00", "message": "can't u build it without -h", "datatype": "message", "nick": "disconnected"}, {"timestamp": "2016-09-01T09:15:22.229389+00:00", "message": "without `RUN hostname`", "datatype": "message", "nick": "disconnected"}, {"timestamp": "2016-09-01T09:15:27.219551+00:00", "message": "and then do docker run -h ?", "datatype": "message", "nick": "disconnected"}, {"timestamp": "2016-09-01T09:15:42.839136+00:00", "message": "disconnected: i want to set the hostname within the Dockerfil", "datatype": "message", "nick": "unholycrab"}, {"timestamp": "2016-09-01T09:16:13.819323+00:00", "message": "because there are build steps which read the hostname", "datatype": "message", "nick": "unholycrab"}, {"timestamp": "2016-09-01T09:16:19.355315+00:00", "message": "http://stackoverflow.com/questions/28898787/how...", "datatype": "message", "nick": "disconnected"}, {"timestamp": "2016-09-01T09:17:40.173251+00:00", "message": "thats better", "datatype": "message", "nick": "unholycrab"}, {"timestamp": "2016-09-01T09:18:18.038184+00:00", "message": "so you need to write a line to /etc/hosts for every RUN command that requires the hostname be set? D:", "datatype": "message", "nick": "unholycrab"}, {"timestamp": "2016-09-01T09:18:35.485991+00:00", "message": "because on the next layer the hostname will be overwritten", "datatype": "message", "nick": "unholycrab"}, {"timestamp": "2016-09-01T09:19:27.815038+00:00", "message": "let the RUN command be a bash script that will do all the things u need with hostname...", "datatype": "message", "nick": "disconnected"}, {"timestamp": "2016-09-01T09:19:50.426835+00:00", "message": "what do u need hostname for?", "datatype": "message", "nick": "disconnected"}, {"timestamp": "2016-09-01T09:20:34.605694+00:00", "message": "im putting some legacy products in docker containers and they like it", "datatype": "message", "nick": "unholycrab"}, {"timestamp": "2016-09-01T09:23:57.056423+00:00", "message": "it doesn't appear to work, disconnected", "datatype": "message", "nick": "unholycrab"}, {"timestamp": "2016-09-01T09:24:13.699320+00:00", "message": "hi, I am hitting a permissions issue when running under a non root user. I created a new user using useradd and created the home directory with necessary permissions. But when i run the container, the process creates a new directory for logging. But this is with root owner.", "datatype": "message", "nick": "yvdinesh"}, {"timestamp": "2016-09-01T09:24:49.236770+00:00", "message": "This causes the process to not be able to log to this new directory", "datatype": "message", "nick": "yvdinesh"}, {"timestamp": "2016-09-01T09:24:55.283111+00:00", "message": "https://www.irccloud.com/pastebin/7TyVPRbS/", "datatype": "message", "nick": "unholycrab"}, {"timestamp": "2016-09-01T09:26:02.908407+00:00", "message": "This only occurs on brtfs backed filesystem on circle ci", "datatype": "message", "nick": "yvdinesh"}, {"timestamp": "2016-09-01T09:28:23.212954+00:00", "message": "yvdinesh: on btrfs? hm", "datatype": "message", "nick": "disconnected"}, {"timestamp": "2016-09-01T09:29:24.508200+00:00", "message": "yup only on brtfs. i cannot reproduce on aufs with dirperm1 true", "datatype": "message", "nick": "yvdinesh"}, {"timestamp": "2016-09-01T09:29:25.619997+00:00", "message": "yvdinesh: so the process is run as a root if it creates directory with root owner", "datatype": "message", "nick": "disconnected"}, {"timestamp": "2016-09-01T09:29:47.460775+00:00", "message": "did u try to use `USER <name>` in the dockerfile?", "datatype": "message", "nick": "disconnected"}, {"timestamp": "2016-09-01T09:29:51.744671+00:00", "message": "yes", "datatype": "message", "nick": "yvdinesh"}, {"timestamp": "2016-09-01T09:30:03.937027+00:00", "message": "the process is run as non root user", "datatype": "message", "nick": "yvdinesh"}, {"timestamp": "2016-09-01T09:30:27.793095+00:00", "message": "and the directory it creates is in the non root user's home directory", "datatype": "message", "nick": "yvdinesh"}, {"timestamp": "2016-09-01T09:31:20.757545+00:00", "message": "check pw", "datatype": "message", "nick": "disconnected"}, {"timestamp": "2016-09-01T09:42:10.034204+00:00", "message": "second try", "datatype": "message", "nick": "asdfas"}, {"timestamp": "2016-09-01T09:42:23.777053+00:00", "message": "hi, i run docker only from time to time for testing things, howewer /var/lib/docker/btrfs/subvolumes filled up my entire root partition. (it is only 40 GB but baobab says that dir is 150GB Howewer at least 30 are actually taken.. what can should i do about it ? just delete all the subvolumes with the btrfs command?", "datatype": "message", "nick": "asdfas"}, {"timestamp": "2016-09-01T10:05:54.118838+00:00", "message": "ok for poor fellow reference", "datatype": "message", "nick": "asdfas"}, {"timestamp": "2016-09-01T10:05:57.938635+00:00", "message": "i just did", "datatype": "message", "nick": "asdfas"}, {"timestamp": "2016-09-01T10:06:06.466112+00:00", "message": "sudo btrfs subvolume delete /var/lib/docker/btrfs/*", "datatype": "message", "nick": "asdfas"}, {"timestamp": "2016-09-01T10:06:59.062506+00:00", "message": "it takes forever but slowly i get my space back - be sure you don't notice that one too late you're gonna be really screwed !", "datatype": "message", "nick": "asdfas"}, {"timestamp": "2016-09-01T10:09:45.517689+00:00", "message": "Hey guys suddenly I'm receiving this error: /usr/local/bin/docker: open /mnt/sda1/var/lib/docker/tmp/GetImageBlob260849384: structure needs cleaning.", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T10:09:45.720868+00:00", "message": "I don't know what to do! I tried deleting the docker machine and recreating it but still no luck", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T10:11:24.516021+00:00", "message": "this happens when I try to download a new image like so: docker run -it ubuntu bash", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T10:17:55.855068+00:00", "message": "ok to put forever into prospective i had around 76 subolumes worth 150 GB (withouts fs awareness) (real worth around 30gb) and it toock around 20 mins for btrfs to celan up /actually free space after deletion.", "datatype": "message", "nick": "asdfas"}, {"timestamp": "2016-09-01T10:18:01.009782+00:00", "message": "gn8", "datatype": "message", "nick": "asdfas"}, {"timestamp": "2016-09-01T10:29:59.153183+00:00", "message": "hi - newbie question .. using docker - very impressed - i have numerous images, separate docker files under git - on chnage they go into jenkins, build a new image and add to registry -- what I'm trying to figure is is there a way to include common requirements between dockerfiles?", "datatype": "message", "nick": "slogger3141"}, {"timestamp": "2016-09-01T10:31:02.744253+00:00", "message": "e.g. a simple example is if i add config file to image A are there any tools i can use that would add it to Dockerfile for images B,C,D etc", "datatype": "message", "nick": "slogger3141"}, {"timestamp": "2016-09-01T10:31:36.794748+00:00", "message": "these are all different OS and some diff apps etc", "datatype": "message", "nick": "slogger3141"}, {"timestamp": "2016-09-01T10:33:44.898861+00:00", "message": "Hi all, I'm using docker-compose and got a 'container exited with code 0', this is my docker-compose file. http://pastebin.com/V9EPYR0H any advice?", "datatype": "message", "nick": "FrancescoV"}, {"timestamp": "2016-09-01T10:36:29.823921+00:00", "message": "@FrancescoV did you try running it again but using tty: true in the file?", "datatype": "message", "nick": "slogger3141"}, {"timestamp": "2016-09-01T10:36:37.588070+00:00", "message": "^did^could", "datatype": "message", "nick": "slogger3141"}, {"timestamp": "2016-09-01T10:43:37.170763+00:00", "message": "slogger3141, it works, thanks!", "datatype": "message", "nick": "FrancescoV"}, {"timestamp": "2016-09-01T10:43:45.157597+00:00", "message": "cool", "datatype": "message", "nick": "slogger3141"}, {"timestamp": "2016-09-01T10:47:58.061949+00:00", "message": "I have 2 containers, 'web' and 'tensorflow', the tensorflow uses the image 'gcr.io/tensorflow/tensorflow:latest-devel' from https://www.tensorflow.org/versions/r0.10/get_s... but how can I import the tensorflow in my 'web' in python. Any advice?", "datatype": "message", "nick": "FrancescoV"}, {"timestamp": "2016-09-01T10:52:41.971612+00:00", "message": "hmm, if i have swarm nodes in different data centers how to make them reach each other?", "datatype": "message", "nick": "marech"}, {"timestamp": "2016-09-01T11:03:22.208128+00:00", "message": "mind bullets", "datatype": "message", "nick": "unholycrab"}, {"timestamp": "2016-09-01T11:05:05.578344+00:00", "message": "@marech - shouldnt matter - so long as routing in place and firewalls ok - only issue could be latency between the two datacenters", "datatype": "message", "nick": "slogger3141"}, {"timestamp": "2016-09-01T11:06:12.668358+00:00", "message": "@marech - you cold also setup swarm replicas in each subnet for redundancy", "datatype": "message", "nick": "slogger3141"}, {"timestamp": "2016-09-01T11:06:50.099103+00:00", "message": "slogger3141, yeah looks like routing is problem, dont know how to setup it", "datatype": "message", "nick": "marech"}, {"timestamp": "2016-09-01T11:07:32.423011+00:00", "message": "but how people mostly use swarm then? get few virtual machines in data center and run swarm only there?", "datatype": "message", "nick": "marech"}, {"timestamp": "2016-09-01T11:07:59.792072+00:00", "message": "thats really something on underlying host os that needs doing - best speaking with your local network admin/sys admin", "datatype": "message", "nick": "slogger3141"}, {"timestamp": "2016-09-01T11:08:33.680121+00:00", "message": "i have swarm over local machines and also extending into different aws zones - so lots of places..", "datatype": "message", "nick": "slogger3141"}, {"timestamp": "2016-09-01T11:14:05.519293+00:00", "message": "ahaa, i see, well thanks for info anyways!", "datatype": "message", "nick": "marech"}, {"timestamp": "2016-09-01T12:06:58.869491+00:00", "message": "hello, \"This version of UCP does not support running in swarm-mode.\" - is there a version that does? or an alternative?", "datatype": "message", "nick": "oskie"}, {"timestamp": "2016-09-01T12:16:37.634783+00:00", "message": "hello", "datatype": "message", "nick": "sumi"}, {"timestamp": "2016-09-01T12:18:19.391081+00:00", "message": "An established TCP connection to a process inside a running docker container does not show up in `sudo netstat -anlp` on my ubuntu server 16.04. The netstat does only show the LISTEN", "datatype": "message", "nick": "b3h3m0th"}, {"timestamp": "2016-09-01T12:48:28.666566+00:00", "message": "ping", "datatype": "message", "nick": "b3h3m0th"}, {"timestamp": "2016-09-01T12:59:41.770255+00:00", "message": "oskie: you need to run the CS version of the docker engine https://docs.docker.com/cs-engine/install/ and you can not use swarm mode (yet)", "datatype": "message", "nick": "mbentley"}, {"timestamp": "2016-09-01T13:09:40.001744+00:00", "message": "pong", "datatype": "message", "nick": "ash_workz"}, {"timestamp": "2016-09-01T13:26:29.004470+00:00", "message": "I can't seem to get my docker-compose.yml to join one of the services to a predefined network. I get the following error: 'ERROR: Service \"php\" uses an undefined network \"mysql\"'", "datatype": "message", "nick": "bnason"}, {"timestamp": "2016-09-01T13:26:44.587124+00:00", "message": "even though docker network ls clearly shows it, 'f21a74b2eca1 mysql bridge local'", "datatype": "message", "nick": "bnason"}, {"timestamp": "2016-09-01T13:27:45.901684+00:00", "message": "oh do I *have* to define the network in the global 'networks' block in my compose file too? as external?", "datatype": "message", "nick": "bnason"}, {"timestamp": "2016-09-01T13:30:24.138629+00:00", "message": "huzzah! finally", "datatype": "message", "nick": "bnason"}, {"timestamp": "2016-09-01T13:33:38.403186+00:00", "message": "Using docker-compose, and trying to force a service to run on a specific node, using the following in the environment section: constraint: \"node==node-swarm-02\"", "datatype": "message", "nick": "mapu"}, {"timestamp": "2016-09-01T13:33:49.573828+00:00", "message": "however- while a different service DOES obey this- this particular service won\u2019t.", "datatype": "message", "nick": "mapu"}, {"timestamp": "2016-09-01T13:54:23.395956+00:00", "message": "An established TCP connection to a process inside a running docker container does not show up in `sudo netstat -anlp` on my ubuntu server 16.04. The netstat does only show the LISTEN", "datatype": "message", "nick": "b3h3m0th"}, {"timestamp": "2016-09-01T14:16:29.825189+00:00", "message": "hi", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:16:30.686229+00:00", "message": "having latency in 'docker network ls' command (10/15sec to respond),  i looked on what was happening, and i'm having, around 1300 http request to consul master to get informations when doing 'docker network ls'", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:16:40.754228+00:00", "message": "using consul as KV", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:16:54.856124+00:00", "message": "does someone else have the same issue ?", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:26:43.158273+00:00", "message": "hello....does docker service not run on machine startup?", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T14:31:21.078471+00:00", "message": "Yaltar_: How many entries are there?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T14:31:29.071542+00:00", "message": "Yaltar_: Did you check the actual K/V store?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T14:38:18.142148+00:00", "message": "diverdude: it can", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T14:38:29.691846+00:00", "message": "diverdude: on systemd os, systemctl --enable docker", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T14:38:32.688594+00:00", "message": "or somehting like that", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T14:38:38.254498+00:00", "message": "systemctl enable docker", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T14:38:40.128796+00:00", "message": "I think thats it", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T14:43:15.259361+00:00", "message": "Has anyone been able to use docker + aws eb with env vars in aws eb? It seems that some of the env vars aren't being passed thorugh (not sure if this the right place to ask)", "datatype": "message", "nick": "iwaffles"}, {"timestamp": "2016-09-01T14:52:32.596158+00:00", "message": "Can Someone help me understand how vxlan works in swarm?", "datatype": "message", "nick": "bsmithx10"}, {"timestamp": "2016-09-01T14:52:50.126198+00:00", "message": "I'm trying to move the docker development per team into a hosted solution internally", "datatype": "message", "nick": "bsmithx10"}, {"timestamp": "2016-09-01T14:53:09.615229+00:00", "message": "so my team can run docker builds etc against the swarm since our laptops are locked down too much", "datatype": "message", "nick": "bsmithx10"}, {"timestamp": "2016-09-01T14:58:27.972148+00:00", "message": "cpuguy83: yes i checked the KV, each call respond in order of (130.084\u00b5s) there just too much call", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:58:45.147170+00:00", "message": "Yaltar_: What calls is it making?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T14:58:54.353171+00:00", "message": "The same endpoint over and over?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T14:58:56.730775+00:00", "message": "I only have 7 docker nodes, around 10 overlay network, and 30 containers", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:59:02.185657+00:00", "message": "Yes the same", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:59:21.158001+00:00", "message": "Oh hmm... I seem to recall an issue like this.", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T14:59:21.474377+00:00", "message": "well same call, for mutliple endpoint", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:59:26.468430+00:00", "message": "example :", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:59:41.540468+00:00", "message": "2016/09/01 13:02:27 [DEBUG] http: Request /v1/kv/network/docker/network/v1.0/network/d1b2d273120f2f767b1009553b11a0d33f502abd2cb259351db3245ed9d26da5/?consistent= (167.342\u00b5s)", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:59:41.645362+00:00", "message": "2016/09/01 13:02:27 [DEBUG] http: Request /v1/kv/network/docker/network/v1.0/endpoint_count/d1b2d273120f2f767b1009553b11a0d33f502abd2cb259351db3245ed9d26da5/?consistent= (128.708\u00b5s)", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:59:41.645407+00:00", "message": "2016/09/01 13:02:27 [DEBUG] http: Request /v1/kv/network/docker/network/v1.0/endpoint/d1b2d273120f2f767b1009553b11a0d33f502abd2cb259351db3245ed9d26da5/5371000ab0fbbf1b16102f531715109c1d0c9c960a2d6d7a00bcecdf8167d7b7/?consistent= (137.857\u00b5s)", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:59:41.645934+00:00", "message": "2016/09/01 13:02:27 [DEBUG] http: Request /v1/kv/network/docker/network/v1.0/network/d1b2d273120f2f767b1009553b11a0d33f502abd2cb259351db3245ed9d26da5/?consistent= (132.908\u00b5s)", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:59:41.646357+00:00", "message": "2016/09/01 13:02:27 [DEBUG] http: Request /v1/kv/network/docker/network/v1.0/endpoint_count/d1b2d273120f2f767b1009553b11a0d33f502abd2cb259351db3245ed9d26da5/?consistent= (131.041\u00b5s)", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:59:41.925238+00:00", "message": "2016/09/01 13:02:27 [DEBUG] http: Request /v1/kv/network/docker/network/v1.0/endpoint/d1b2d273120f2f767b1009553b11a0d33f502abd2cb259351db3245ed9d26da5/7e40053a87a5286ee64f4ec2ab18500dd5a8cc49636b027dff9edb96c72b957a/?consistent= (133.673\u00b5s)", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:59:42.030121+00:00", "message": "2016/09/01 13:02:27 [DEBUG] http: Request /v1/kv/network/docker/network/v1.0/network/d1b2d273120f2f767b1009553b11a0d33f502abd2cb259351db3245ed9d26da5/?consistent= (227.235\u00b5s)", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:59:42.925275+00:00", "message": "2016/09/01 13:02:27 [DEBUG] http: Request /v1/kv/network/docker/network/v1.0/endpoint_count/d1b2d273120f2f767b1009553b11a0d33f502abd2cb259351db3245ed9d26da5/?consistent= (132.576\u00b5s)", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:59:43.029731+00:00", "message": "2016/09/01 13:02:27 [DEBUG] http: Request /v1/kv/network/docker/network/v1.0/endpoint/d1b2d273120f2f767b1009553b11a0d33f502abd2cb259351db3245ed9d26da5/7e40053a87a5286ee64f4ec2ab18500dd5a8cc49636b027dff9edb96c72b957a/?consistent= (182.465\u00b5s)", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:59:48.852135+00:00", "message": "Please don't paste directly in chat", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T14:59:54.148369+00:00", "message": "oups", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T14:59:55.244399+00:00", "message": ":(", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T15:11:40.621730+00:00", "message": "Yaltar_: Dos this sound familiar? https://github.com/docker/docker/issues/22975", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T15:15:44.762326+00:00", "message": "cpuguy83 : not that much, i've one node in 3.14 kernel, the others in 4.6 kernel. But using Docker 1.12 so shouldn't be affected", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T15:16:24.925115+00:00", "message": "make use of 3.14 kernel due to this one : https://github.com/docker/docker/issues/5618", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T15:16:27.864123+00:00", "message": "Can you open a bug on github.com/docker/libnetwork?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T15:16:53.435657+00:00", "message": "Generally you shouldn't really hit that unless you are using --userland-proxy=false", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T15:17:01.943289+00:00", "message": "Or k8s, I suppose", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T15:17:02.152284+00:00", "message": "Sure, i wasn't sure it was a bug, just suprised by the number of call to KV store to get 'only' list of network :)", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T15:17:41.470837+00:00", "message": "Yeah, sounds like it's not right. I would expect at most 1 call per network, but that shouldn't be 10-15s", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T15:17:53.944545+00:00", "message": "i didn't use k8s or swarm, juste docker deamon configured to use a kv to enable overlay", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T15:18:35.278376+00:00", "message": "thanks cpuguy83, i'll open the issue", "datatype": "message", "nick": "Yaltar_"}, {"timestamp": "2016-09-01T15:20:54.475873+00:00", "message": "Hmm... This is an odd issue. In my ubuntu docker image, /etc/cron.d jobs are not run, even though the cron daemon has been started. Not until I touch the /etc/cron.d/jobfile will cron actually pick it up.", "datatype": "message", "nick": "AppStore"}, {"timestamp": "2016-09-01T15:21:01.351962+00:00", "message": "Anyone else encountered this issue?", "datatype": "message", "nick": "AppStore"}, {"timestamp": "2016-09-01T15:22:38.458632+00:00", "message": "Does anyone have an idea about doing rbac per team in dockerswarm", "datatype": "message", "nick": "bsmithx10"}, {"timestamp": "2016-09-01T15:22:54.488774+00:00", "message": "with their own overlay vxlan?", "datatype": "message", "nick": "bsmithx10"}, {"timestamp": "2016-09-01T15:26:27.351523+00:00", "message": "greetings, docker folks!", "datatype": "message", "nick": "nkt_"}, {"timestamp": "2016-09-01T15:28:18.394927+00:00", "message": "hello. is it possible to attach to a docker container, run a command and redirect the output back to the host?", "datatype": "message", "nick": "bdonnahue"}, {"timestamp": "2016-09-01T15:28:49.770462+00:00", "message": "bdonnahue: docker exec <container> <command> > output.txt", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T15:29:48.565334+00:00", "message": "bsmithx10: swarm or swarm mode? neither provide rbac directly. The Docker Universal Control Plane commercial product does implement rbac. Current release works on top of swarm. next UCP release will be both swarm and swarm mode.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T15:30:29.943576+00:00", "message": "how do i share session data across containers? for example, if i have two apps that are running on two different containers, but i want to keep the user logged in as they use each app\u2026", "datatype": "message", "nick": "nkt_"}, {"timestamp": "2016-09-01T15:30:30.417134+00:00", "message": "programmerq: thanks ill try that", "datatype": "message", "nick": "bdonnahue"}, {"timestamp": "2016-09-01T15:31:10.619261+00:00", "message": "nkt_: have a common session store-- put them into rethinkdb, mysql, postgres, redis, or any other number of durable storage.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T15:31:22.619080+00:00", "message": "programmerq, that isn't open source orfreeright?", "datatype": "message", "nick": "bsmithx10"}, {"timestamp": "2016-09-01T15:31:24.895496+00:00", "message": "the UCP", "datatype": "message", "nick": "bsmithx10"}, {"timestamp": "2016-09-01T15:31:36.595676+00:00", "message": "Anyone know of a reliable cron daemon I can use, since ubuntus standard one seems to be broken when running in docker?", "datatype": "message", "nick": "AppStore"}, {"timestamp": "2016-09-01T15:31:36.699970+00:00", "message": "bsmithx10: it's a commercial product, right.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T15:31:43.397366+00:00", "message": "got it.", "datatype": "message", "nick": "bsmithx10"}, {"timestamp": "2016-09-01T15:31:54.218646+00:00", "message": "programmerq: if the command generates an error will the error code be sent to $?", "datatype": "message", "nick": "bdonnahue"}, {"timestamp": "2016-09-01T15:31:59.484500+00:00", "message": "bdonnahue: yes", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T15:38:12.203183+00:00", "message": "programmerq: thank you!", "datatype": "message", "nick": "nkt_"}, {"timestamp": "2016-09-01T15:54:48.004996+00:00", "message": "I'm trying to install docker 1.12.1 on a new system and containerd, dockerd, and the socket are all up and running - but `docker ps` even `docker version` just hang, indefinitely, with no output", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T15:54:53.938312+00:00", "message": "even with -D and -l debug set", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T15:55:11.126388+00:00", "message": "could someone please help me? I'm a bit lost as to how I should debug what I did wrong with the install", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T15:55:13.714827+00:00", "message": "what's the best practice method for passing java -Dproperty=value into a a docker container? my current ENTRYPOINT is [\"java\", \"-jar\", \"/path/to/jar\"]", "datatype": "message", "nick": "majikman"}, {"timestamp": "2016-09-01T16:00:02.983902+00:00", "message": "majikman: How do you normally pass it in?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T16:00:31.521509+00:00", "message": "cpuguy83, java -Dproperty=value -jar /path/to/jar", "datatype": "message", "nick": "majikman"}, {"timestamp": "2016-09-01T16:00:49.350310+00:00", "message": "java apparently requires -D to come before -jar", "datatype": "message", "nick": "majikman"}, {"timestamp": "2016-09-01T16:01:57.120451+00:00", "message": "any help with stoping docker from halting after a laptop sleep ?", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:02:17.921622+00:00", "message": "majikman: Change the entrypoint then", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T16:02:18.777944+00:00", "message": "i seem to have to rm my containers, and thats not helpful if i didn't push my code before lunch oops", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:03:12.736384+00:00", "message": "BackEndCoder: Docker doesn't do anything with laptop sleep", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T16:03:18.928817+00:00", "message": "BackEndCoder: Is this docker4mac?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T16:03:21.874017+00:00", "message": "cpuguy83, i guess I could just change the ENTRYPOINT to java and and add CMD to be -Dproperty=value -jar /path/to/jar, but at that point, it seems like ENTRYPOINT is almost superficial", "datatype": "message", "nick": "majikman"}, {"timestamp": "2016-09-01T16:03:29.013831+00:00", "message": "nah its windows 10, hyper-v", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:03:54.975941+00:00", "message": "BackEndCoder: When you say that docker is halting, what do you mean?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T16:03:56.435587+00:00", "message": "laptop sleep seems to make it break shame", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:04:10.204338+00:00", "message": "i mean when laptop comes back from sleep, docker just stops repsonding", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:04:18.821079+00:00", "message": "containers say they are running, but no", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:04:24.627074+00:00", "message": "and docker restart doesn't help", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:04:35.528146+00:00", "message": "so i have to stop, rm, and run again (and lose all my changes)", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:04:54.306302+00:00", "message": "i'm new btw, so i might be missing a really helpful command :P", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:04:56.489479+00:00", "message": "Confused. How is both docekr not responding and the containers reporting as running?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T16:05:12.801876+00:00", "message": "localhost wouldn't respond on the port", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:05:34.147697+00:00", "message": "so the only way to get it back i have found is to stop rm and run", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:05:41.587261+00:00", "message": "BackEndCoder: Oh, so you have a container running with an exposed port and it's not responding after sleep?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T16:05:45.537398+00:00", "message": "so i'm thinking there might be another command i can give it", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:05:52.813659+00:00", "message": "yes yes ^^", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:06:09.407107+00:00", "message": "Is this on the Windows side or in the VM?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T16:06:32.639259+00:00", "message": "erm, the exposed port would be exposed to windows", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:06:43.606786+00:00", "message": "but apache is inside the container", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:07:32.375023+00:00", "message": "BackEndCoder: Are you able to reach the port directly?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T16:07:42.068734+00:00", "message": "Not port... container", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T16:08:22.237670+00:00", "message": "like an exec -ti bash ?", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:08:34.288011+00:00", "message": "Sure, that's one way", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T16:08:50.317295+00:00", "message": "Go into the container and connect", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T16:10:05.591877+00:00", "message": "ok so i just put it to sleep", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:10:07.961442+00:00", "message": "and came back", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:10:11.885157+00:00", "message": "and i can't replicate the issue", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:10:24.297430+00:00", "message": "thanks for your time, i'll leave you to it and carry on with coding", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:10:25.988441+00:00", "message": "thanks for your time", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:10:51.913159+00:00", "message": "so i would guess docker isn't ment to be effected by a machine going to sleep and coming back", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:10:53.695979+00:00", "message": "cool", "datatype": "message", "nick": "BackEndCoder"}, {"timestamp": "2016-09-01T16:11:02.312821+00:00", "message": "Correct", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T16:13:20.850008+00:00", "message": "well, i've been able to at least get this debug output: DEBU[0000] libcontainerd: containerd connection state change: TRANSIENT_FAILURE", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T16:13:47.502552+00:00", "message": "which is very confusing to me - containerd is up and running via systemd on the socket, and the socket path is being given to `dockerd`", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T16:14:11.621091+00:00", "message": "I don't get any debug output from containerd showing errors with dockerd connecting to that socket", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T16:16:28.868950+00:00", "message": "aha!", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T16:46:59.217593+00:00", "message": "hey guys i want to echo some text into a repo file. im not sure how to do this in a docker run command", "datatype": "message", "nick": "bdonnahue"}, {"timestamp": "2016-09-01T16:47:03.271879+00:00", "message": "can anyone help me out", "datatype": "message", "nick": "bdonnahue"}, {"timestamp": "2016-09-01T16:57:21.267527+00:00", "message": "I have a server listening on a TCP port inside a docker container and a client connected to it. Does docker tear down the TCP connection gracefully? I am trying to recreate a half-open tcp connection problem", "datatype": "message", "nick": "astropirate"}, {"timestamp": "2016-09-01T16:57:21.607481+00:00", "message": "All, what is the current recommended way of defining and using a data-only container with docker-compose? Do I need to manually create the data container first or can I tell docker-compose to create it for me?", "datatype": "message", "nick": "pyoor"}, {"timestamp": "2016-09-01T16:57:54.558479+00:00", "message": "i pulled elasticsearch but when i run this comen which i found in the documentation i can\u2019t reach it from my local machine: \u201cdocker run -d elasticsearch -Des.node.name=\"TestNode\"\"", "datatype": "message", "nick": "wrkrcoop"}, {"timestamp": "2016-09-01T16:58:11.606749+00:00", "message": "do i have to add a -P flag and a port # like -P 9200", "datatype": "message", "nick": "wrkrcoop"}, {"timestamp": "2016-09-01T16:58:12.265835+00:00", "message": "?", "datatype": "message", "nick": "wrkrcoop"}, {"timestamp": "2016-09-01T18:04:39.858114+00:00", "message": "is there a short and sweet way of sharing/mounting \"current working directory\" on the host with e.g. \"/std_workdir\" in the container?", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-09-01T18:05:05.013935+00:00", "message": "Dynetrekk: -v $(pwd):/std_workdir", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T18:05:32.857223+00:00", "message": "cpuguy83: yeah, great, I know about that - but no way of doing it in Dockerfile?", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-09-01T18:05:43.770354+00:00", "message": "Oh, no.", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T18:05:48.997876+00:00", "message": "VOLUME [\"pwd:/std_workdir\"]", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-09-01T18:05:50.831720+00:00", "message": "cpuguy83: ok", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-09-01T18:07:01.882952+00:00", "message": "If that were possible I could do something like `VOLUME [\"~/.ssh:/muahahaha\"]` and say \"Here, run my super awesome image, it's called cpuguy83/destroy_you... don't mind the name\"", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T18:07:20.895663+00:00", "message": "lol", "datatype": "message", "nick": "sl4v3"}, {"timestamp": "2016-09-01T18:08:22.077346+00:00", "message": "cpuguy83: that's a great idea, too bad it's not possible", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-09-01T18:08:57.935597+00:00", "message": "ok, other noob question - can I run \"bash somescript.sh\" and pass optional arguments to \"somescript.sh\"? if so, I'd be somwehere near nirvana", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-09-01T18:09:08.495852+00:00", "message": "or set some env variable on the host for the volume sharing?", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-09-01T18:09:16.858517+00:00", "message": "(I guess that's 2 separate questions)", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-09-01T18:11:00.396453+00:00", "message": "I'm basically trying to build a \"compile my code\" image - \"docker run\" should run buildscript.sh and \"docker run Release\" should run buildscript.sh in Release mode", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-09-01T18:11:40.646749+00:00", "message": "In the dockerfile, do `ENTRYPOINT [\"buildscript.sh\"]`", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T18:11:44.601040+00:00", "message": "then it will just work", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T18:12:00.647575+00:00", "message": "You can even put `CMD [\"default_value\"]`", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T18:12:29.388132+00:00", "message": "cpuguy83: oh, I did [\"bash\", \"buildscript.sh\"]", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-09-01T18:12:49.205190+00:00", "message": "cpuguy83: there's a default value for buildscript.sh (Debug) anyway; it's convenient for non-Docker usage", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-09-01T18:13:36.525050+00:00", "message": "cpuguy83: wow, this is great - I wish I knew about Docker 1-2 years ago", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-09-01T18:13:49.376420+00:00", "message": "now, off to try this on a lesser operating system (i.e. windows)", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-09-01T18:15:59.255850+00:00", "message": "now, how do I ensure that my $USER id is the same on the host and inside the container?", "datatype": "message", "nick": "Dynetrekk"}, {"timestamp": "2016-09-01T18:24:50.356845+00:00", "message": "is there an existing github issue for 1.12.1 related to the daemon hanging?", "datatype": "message", "nick": "GivenToCode"}, {"timestamp": "2016-09-01T18:25:08.463247+00:00", "message": "we have some stack traces and logs we'd like to contribute", "datatype": "message", "nick": "GivenToCode"}, {"timestamp": "2016-09-01T18:25:44.844637+00:00", "message": "GivenToCode: Yes, one sec.", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T18:26:09.302117+00:00", "message": "GivenToCode: https://github.com/docker/docker/issues/25321", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T18:29:46.417595+00:00", "message": "I am trying to mount a host directory to a container. The host directory is owned by the ubuntu user. The user in container is a non root user. But the mounted folder shows up as root", "datatype": "message", "nick": "yvdinesh"}, {"timestamp": "2016-09-01T18:30:31.872894+00:00", "message": "*shows up as root owned. Is there any way i can change the ownership of the mounted directory from to a non root user inside container?", "datatype": "message", "nick": "yvdinesh"}, {"timestamp": "2016-09-01T18:39:38.311356+00:00", "message": "yvdinesh: The UID should be the same on both sides", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T18:39:52.433692+00:00", "message": "yvdinesh: Docker does not touch permissions on host mounted directories/files", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T18:43:56.627506+00:00", "message": "would this not work? RUN cp -rp /usr/share/modsecurity-crs/* /etc/modsecurity", "datatype": "message", "nick": "sl4v3"}, {"timestamp": "2016-09-01T18:44:08.415977+00:00", "message": "says it' cant stat /usr/share/modsecurity-crs/*", "datatype": "message", "nick": "sl4v3"}, {"timestamp": "2016-09-01T18:48:52.838081+00:00", "message": "Jmainguy, hmmm sudo systemctl --enable docker : systemctl: unrecognized option '--enable'", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T18:49:07.514450+00:00", "message": "diverdude: remove the --", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T18:49:13.056055+00:00", "message": "diverdude: I think its just systemctl enable docker", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T18:50:11.450757+00:00", "message": "where is this folder located on my local machine? /mnt/sda1/var/lib/docker/tmp/", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T18:51:16.804221+00:00", "message": "Dobler: is that a path not actually in your local machine then? where is it?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T18:51:38.468646+00:00", "message": "its not", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T18:51:51.110969+00:00", "message": "where are you seeing it then?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T18:51:53.357038+00:00", "message": "i'm trying to delete it", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T18:52:06.141900+00:00", "message": "so when i run this command", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T18:52:30.672255+00:00", "message": "docker run -it ubuntu bash", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T18:52:45.065377+00:00", "message": "it says this /usr/local/bin/docker: open /mnt/sda1/var/lib/docker/tmp/GetImageBlob260849384: structure needs cleaning.", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T18:52:57.753155+00:00", "message": "Hi! My docker container won't show any files in the folder specified as volume. What might I be doing wrong?", "datatype": "message", "nick": "linus_torngren"}, {"timestamp": "2016-09-01T18:53:12.417204+00:00", "message": "okay, and where is your docker client pointed? that message is coming from your daemon, so that folder will be local to where the daemon is running.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T18:53:20.072747+00:00", "message": "linus_torngren: what syntax are you using to run the container?", "datatype": "message", "nick": "cittatva"}, {"timestamp": "2016-09-01T18:53:35.361431+00:00", "message": "pointed as in what ip address?", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T18:54:03.681113+00:00", "message": "Dobler: you're familiar with the fact that docker uses a client/server model, right?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T18:54:09.182476+00:00", "message": "yes", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T18:54:14.577347+00:00", "message": "when you tyep 'docker run ...' your local 'docker' process connects to a daemon.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T18:54:21.656269+00:00", "message": "my question is where your daemon is.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T18:54:23.148755+00:00", "message": "yeah i understand", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T18:54:42.736877+00:00", "message": "i assume the folder being referenced from the docker machine", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T18:55:01.402223+00:00", "message": "it's wherever your docker daemon is running", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T18:55:03.020279+00:00", "message": "yes", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T18:55:03.183951+00:00", "message": "but i've tried deleting the docker machine and recreating it and still i get that message", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T18:55:10.479423+00:00", "message": "cittatva: I'm using compose. I run docker-compose -f docker-compose.production.yml up -d", "datatype": "message", "nick": "linus_torngren"}, {"timestamp": "2016-09-01T18:55:16.163062+00:00", "message": "so you're using docker-machine and virtualbox?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T18:55:21.203910+00:00", "message": "yes", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T18:55:28.063021+00:00", "message": "and how are you deleting the machine?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T18:55:29.036942+00:00", "message": "cittatva: I have the code at https://github.com/Limpan/bytardag", "datatype": "message", "nick": "linus_torngren"}, {"timestamp": "2016-09-01T18:55:41.444573+00:00", "message": "i'm using docker-machine rm default", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T18:55:50.748389+00:00", "message": "and then how are you recreating it?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T18:56:18.560841+00:00", "message": "docker-machine create --driver virtualbox default", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T18:56:34.004947+00:00", "message": "cittatva: The issue is that the content of the static-folder seems to be empty (both in web and nginx containers).", "datatype": "message", "nick": "linus_torngren"}, {"timestamp": "2016-09-01T18:56:36.893527+00:00", "message": "yeah, that should clear it out for sure. very strange.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T18:56:58.335050+00:00", "message": "yeah thats what i would think", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T18:57:16.639991+00:00", "message": "you're definitely sure that your docker client is talking to the daemon in your default machine and not some other daemon?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T18:57:17.407780+00:00", "message": "maybe if i delete the boot2docker iso?", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T18:57:32.717707+00:00", "message": "yeah", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T18:57:50.893587+00:00", "message": "linus_torngren: your syntax is wrong - one sec", "datatype": "message", "nick": "cittatva"}, {"timestamp": "2016-09-01T18:58:42.138162+00:00", "message": "linus_torngren: if you check out https://docs.docker.com/compose/compose-file/#/...", "datatype": "message", "nick": "cittatva"}, {"timestamp": "2016-09-01T18:58:43.830772+00:00", "message": "Jmainguy, aha that worked nicely. Can i also start a container in detached mode such that it also runs after reboot?", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T18:58:53.130354+00:00", "message": "diverdude: yes", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T18:59:00.308345+00:00", "message": "you'll see the syntax you specified creates a volume. you want to mount a volume", "datatype": "message", "nick": "cittatva"}, {"timestamp": "2016-09-01T18:59:03.238268+00:00", "message": "Jmainguy, how would i do that?", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T18:59:03.342627+00:00", "message": "i think", "datatype": "message", "nick": "cittatva"}, {"timestamp": "2016-09-01T18:59:15.422609+00:00", "message": "diverdude: --restart always", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T18:59:27.150569+00:00", "message": "diverdude: start the container with that, it will start up when docker does", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T18:59:38.058996+00:00", "message": "diverdude: so -d --restart always and then w/e you want", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T18:59:57.789605+00:00", "message": "so, put the files you want in the volumes on the host, and use the absolute or relative path mapping syntasx", "datatype": "message", "nick": "cittatva"}, {"timestamp": "2016-09-01T19:00:53.245052+00:00", "message": "Jmainguy, aha...so: docker run gitlab/gitlab-ce -d --restart always ?", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T19:03:21.222201+00:00", "message": "Jmainguy, i think that worked :)", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T19:03:26.005316+00:00", "message": "@programmerq - thanks for your help. I noticed that in docker-machine ls the one i thought i was using was not marked as \"active\". that fixed it", "datatype": "message", "nick": "Dobler"}, {"timestamp": "2016-09-01T19:04:28.804563+00:00", "message": "cittatva: Lets see if I get it. I have added a volume over my /usr/src/app/static folder in the web container and that volume is empty. That way when I use volumes_from in the nginx container it also, ofc, is empty?", "datatype": "message", "nick": "linus_torngren"}, {"timestamp": "2016-09-01T19:04:33.421520+00:00", "message": "Jmainguy, thanks a lot", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T19:05:12.506670+00:00", "message": "diverdude: np, anytime", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:05:22.835009+00:00", "message": "does a docker container have an IP address?", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T19:05:32.466417+00:00", "message": "yeah", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:05:37.868852+00:00", "message": "its like 172. something on my machines", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:05:49.070901+00:00", "message": "Jmainguy, i see...how can i see what it is?", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T19:06:04.516527+00:00", "message": "if you get into the container and run ip addr show I know thats one way", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:06:08.502405+00:00", "message": "there are prolly better ways", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:06:18.879036+00:00", "message": "and the ip will likely be different next time it restarts", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:06:45.919735+00:00", "message": "linus_torngren: when you create a volume with \"- /usr/src/app/static\" it creates a volume in docker space that's separate from the container's volume and persistent. anything you put in it will stay in it, but it doesn't get anything from the filesystem. it mounts it at the path you specify, inside the docker container. on the host system it's in something like /var/lib/docker/volumes/...", "datatype": "message", "nick": "cittatva"}, {"timestamp": "2016-09-01T19:06:57.327856+00:00", "message": "Jmainguy, yes....i can see that my container have the following ports open: 22/tcp, 80/tcp, 443/tcp so i guess i can somehow ssh into the machine...but then i need to know the IP first", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T19:07:04.220216+00:00", "message": "look at that link i pasted above for you. you'll want to use absolute path.", "datatype": "message", "nick": "cittatva"}, {"timestamp": "2016-09-01T19:07:09.257109+00:00", "message": "Jmainguy, is there any other way i can get into the machine?", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T19:07:26.222455+00:00", "message": "eg \"- /usr/src/app/static:/usr/src/app/static\"", "datatype": "message", "nick": "cittatva"}, {"timestamp": "2016-09-01T19:07:28.715542+00:00", "message": "jysy", "datatype": "message", "nick": "cittatva"}, {"timestamp": "2016-09-01T19:07:50.040353+00:00", "message": "bleh. fingers. that'll mount the hosts /usr/src/app/static into the container's /usr/src/app/static path", "datatype": "message", "nick": "cittatva"}, {"timestamp": "2016-09-01T19:07:56.643181+00:00", "message": "diverdude: docker exec -it CONTAINERNAME /bin/bash", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:07:57.466615+00:00", "message": "<hostpath>:<containerpath>", "datatype": "message", "nick": "cittatva"}, {"timestamp": "2016-09-01T19:08:30.925722+00:00", "message": "is it possible to prompt for parameters on `docker-compose build`?", "datatype": "message", "nick": "guzzlefry"}, {"timestamp": "2016-09-01T19:08:31.493153+00:00", "message": "cittatva: That's kind of what I tried to convey. Good explanation.", "datatype": "message", "nick": "linus_torngren"}, {"timestamp": "2016-09-01T19:08:34.020809+00:00", "message": "diverdude: you are better off not worrying about the docke rip though", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:08:55.176626+00:00", "message": "diverdude: usually you just expose ports to the host, and either bind dynamicly, or set it, look at -p and -P options to docker urn", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:08:57.569137+00:00", "message": "docke rrun", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:09:01.131030+00:00", "message": "Jmainguy, ok, why is that?", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T19:09:17.841524+00:00", "message": "because that IP is always changing, just how its designed", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:09:26.362750+00:00", "message": "if you need containers to talk to each other, you can use --link", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:09:32.432765+00:00", "message": "or use swarm, or kubernetes", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:09:43.533664+00:00", "message": "Jmainguy, ok i see....the reason i want to know its because i have a webserver running inside my docker container which i want to forward to from my nginx", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T19:09:59.838666+00:00", "message": "diverdude: so bind -p 8000:80", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:10:20.077778+00:00", "message": "diverdude: now you have webserver listening on localhost 8000 on host, and then forawd nginx to localhost 8000 to hit it", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:10:41.016697+00:00", "message": "Jmainguy, ohh...really? thats pretty awesome", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T19:10:49.513150+00:00", "message": "=) yeah its pretty fun", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:11:24.431247+00:00", "message": "Jmainguy, but how does bind know which docker container to bind to?", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T19:14:07.385443+00:00", "message": "diverdude: sorry", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:14:31.020667+00:00", "message": "diverdude: docker run -d --restart always -p 8000:80", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:14:36.615620+00:00", "message": "cittatva: Thank you for your kind help. It works now. I changed to - ./web/app/static:/usr/src/app/static", "datatype": "message", "nick": "linus_torngren"}, {"timestamp": "2016-09-01T19:14:37.317852+00:00", "message": "diverdude: you pass -p during the run command", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:15:01.364612+00:00", "message": "diverdude: if you checkout the man page for docker-run it has some good explanations of all the possible flags you can attach to docker run", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:16:09.794714+00:00", "message": "Jmainguy, right ok...so then i need to shut it down first i guess", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T19:17:31.229390+00:00", "message": "diverdude: yup", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:18:05.010924+00:00", "message": "diverdude: docker kill CONTAINERNAME;docker rm CONTAINERNAME", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:18:21.381498+00:00", "message": "since you started it with --restart always, you have to rm it as well or it will start up again next reboot", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:20:43.441400+00:00", "message": "Jmainguy, aha...can i forward multiple ports like this? docker run -d --restart always -p 8000:80 8001:443 ?", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T19:23:06.585036+00:00", "message": "ah -p -p", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T19:26:09.049450+00:00", "message": "I have a question about how uploading to a registry works. If I build an image from a base image, does the uploading process use the fact that it's derived from a well-known base image (or just one it already has in its registry) and only upload (and eventually download) the pieces that are specific to the derived image?", "datatype": "message", "nick": "davidmichaelkarr"}, {"timestamp": "2016-09-01T19:26:56.547518+00:00", "message": "or does it internally just export a tar file and upload the entire tar file?", "datatype": "message", "nick": "davidmichaelkarr"}, {"timestamp": "2016-09-01T19:29:01.729097+00:00", "message": "diverdude: exactly", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:29:29.117095+00:00", "message": "Jmainguy, seems to work nicely :) Now i just need to configure my nginx hehe", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T19:29:33.170506+00:00", "message": "=) nice", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:29:43.102976+00:00", "message": "Jmainguy, thx!", "datatype": "message", "nick": "diverdude"}, {"timestamp": "2016-09-01T19:29:46.669620+00:00", "message": "np", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T19:34:45.928111+00:00", "message": "hello... I have this weird problem where a service started via ansible inside a container locks the damn container up", "datatype": "message", "nick": "jamescarr"}, {"timestamp": "2016-09-01T19:34:46.420718+00:00", "message": "https://github.com/jamescarr/ansible-role-teleg...", "datatype": "message", "nick": "jamescarr"}, {"timestamp": "2016-09-01T19:34:54.159749+00:00", "message": "any ideas what is up here?", "datatype": "message", "nick": "jamescarr"}, {"timestamp": "2016-09-01T19:35:22.833358+00:00", "message": "you can see the result of this nonsense publicly at https://travis-ci.org/jamescarr/ansible-role-te...", "datatype": "message", "nick": "jamescarr"}, {"timestamp": "2016-09-01T19:35:40.248893+00:00", "message": "if I don't start telegraf, the run completes fine", "datatype": "message", "nick": "jamescarr"}, {"timestamp": "2016-09-01T19:35:48.402823+00:00", "message": "it's only if I start it :-(", "datatype": "message", "nick": "jamescarr"}, {"timestamp": "2016-09-01T19:36:25.448997+00:00", "message": "I can't even exec into the container", "datatype": "message", "nick": "jamescarr"}, {"timestamp": "2016-09-01T19:36:27.544374+00:00", "message": "however", "datatype": "message", "nick": "jamescarr"}, {"timestamp": "2016-09-01T19:36:45.281121+00:00", "message": "if I don't start it, I can exec in and start it, no problem.", "datatype": "message", "nick": "jamescarr"}, {"timestamp": "2016-09-01T19:44:36.209691+00:00", "message": "is it because of this?", "datatype": "message", "nick": "jamescarr"}, {"timestamp": "2016-09-01T19:44:37.843895+00:00", "message": "\"Because Docker replaces the default /sbin/init with its own, there's no way to run the Upstart init inside a Docker container.\"", "datatype": "message", "nick": "jamescarr"}, {"timestamp": "2016-09-01T19:44:47.570851+00:00", "message": "and when did this channel get so silent?", "datatype": "message", "nick": "jamescarr"}, {"timestamp": "2016-09-01T19:46:02.353452+00:00", "message": "everyone has been helped forever, we can all go home", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-09-01T19:46:57.811445+00:00", "message": "whew.", "datatype": "message", "nick": "jamescarr"}, {"timestamp": "2016-09-01T19:47:32.565430+00:00", "message": "Can anyone recommend a suitable cron replacement for use in docker images?", "datatype": "message", "nick": "AppStore"}, {"timestamp": "2016-09-01T19:50:16.938160+00:00", "message": "I'm trying to start dockerd (1.12.1) and I already have a separate containerd systemd unit up and running - I see errors in the logs though about `docker-runc` not being on the system; I'm confused because I've specified the runtime to containerd (and its path)", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T19:58:39.637074+00:00", "message": "does anybody know how I'm supposed to give either containerd or dockerd the path to `docker-runc`???", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T20:01:15.217229+00:00", "message": "AppStore: what's wrong with using cron in a docker image?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T20:01:36.256030+00:00", "message": "there are several crond projects around. which ones have you tried? what problems did you run into?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T20:01:42.954574+00:00", "message": "digitalmentat: You have to give it to containerd", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T20:01:58.841532+00:00", "message": "yeah, that's the thing, I am", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T20:01:59.851537+00:00", "message": "programmerq: Doesn't work. It won't notice the jobs I put in /etc/cron.d until I touch the files, to make it seem like they've been updated.", "datatype": "message", "nick": "AppStore"}, {"timestamp": "2016-09-01T20:02:02.337373+00:00", "message": "digitalmentat: It's a flag on containerd", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T20:02:14.053290+00:00", "message": "yeah --runtime; I am giving it the path to the runc binary", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T20:02:19.709296+00:00", "message": "but I still get the `docker-runc` error", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T20:02:20.680276+00:00", "message": "digitalmentat: Then you have to manually start containerd and tell docker where to talk to containerd", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T20:02:26.713497+00:00", "message": "yup doing that too", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T20:02:32.051541+00:00", "message": "programmerq: I haven't tried any alternatives yet, though I'm looking at bcron which seems to be the least badly designed.", "datatype": "message", "nick": "AppStore"}, {"timestamp": "2016-09-01T20:02:44.259516+00:00", "message": "digitalmentat: What's the `docker-runc` error?", "datatype": "message", "nick": "cpuguy83"}, {"timestamp": "2016-09-01T20:03:07.210006+00:00", "message": "cpuguy83, msg=\"containerd: start container\" error=\"shim error: docker-runc not installed on system\"", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T20:03:25.816047+00:00", "message": "it was previously complaining about the containerd-shim so I provided that as well", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T20:03:47.190653+00:00", "message": "Hi", "datatype": "message", "nick": "roberto-"}, {"timestamp": "2016-09-01T20:07:29.172414+00:00", "message": "so I think I understand my problem", "datatype": "message", "nick": "jamescarr"}, {"timestamp": "2016-09-01T20:07:33.104155+00:00", "message": "the service runs via upstart", "datatype": "message", "nick": "jamescarr"}, {"timestamp": "2016-09-01T20:08:38.298543+00:00", "message": "Hey, whenever I try to commit my container with a docker commit -p <containerid> <containername> I get the following error: Error response from daemon: ApplyLayer exit status 1 stdout: stderr: write /some/file/somewhere blah readonly filesystem", "datatype": "message", "nick": "roberto-"}, {"timestamp": "2016-09-01T20:08:48.889720+00:00", "message": "Anyone any idea?", "datatype": "message", "nick": "roberto-"}, {"timestamp": "2016-09-01T20:21:24.829440+00:00", "message": "maybe check out https://github.com/docker/docker/issues/20496, roberto", "datatype": "message", "nick": "o-d"}, {"timestamp": "2016-09-01T20:21:49.731127+00:00", "message": "thanks o-d", "datatype": "message", "nick": "roberto-"}, {"timestamp": "2016-09-01T20:29:15.539402+00:00", "message": "hello, not sure is the good irc channel for my ask: i want to fake listen ports for prog that i will launch, and impossible to recompile the prog, something in the style of : docker --fakeListenPorts=tcp,123,654 ./progToTest", "datatype": "message", "nick": "rzyz"}, {"timestamp": "2016-09-01T20:29:43.875690+00:00", "message": "you could do a mini-image that just runs a netcat listener on the ports you want", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-09-01T20:29:59.213994+00:00", "message": "how can i do it with docker or a sub-program of docker?", "datatype": "message", "nick": "rzyz"}, {"timestamp": "2016-09-01T20:30:20.509163+00:00", "message": "the program itself doesn't listen on those ports?", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-09-01T20:30:41.669682+00:00", "message": "InitHello, in docker you can fake port without using netcat..?", "datatype": "message", "nick": "rzyz"}, {"timestamp": "2016-09-01T20:31:15.157646+00:00", "message": "the answer to that question is also the name of the animal you get if you cross an elephant and a rhino", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-09-01T20:31:18.406193+00:00", "message": "i.e. elephino", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-09-01T20:31:23.812176+00:00", "message": "program listen 3 TCP ports and 1 UDP, and i want to 10 app in same time.", "datatype": "message", "nick": "rzyz"}, {"timestamp": "2016-09-01T20:32:00.318750+00:00", "message": "then I don't understand why you would want to fake listening on those ports", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-09-01T20:32:16.130620+00:00", "message": "InitHello, lol, serious?", "datatype": "message", "nick": "rzyz"}, {"timestamp": "2016-09-01T20:32:20.025619+00:00", "message": "I would do what InitHello is suggestion, use supervisorD to listen on ports", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T20:32:27.857782+00:00", "message": "supervisord to launch netcat", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T20:32:37.400965+00:00", "message": "Is there any way of shipping around containers as binaries, or are we required to use docker hub or quay.io?", "datatype": "message", "nick": "daxorid"}, {"timestamp": "2016-09-01T20:32:38.928284+00:00", "message": "what is a \"10 app\"?", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-09-01T20:32:50.793065+00:00", "message": "daxorid: docker save creates a tar file", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T20:33:01.043987+00:00", "message": "ah great, thanks", "datatype": "message", "nick": "daxorid"}, {"timestamp": "2016-09-01T20:33:13.442448+00:00", "message": "InitHello, 10 processus (PID)", "datatype": "message", "nick": "rzyz"}, {"timestamp": "2016-09-01T20:33:16.942539+00:00", "message": "aha", "datatype": "message", "nick": "InitHello"}, {"timestamp": "2016-09-01T20:33:26.819195+00:00", "message": "use supervisord for more than one PID in a container", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T20:33:50.219190+00:00", "message": "yesterday at 08:49 PM Taylor Patton says: Does the Docker Plugin support connecting a Swarm using docker engine 1.12+ ... Does the Docker Plugin support connecting a Swarm using docker engine 1.12+ ? I cannot connect to the swarm as a new \"Cloud\" and am seeing this error:Caused by: shaded.org.apache.http.ProtocolException: The server failed to respond with a valid HTTP response I could successfully connect Swarm using docker engi", "datatype": "message", "nick": "darcarys"}, {"timestamp": "2016-09-01T20:33:59.423927+00:00", "message": "Does the Docker Plugin support connecting a Swarm using docker engine 1.12+ ... Does the Docker Plugin support connecting a Swarm using docker engine 1.12+ ? I cannot connect to the swarm as a new \"Cloud\" and am seeing this error:Caused by: shaded.org.apache.http.ProtocolException: The server failed to respond with a valid HTTP response I could successfully connect Swarm using docker engine 1.10: Version = swarm/1.2.4", "datatype": "message", "nick": "darcarys"}, {"timestamp": "2016-09-01T20:34:02.832210+00:00", "message": "darcarys: ?", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T20:34:16.160554+00:00", "message": "This is the question", "datatype": "message", "nick": "darcarys"}, {"timestamp": "2016-09-01T20:34:16.772285+00:00", "message": "Does the Docker Plugin support connecting a Swarm using docker engine 1.12+ ?", "datatype": "message", "nick": "darcarys"}, {"timestamp": "2016-09-01T20:44:30.961075+00:00", "message": "darcarys: your question doesn't really make sense. can you elaborate?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T20:44:41.922290+00:00", "message": "which docker plugin?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T20:44:45.541295+00:00", "message": "plugin for what?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T20:49:38.754801+00:00", "message": "doocker fake listen port using virtual net interface, not iptables or something like that?", "datatype": "message", "nick": "rzyz"}, {"timestamp": "2016-09-01T20:57:02.005169+00:00", "message": "@programmerq I was talking about Jenkins Docker Plugin support for Swarm using docker engine 1.12+ ?", "datatype": "message", "nick": "darcarys"}, {"timestamp": "2016-09-01T20:57:35.389963+00:00", "message": "I cannot connect to the swarm as a new \"Cloud\" in Jenkins config and am seeing this error:Caused by: shaded.org.apache.http.ProtocolException", "datatype": "message", "nick": "darcarys"}, {"timestamp": "2016-09-01T20:58:22.600898+00:00", "message": "I can't say I've seen a lot of discussion on that particular jenkins plugin here, so I don't know how much expertise there is in the room for that.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:00:34.008029+00:00", "message": "well I think solved that problem", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T21:00:55.176507+00:00", "message": "dockerd wanted add-runtime and default-runtime set at the same time", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T21:01:01.877235+00:00", "message": "but I've now come across this error: shim error: open pi", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T21:01:05.541134+00:00", "message": "shim error: open pid", "datatype": "message", "nick": "digitalmentat"}, {"timestamp": "2016-09-01T21:01:32.841261+00:00", "message": "Sigh... bcron did look like a nice replacement for cron. But the ubuntu packaging for it is so beyond broken. :(", "datatype": "message", "nick": "AppStore"}, {"timestamp": "2016-09-01T21:06:23.893165+00:00", "message": "My first day with Docker, been stuck for a while. When I get a container up and running that loads a web server, how do I connect to it? Logs show its running, I just don't know the IP. It's not listed under docker-machine ip, and I'm Docker for Mac. Any thoughts or things I can read about?", "datatype": "message", "nick": "smizell"}, {"timestamp": "2016-09-01T21:06:45.060777+00:00", "message": "It's under docker ps, and docker inspect shows an ip and correct port.", "datatype": "message", "nick": "smizell"}, {"timestamp": "2016-09-01T21:07:18.929128+00:00", "message": "smizell: if you are on docker-for-mac, then the ip to connect to is 127.0.0.1. did you publish a port? you'll only be able to connect to ports you have published. for example:", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:07:28.977669+00:00", "message": "docker run -d --name web -p 8080:80 nginx:alpine", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:07:34.427145+00:00", "message": "curl http://127.0.0.1:8080/", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:08:06.003302+00:00", "message": "Port shows 0.0.0.0:8000->8000/tcp", "datatype": "message", "nick": "smizell"}, {"timestamp": "2016-09-01T21:08:16.936526+00:00", "message": "the docker-for-mac app has forwardings set up from your osx machine into the mini vm it runs. then port 8080 will take you to port 80 on the container", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:08:23.578933+00:00", "message": "smizell: then 127.0.0.1:8000", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:08:42.024930+00:00", "message": "But it doesn't let me connect", "datatype": "message", "nick": "smizell"}, {"timestamp": "2016-09-01T21:09:04.333828+00:00", "message": "try my example", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:09:46.931054+00:00", "message": "@programmerq trying now... thank you for the help :)", "datatype": "message", "nick": "smizell"}, {"timestamp": "2016-09-01T21:10:32.748001+00:00", "message": "Ok, it says welcome to nginx. Must be something I'm doing wrong.", "datatype": "message", "nick": "smizell"}, {"timestamp": "2016-09-01T21:10:37.503362+00:00", "message": "Well, that was a given.", "datatype": "message", "nick": "smizell"}, {"timestamp": "2016-09-01T21:10:56.990463+00:00", "message": "smizell: that'd suggest that whatever thing you were running wasn't actually listening on its port 8000", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:11:26.699691+00:00", "message": "just because you tell docker to publish a port, doesn't mean that whatever thing is running in the container is up, healthy, and listening.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:12:40.792206+00:00", "message": "I see. What would be good to read up on debugging that? I am starting a Django dev server. Logs say it's running. Hmm, I got into bash, so I'll poke around there.", "datatype": "message", "nick": "smizell"}, {"timestamp": "2016-09-01T21:12:57.361695+00:00", "message": "smizell: what interface is that django dev server listening on?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:13:06.383845+00:00", "message": "published ports only forward in to the container's eth0 ip", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:13:19.434990+00:00", "message": "if it's listening on 127.0.0.1 in the container, then it won't work. that's pretty common", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:14:30.061047+00:00", "message": "says \"python /opt/current/app/manage.py runserver_plus 0.0.0.0:8080\" in ps aux", "datatype": "message", "nick": "smizell"}, {"timestamp": "2016-09-01T21:14:56.696167+00:00", "message": "earlier you said it was 0.0.0.0:8000->8000, but this says 8080", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:15:12.158770+00:00", "message": "so that'd do it too", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:15:37.314341+00:00", "message": "Did you just hear my loud yell and groan from where you are?", "datatype": "message", "nick": "smizell"}, {"timestamp": "2016-09-01T21:16:40.984548+00:00", "message": "ah, that's what that was. ;)", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:17:00.232762+00:00", "message": "lol", "datatype": "message", "nick": "smizell"}, {"timestamp": "2016-09-01T21:17:06.003943+00:00", "message": "Ok, that was exactly the issue.", "datatype": "message", "nick": "smizell"}, {"timestamp": "2016-09-01T21:17:41.011738+00:00", "message": "Can you delete the logs of this mistake? In case in future employers go looking through my past conversations to see my technical competency?", "datatype": "message", "nick": "smizell"}, {"timestamp": "2016-09-01T21:17:54.016146+00:00", "message": "Thanks for the help.", "datatype": "message", "nick": "smizell"}, {"timestamp": "2016-09-01T21:19:43.176921+00:00", "message": "Trying to wrap my head around a container vs application development. I created an image. It works. I ran it to create a container, it's happy. Now, I need to put my webapp on there. Do I develop the webapp on the container, and when I reach RC / stable, deploy the container to production? Is that how it is supposed to go?", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T21:27:21.208192+00:00", "message": "smizell: you'll always remember how port publishing works now though", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:27:39.575642+00:00", "message": "@DrDamnit Disclaimer: I just got into Docker for the first time today. But I was able to get my application into my container by using the ADD command in the Dockerfile. The Docker site has lots of example Dockerfile examples. You may get lucky finding an example there.", "datatype": "message", "nick": "smizell"}, {"timestamp": "2016-09-01T21:28:12.597338+00:00", "message": "@programmerq you are right\u2014the glass is half full.", "datatype": "message", "nick": "smizell"}, {"timestamp": "2016-09-01T21:31:48.930673+00:00", "message": "DrDamnit: what does your image do now, without your web app in it?", "datatype": "message", "nick": "litheum"}, {"timestamp": "2016-09-01T21:32:27.549480+00:00", "message": "smizell, I got into it for the first time today too. :-) I've added the LAMP stack to the docker container, and we have a git repo that contains the framework we use. I'll be adding that shortly using git clone. I am used to working on development servers with direct access to code using git. So, having it in a container seems like an extra layer, ergo, I think I might be \"doing it wrong.\"", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T21:32:35.588195+00:00", "message": "litheum, just runs the lamp stack.", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T21:33:24.245645+00:00", "message": "DrDamnit: check out docker run -v to mount a local volume so you don't have to keep rebuilding.", "datatype": "message", "nick": "smizell"}, {"timestamp": "2016-09-01T21:33:51.692157+00:00", "message": "smizell, I was playing with -v. Does that update changes in real-time?", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T21:34:10.980823+00:00", "message": "I have only mounted it and looked at the container file system and said: \"yep. it's there.\"", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T21:34:21.476651+00:00", "message": "Found it here http://stackoverflow.com/questions/24272535/reb.... I'm afraid I've told you all I know :)", "datatype": "message", "nick": "smizell"}, {"timestamp": "2016-09-01T21:35:35.328475+00:00", "message": "DrDamnit: -v doesn't do any \"updates\" it uses a bind-mount under the hood. it's just another view to the same filesystem objects on disk", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:35:58.624900+00:00", "message": "programmerq, -v = \"mount bind\" . Excellent!", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T21:37:43.686042+00:00", "message": "My goal here is to make a re-distributable image that my development staff can use to work on webapps. Ideally, I would be using -v to mount /etc/apache/sites-enabled as well as DocumentRoot. That way, we can use the same standard container to work on multiple apps, and when we finally have something production worthy, we'll drop the -v, and update the container with the actual code. Then, (I guess) create an image (docker commit) and deploy that i", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T21:37:43.853551+00:00", "message": "mage? Am I thinking about this correctly?", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T21:37:57.408261+00:00", "message": "normally, you won't be using 'docker commit' directly", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:38:07.946989+00:00", "message": "in my opinion it is a primative used by systems that build images", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:38:21.394082+00:00", "message": "you'll *definitely* want to do normal development and check your changes into git", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:38:29.427381+00:00", "message": "and then you'll build an image using a Dockerfile and 'docker build'", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:38:34.751903+00:00", "message": "^^", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T21:38:39.323882+00:00", "message": "Dockefile is where its at", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T21:38:49.853522+00:00", "message": "so, just deploy the container, then?", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T21:39:42.030354+00:00", "message": "Jmainguy, re: Dockerfile, we compile PHP from source (for several reasons). having that done in the dockerfile seems like the long way around the barn. Why not use docker commit?", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T21:39:59.697086+00:00", "message": "here's my ideal situation: git commit and git push -> CI system does 'docker build', runs any integration tests, then does a 'docker push'. Now my deploy can just pull and run that image wherever it needs to be running.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:40:22.325601+00:00", "message": "programmerq, I'll follow that workflow.", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T21:40:40.936646+00:00", "message": "DrDamnit: docker build / Dockerfile *does* use docker commit under the hood. it's absolutely true that you don't *have* to do the compile as part of the Dockerfile", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:40:48.132031+00:00", "message": "it can be an external process, and then you ADD the result", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T21:41:43.590395+00:00", "message": "programmerq, if I read your response correctly, I can use docker commit to do my base image (preferred) and then use the docker file to integrate the webapp and make the image? that's oh...so... reasonable! :-)", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T21:44:41.479196+00:00", "message": "Last question before I head back under the hood to work these things out. Regarding data: I am nervous that data (mysql databases, for example) live in the container. Does anyone have a backup strategy they can recommend? (We use Bacula for most everything, and it would probably work well here too, but it's better to ask than suffer data loss).", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T21:45:33.759370+00:00", "message": "...in particular, I am interested in \"what happens to my MySQL databases when up deploy a new image / container?\"", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T21:45:37.499099+00:00", "message": "volume mount storage for data you care about", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T21:45:49.952049+00:00", "message": "so, volume mount /var/lib/mysql?", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T21:45:53.204085+00:00", "message": "yup", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T21:45:54.536526+00:00", "message": "DrDamnit: yeah, mount the datadir as a sepaerate volume. exactly.", "datatype": "message", "nick": "litheum"}, {"timestamp": "2016-09-01T21:45:56.761000+00:00", "message": "thats what I would do", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T21:46:08.653671+00:00", "message": "awesome. that's what I thought, but it's great to have confirmation.", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T21:46:31.977600+00:00", "message": "thanks everyone. Let me go work through this, and implement everyone's suggestions.", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T21:46:33.536092+00:00", "message": "good to ask, too. much easier to do that while you're trying to puzzle it together than to get real far down into some rabbit hole doing something the wrong way!", "datatype": "message", "nick": "litheum"}, {"timestamp": "2016-09-01T21:46:49.936183+00:00", "message": "litheum, bingo.", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T22:10:25.841512+00:00", "message": "programmerq: If it's of any interest, I ended up writing a lot of custom goo to integrate bcron into my docker image. bcron itself actually works quite well, it just doesn't have sane packaging on ubuntu. :P", "datatype": "message", "nick": "AppStore"}, {"timestamp": "2016-09-01T22:25:53.510548+00:00", "message": "programmerq, I had to make some changes to the container while -v was mounted. If I commit now, will it commit the mount-bind to the image? I don't want that there permanently, because later when I ADD the webapp, it will go there, not the mounted directories.", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T22:26:21.297109+00:00", "message": "it wont commit command line things like -v", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T22:26:29.172708+00:00", "message": "Jmainguy, awesome. Thanks1", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T22:26:31.293800+00:00", "message": "!", "datatype": "message", "nick": "DrDamnit"}, {"timestamp": "2016-09-01T22:28:46.596857+00:00", "message": "hey guys, could someone help me with configuring my container such that it can reach my host's web server?", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:29:56.936790+00:00", "message": "k", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T22:30:16.484972+00:00", "message": "the container should have internet access b default", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T22:30:24.744178+00:00", "message": "so, should be able to hit your host pretty easy", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T22:30:34.649106+00:00", "message": "it does", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:30:35.972682+00:00", "message": "i can't", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:30:55.421522+00:00", "message": "this is what i'm doing.... docker run -it ubuntu bash", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:30:57.998949+00:00", "message": "dimaj: what is the ip of your host?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T22:32:00.574117+00:00", "message": "10.173.96.205", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:32:17.614805+00:00", "message": "okay, from inside the container, do curl http://10.173.96.205/", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T22:33:17.773782+00:00", "message": "give me a sec... need to reinstall curl", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:34:01.851899+00:00", "message": "while i'm updating my apt... what is the ip: 172.20.0.2 referring to?", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:34:12.073552+00:00", "message": "that's from within my container", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:35:48.113811+00:00", "message": "is that the eth0 ip inside the container? that's the ip of the container. you don't normally interact with that unless you're in another container on the same network.", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T22:36:15.637127+00:00", "message": "so, 172.20.0.1 is not my host machine?", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:36:42.454273+00:00", "message": "is that the ip of the docker0 bridge on the host?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T22:36:55.255687+00:00", "message": "no, that's from within the container", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:37:06.320403+00:00", "message": "yes, but what in the container?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T22:37:11.095436+00:00", "message": "the eth0 ip?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T22:37:14.567041+00:00", "message": "default gateway?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T22:37:16.496129+00:00", "message": "something else?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T22:37:17.758772+00:00", "message": "oh, sorry... eth0 = 172.17.0.2", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:37:19.714610+00:00", "message": "how are you finding it?", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T22:37:24.861775+00:00", "message": "from my container", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:37:27.333522+00:00", "message": "ifconfig", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:37:41.165911+00:00", "message": "k, then that means that 172.17.0.2 is your container's ip", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T22:37:46.535015+00:00", "message": "yes", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:37:53.509200+00:00", "message": "does that imply that 0.1 is my host?", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:37:57.893031+00:00", "message": "because I can ping it", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:38:06.781366+00:00", "message": "look on your host, and look at ifconfig there", "datatype": "message", "nick": "programmerq"}, {"timestamp": "2016-09-01T22:39:06.965701+00:00", "message": "my host does not have anything resembling that ip", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:39:33.066935+00:00", "message": "but in any case, curling my host's IP worked!", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:39:38.949596+00:00", "message": "huzzah", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T22:40:56.660878+00:00", "message": "thanks guys! much appreciate it!", "datatype": "message", "nick": "dimaj"}, {"timestamp": "2016-09-01T22:44:50.906874+00:00", "message": "hi", "datatype": "message", "nick": "coajaxial"}, {"timestamp": "2016-09-01T22:49:52.810778+00:00", "message": "hi", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T23:03:32.115692+00:00", "message": "I have some questions.. 1. is it right that u deploy docker containers responsible for one project (e.g. php, mysql, redis, nginx) to one server-instance each?", "datatype": "message", "nick": "coajaxial"}, {"timestamp": "2016-09-01T23:07:27.073141+00:00", "message": "Or does it make sense to deploy multiple applications with their very own container network on a single instance as far as horse-power allows it? nginx/apache vhosts would enable at least different domains on a single instance.", "datatype": "message", "nick": "coajaxial"}, {"timestamp": "2016-09-01T23:08:39.125135+00:00", "message": "I run many vm's and docker instances on one dedicated host", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T23:08:59.101332+00:00", "message": "the idea is to have each container running be a micro-service", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T23:09:10.989970+00:00", "message": "but you can have a million containers running on one dedi if you wanted", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T23:10:57.552330+00:00", "message": "yeah, with instance i mean vm's (via amazon ec2)", "datatype": "message", "nick": "coajaxial"}, {"timestamp": "2016-09-01T23:13:08.275391+00:00", "message": "so.. you say: it depends?", "datatype": "message", "nick": "coajaxial"}, {"timestamp": "2016-09-01T23:13:37.433689+00:00", "message": "if you wan to run lots of containers, you can do it on one vm", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T23:13:56.819474+00:00", "message": "if you want HA, you should spread it across multiple vm's with swarm / kubernetes", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T23:14:07.585049+00:00", "message": "all depends on what your trying to do for sure", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T23:14:59.376247+00:00", "message": "I am trying to create a docker-machine with virtualbox, but docker machine isn't respecting my parameters for disk and memory sizes. Thi is my command", "datatype": "message", "nick": "astropirate"}, {"timestamp": "2016-09-01T23:15:12.530084+00:00", "message": "docker-machine create --driver virtualbox foobar --virtualbox-disk-size \"100000\" --virtualbox-memory \"10000\" --virtualbox-cpu-counts \"5\"", "datatype": "message", "nick": "astropirate"}, {"timestamp": "2016-09-01T23:15:29.131968+00:00", "message": "It creates a VM with only 20GB disk size and ~1GB memory", "datatype": "message", "nick": "astropirate"}, {"timestamp": "2016-09-01T23:21:18.038082+00:00", "message": "Any ideas?", "datatype": "message", "nick": "astropirate"}, {"timestamp": "2016-09-01T23:21:31.244664+00:00", "message": "never used docker-machine myself, somebody else will have to answer", "datatype": "message", "nick": "Jmainguy"}, {"timestamp": "2016-09-01T23:21:37.756912+00:00", "message": "stick around, someone will", "datatype": "message", "nick": "Jmainguy"}]